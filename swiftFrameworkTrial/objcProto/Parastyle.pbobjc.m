// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: parastyle.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "Parastyle.pbobjc.h"
 #import "Margin.pbobjc.h"
 #import "Color.pbobjc.h"
 #import "Font.pbobjc.h"
 #import "Portionprops.pbobjc.h"
 #import "Horizontalaligntype.pbobjc.h"
 #import "Picturevalue.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - ParastyleRoot

@implementation ParastyleRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - ParastyleRoot_FileDescriptor

static GPBFileDescriptor *ParastyleRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"com.adventnet.zoho.show.slides"
                                                     syntax:GPBFileSyntaxProto2];
  }
  return descriptor;
}

#pragma mark - ParaStyle

@implementation ParaStyle

@dynamic hasHalign, halign;
@dynamic hasLevel, level;
@dynamic hasListStyle, listStyle;
@dynamic hasSpacing, spacing;
@dynamic hasMargin, margin;
@dynamic hasIndent, indent;
@dynamic hasDir, dir;
@dynamic hasDefPrProps, defPrProps;

typedef struct ParaStyle__storage_ {
  uint32_t _has_storage_[1];
  HorizontalAlignType halign;
  int32_t level;
  float indent;
  ParaStyle_Direction dir;
  ParaStyle_ListStyle *listStyle;
  ParaStyle_Spacing *spacing;
  Margin *margin;
  PortionProps *defPrProps;
} ParaStyle__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescriptionWithDefault fields[] = {
      {
        .defaultValue.valueEnum = HorizontalAlignType_Left,
        .core.name = "halign",
        .core.dataTypeSpecific.enumDescFunc = HorizontalAlignType_EnumDescriptor,
        .core.number = ParaStyle_FieldNumber_Halign,
        .core.hasIndex = 0,
        .core.offset = (uint32_t)offsetof(ParaStyle__storage_, halign),
        .core.flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasDefaultValue | GPBFieldHasEnumDescriptor),
        .core.dataType = GPBDataTypeEnum,
      },
      {
        .defaultValue.valueInt32 = 0,
        .core.name = "level",
        .core.dataTypeSpecific.className = NULL,
        .core.number = ParaStyle_FieldNumber_Level,
        .core.hasIndex = 1,
        .core.offset = (uint32_t)offsetof(ParaStyle__storage_, level),
        .core.flags = GPBFieldOptional,
        .core.dataType = GPBDataTypeInt32,
      },
      {
        .defaultValue.valueMessage = nil,
        .core.name = "listStyle",
        .core.dataTypeSpecific.className = GPBStringifySymbol(ParaStyle_ListStyle),
        .core.number = ParaStyle_FieldNumber_ListStyle,
        .core.hasIndex = 2,
        .core.offset = (uint32_t)offsetof(ParaStyle__storage_, listStyle),
        .core.flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeMessage,
      },
      {
        .defaultValue.valueMessage = nil,
        .core.name = "spacing",
        .core.dataTypeSpecific.className = GPBStringifySymbol(ParaStyle_Spacing),
        .core.number = ParaStyle_FieldNumber_Spacing,
        .core.hasIndex = 3,
        .core.offset = (uint32_t)offsetof(ParaStyle__storage_, spacing),
        .core.flags = GPBFieldOptional,
        .core.dataType = GPBDataTypeMessage,
      },
      {
        .defaultValue.valueMessage = nil,
        .core.name = "margin",
        .core.dataTypeSpecific.className = GPBStringifySymbol(Margin),
        .core.number = ParaStyle_FieldNumber_Margin,
        .core.hasIndex = 4,
        .core.offset = (uint32_t)offsetof(ParaStyle__storage_, margin),
        .core.flags = GPBFieldOptional,
        .core.dataType = GPBDataTypeMessage,
      },
      {
        .defaultValue.valueFloat = 0,
        .core.name = "indent",
        .core.dataTypeSpecific.className = NULL,
        .core.number = ParaStyle_FieldNumber_Indent,
        .core.hasIndex = 5,
        .core.offset = (uint32_t)offsetof(ParaStyle__storage_, indent),
        .core.flags = GPBFieldOptional,
        .core.dataType = GPBDataTypeFloat,
      },
      {
        .defaultValue.valueEnum = ParaStyle_Direction_Ltr,
        .core.name = "dir",
        .core.dataTypeSpecific.enumDescFunc = ParaStyle_Direction_EnumDescriptor,
        .core.number = ParaStyle_FieldNumber_Dir,
        .core.hasIndex = 6,
        .core.offset = (uint32_t)offsetof(ParaStyle__storage_, dir),
        .core.flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasDefaultValue | GPBFieldHasEnumDescriptor),
        .core.dataType = GPBDataTypeEnum,
      },
      {
        .defaultValue.valueMessage = nil,
        .core.name = "defPrProps",
        .core.dataTypeSpecific.className = GPBStringifySymbol(PortionProps),
        .core.number = ParaStyle_FieldNumber_DefPrProps,
        .core.hasIndex = 7,
        .core.offset = (uint32_t)offsetof(ParaStyle__storage_, defPrProps),
        .core.flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ParaStyle class]
                                     rootClass:[ParastyleRoot class]
                                          file:ParastyleRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescriptionWithDefault))
                                   storageSize:sizeof(ParaStyle__storage_)
                                         flags:GPBDescriptorInitializationFlag_FieldsWithDefault];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\003\t\000\010\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum ParaStyle_Direction

GPBEnumDescriptor *ParaStyle_Direction_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Ltr\000Rtl\000";
    static const int32_t values[] = {
        ParaStyle_Direction_Ltr,
        ParaStyle_Direction_Rtl,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(ParaStyle_Direction)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:ParaStyle_Direction_IsValidValue];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL ParaStyle_Direction_IsValidValue(int32_t value__) {
  switch (value__) {
    case ParaStyle_Direction_Ltr:
    case ParaStyle_Direction_Rtl:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - ParaStyle_ListStyle

@implementation ParaStyle_ListStyle

@dynamic hasBullet, bullet;
@dynamic hasFont, font;
@dynamic hasColor, color;
@dynamic hasSize, size;

typedef struct ParaStyle_ListStyle__storage_ {
  uint32_t _has_storage_[1];
  float size;
  ParaStyle_ListStyle_BulletData *bullet;
  Font *font;
  Color *color;
} ParaStyle_ListStyle__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "bullet",
        .dataTypeSpecific.className = GPBStringifySymbol(ParaStyle_ListStyle_BulletData),
        .number = ParaStyle_ListStyle_FieldNumber_Bullet,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ParaStyle_ListStyle__storage_, bullet),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "font",
        .dataTypeSpecific.className = GPBStringifySymbol(Font),
        .number = ParaStyle_ListStyle_FieldNumber_Font,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ParaStyle_ListStyle__storage_, font),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "color",
        .dataTypeSpecific.className = GPBStringifySymbol(Color),
        .number = ParaStyle_ListStyle_FieldNumber_Color,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(ParaStyle_ListStyle__storage_, color),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "size",
        .dataTypeSpecific.className = NULL,
        .number = ParaStyle_ListStyle_FieldNumber_Size,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(ParaStyle_ListStyle__storage_, size),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeFloat,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ParaStyle_ListStyle class]
                                     rootClass:[ParastyleRoot class]
                                          file:ParastyleRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ParaStyle_ListStyle__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    [localDescriptor setupContainingMessageClassName:GPBStringifySymbol(ParaStyle)];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ParaStyle_ListStyle_BulletData

@implementation ParaStyle_ListStyle_BulletData

@dynamic hasType, type;
@dynamic hasCharacter, character;
@dynamic hasNumber, number;
@dynamic hasPicture, picture;

typedef struct ParaStyle_ListStyle_BulletData__storage_ {
  uint32_t _has_storage_[1];
  ParaStyle_ListStyle_BulletData_BulletType type;
  ParaStyle_ListStyle_BulletData_CharacterBullet *character;
  ParaStyle_ListStyle_BulletData_NumberedBullet *number;
  ParaStyle_ListStyle_BulletData_PictureBullet *picture;
} ParaStyle_ListStyle_BulletData__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "type",
        .dataTypeSpecific.enumDescFunc = ParaStyle_ListStyle_BulletData_BulletType_EnumDescriptor,
        .number = ParaStyle_ListStyle_BulletData_FieldNumber_Type,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ParaStyle_ListStyle_BulletData__storage_, type),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldHasDefaultValue | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "character",
        .dataTypeSpecific.className = GPBStringifySymbol(ParaStyle_ListStyle_BulletData_CharacterBullet),
        .number = ParaStyle_ListStyle_BulletData_FieldNumber_Character,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ParaStyle_ListStyle_BulletData__storage_, character),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "number",
        .dataTypeSpecific.className = GPBStringifySymbol(ParaStyle_ListStyle_BulletData_NumberedBullet),
        .number = ParaStyle_ListStyle_BulletData_FieldNumber_Number,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(ParaStyle_ListStyle_BulletData__storage_, number),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "picture",
        .dataTypeSpecific.className = GPBStringifySymbol(ParaStyle_ListStyle_BulletData_PictureBullet),
        .number = ParaStyle_ListStyle_BulletData_FieldNumber_Picture,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(ParaStyle_ListStyle_BulletData__storage_, picture),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ParaStyle_ListStyle_BulletData class]
                                     rootClass:[ParastyleRoot class]
                                          file:ParastyleRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ParaStyle_ListStyle_BulletData__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    [localDescriptor setupContainingMessageClassName:GPBStringifySymbol(ParaStyle_ListStyle)];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum ParaStyle_ListStyle_BulletData_BulletType

GPBEnumDescriptor *ParaStyle_ListStyle_BulletData_BulletType_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "None\000Character\000Number\000Picture\000";
    static const int32_t values[] = {
        ParaStyle_ListStyle_BulletData_BulletType_None,
        ParaStyle_ListStyle_BulletData_BulletType_Character,
        ParaStyle_ListStyle_BulletData_BulletType_Number,
        ParaStyle_ListStyle_BulletData_BulletType_Picture,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(ParaStyle_ListStyle_BulletData_BulletType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:ParaStyle_ListStyle_BulletData_BulletType_IsValidValue];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL ParaStyle_ListStyle_BulletData_BulletType_IsValidValue(int32_t value__) {
  switch (value__) {
    case ParaStyle_ListStyle_BulletData_BulletType_None:
    case ParaStyle_ListStyle_BulletData_BulletType_Character:
    case ParaStyle_ListStyle_BulletData_BulletType_Number:
    case ParaStyle_ListStyle_BulletData_BulletType_Picture:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - ParaStyle_ListStyle_BulletData_CharacterBullet

@implementation ParaStyle_ListStyle_BulletData_CharacterBullet

@dynamic hasCh, ch;

typedef struct ParaStyle_ListStyle_BulletData_CharacterBullet__storage_ {
  uint32_t _has_storage_[1];
  NSString *ch;
} ParaStyle_ListStyle_BulletData_CharacterBullet__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "ch",
        .dataTypeSpecific.className = NULL,
        .number = ParaStyle_ListStyle_BulletData_CharacterBullet_FieldNumber_Ch,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ParaStyle_ListStyle_BulletData_CharacterBullet__storage_, ch),
        .flags = GPBFieldRequired,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ParaStyle_ListStyle_BulletData_CharacterBullet class]
                                     rootClass:[ParastyleRoot class]
                                          file:ParastyleRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ParaStyle_ListStyle_BulletData_CharacterBullet__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    [localDescriptor setupContainingMessageClassName:GPBStringifySymbol(ParaStyle_ListStyle_BulletData)];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ParaStyle_ListStyle_BulletData_NumberedBullet

@implementation ParaStyle_ListStyle_BulletData_NumberedBullet

@dynamic hasType, type;
@dynamic hasPrefix, prefix;
@dynamic hasSuffix, suffix;
@dynamic hasStartat, startat;

typedef struct ParaStyle_ListStyle_BulletData_NumberedBullet__storage_ {
  uint32_t _has_storage_[1];
  ParaStyle_ListStyle_BulletData_NumberedBullet_NumberedBulletType type;
  int32_t startat;
  NSString *prefix;
  NSString *suffix;
} ParaStyle_ListStyle_BulletData_NumberedBullet__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescriptionWithDefault fields[] = {
      {
        .defaultValue.valueEnum = ParaStyle_ListStyle_BulletData_NumberedBullet_NumberedBulletType_Numeric,
        .core.name = "type",
        .core.dataTypeSpecific.enumDescFunc = ParaStyle_ListStyle_BulletData_NumberedBullet_NumberedBulletType_EnumDescriptor,
        .core.number = ParaStyle_ListStyle_BulletData_NumberedBullet_FieldNumber_Type,
        .core.hasIndex = 0,
        .core.offset = (uint32_t)offsetof(ParaStyle_ListStyle_BulletData_NumberedBullet__storage_, type),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldHasEnumDescriptor),
        .core.dataType = GPBDataTypeEnum,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "prefix",
        .core.dataTypeSpecific.className = NULL,
        .core.number = ParaStyle_ListStyle_BulletData_NumberedBullet_FieldNumber_Prefix,
        .core.hasIndex = 1,
        .core.offset = (uint32_t)offsetof(ParaStyle_ListStyle_BulletData_NumberedBullet__storage_, prefix),
        .core.flags = GPBFieldOptional,
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "suffix",
        .core.dataTypeSpecific.className = NULL,
        .core.number = ParaStyle_ListStyle_BulletData_NumberedBullet_FieldNumber_Suffix,
        .core.hasIndex = 2,
        .core.offset = (uint32_t)offsetof(ParaStyle_ListStyle_BulletData_NumberedBullet__storage_, suffix),
        .core.flags = GPBFieldOptional,
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueInt32 = 1,
        .core.name = "startat",
        .core.dataTypeSpecific.className = NULL,
        .core.number = ParaStyle_ListStyle_BulletData_NumberedBullet_FieldNumber_Startat,
        .core.hasIndex = 3,
        .core.offset = (uint32_t)offsetof(ParaStyle_ListStyle_BulletData_NumberedBullet__storage_, startat),
        .core.flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasDefaultValue),
        .core.dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ParaStyle_ListStyle_BulletData_NumberedBullet class]
                                     rootClass:[ParastyleRoot class]
                                          file:ParastyleRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescriptionWithDefault))
                                   storageSize:sizeof(ParaStyle_ListStyle_BulletData_NumberedBullet__storage_)
                                         flags:GPBDescriptorInitializationFlag_FieldsWithDefault];
    [localDescriptor setupContainingMessageClassName:GPBStringifySymbol(ParaStyle_ListStyle_BulletData)];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum ParaStyle_ListStyle_BulletData_NumberedBullet_NumberedBulletType

GPBEnumDescriptor *ParaStyle_ListStyle_BulletData_NumberedBullet_NumberedBulletType_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Numeric\000Ucroman\000Lcroman\000Ucalphabet\000Lcalp"
        "habet\000";
    static const int32_t values[] = {
        ParaStyle_ListStyle_BulletData_NumberedBullet_NumberedBulletType_Numeric,
        ParaStyle_ListStyle_BulletData_NumberedBullet_NumberedBulletType_Ucroman,
        ParaStyle_ListStyle_BulletData_NumberedBullet_NumberedBulletType_Lcroman,
        ParaStyle_ListStyle_BulletData_NumberedBullet_NumberedBulletType_Ucalphabet,
        ParaStyle_ListStyle_BulletData_NumberedBullet_NumberedBulletType_Lcalphabet,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(ParaStyle_ListStyle_BulletData_NumberedBullet_NumberedBulletType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:ParaStyle_ListStyle_BulletData_NumberedBullet_NumberedBulletType_IsValidValue];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL ParaStyle_ListStyle_BulletData_NumberedBullet_NumberedBulletType_IsValidValue(int32_t value__) {
  switch (value__) {
    case ParaStyle_ListStyle_BulletData_NumberedBullet_NumberedBulletType_Numeric:
    case ParaStyle_ListStyle_BulletData_NumberedBullet_NumberedBulletType_Ucroman:
    case ParaStyle_ListStyle_BulletData_NumberedBullet_NumberedBulletType_Lcroman:
    case ParaStyle_ListStyle_BulletData_NumberedBullet_NumberedBulletType_Ucalphabet:
    case ParaStyle_ListStyle_BulletData_NumberedBullet_NumberedBulletType_Lcalphabet:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - ParaStyle_ListStyle_BulletData_PictureBullet

@implementation ParaStyle_ListStyle_BulletData_PictureBullet

@dynamic hasValue, value;

typedef struct ParaStyle_ListStyle_BulletData_PictureBullet__storage_ {
  uint32_t _has_storage_[1];
  PictureValue *value;
} ParaStyle_ListStyle_BulletData_PictureBullet__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "value",
        .dataTypeSpecific.className = GPBStringifySymbol(PictureValue),
        .number = ParaStyle_ListStyle_BulletData_PictureBullet_FieldNumber_Value,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ParaStyle_ListStyle_BulletData_PictureBullet__storage_, value),
        .flags = GPBFieldRequired,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ParaStyle_ListStyle_BulletData_PictureBullet class]
                                     rootClass:[ParastyleRoot class]
                                          file:ParastyleRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ParaStyle_ListStyle_BulletData_PictureBullet__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    [localDescriptor setupContainingMessageClassName:GPBStringifySymbol(ParaStyle_ListStyle_BulletData)];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ParaStyle_Spacing

@implementation ParaStyle_Spacing

@dynamic hasLine, line;
@dynamic hasBefore, before;
@dynamic hasAfter, after;

typedef struct ParaStyle_Spacing__storage_ {
  uint32_t _has_storage_[1];
  ParaStyle_Spacing_SpacingValue *line;
  ParaStyle_Spacing_SpacingValue *before;
  ParaStyle_Spacing_SpacingValue *after;
} ParaStyle_Spacing__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "line",
        .dataTypeSpecific.className = GPBStringifySymbol(ParaStyle_Spacing_SpacingValue),
        .number = ParaStyle_Spacing_FieldNumber_Line,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ParaStyle_Spacing__storage_, line),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "before",
        .dataTypeSpecific.className = GPBStringifySymbol(ParaStyle_Spacing_SpacingValue),
        .number = ParaStyle_Spacing_FieldNumber_Before,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ParaStyle_Spacing__storage_, before),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "after",
        .dataTypeSpecific.className = GPBStringifySymbol(ParaStyle_Spacing_SpacingValue),
        .number = ParaStyle_Spacing_FieldNumber_After,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(ParaStyle_Spacing__storage_, after),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ParaStyle_Spacing class]
                                     rootClass:[ParastyleRoot class]
                                          file:ParastyleRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ParaStyle_Spacing__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    [localDescriptor setupContainingMessageClassName:GPBStringifySymbol(ParaStyle)];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ParaStyle_Spacing_SpacingValue

@implementation ParaStyle_Spacing_SpacingValue

@dynamic hasType, type;
@dynamic hasPercent, percent;
@dynamic hasAbsolute, absolute;

typedef struct ParaStyle_Spacing_SpacingValue__storage_ {
  uint32_t _has_storage_[1];
  ParaStyle_Spacing_SpacingValue_SpacingValueType type;
  float percent;
  float absolute;
} ParaStyle_Spacing_SpacingValue__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "type",
        .dataTypeSpecific.enumDescFunc = ParaStyle_Spacing_SpacingValue_SpacingValueType_EnumDescriptor,
        .number = ParaStyle_Spacing_SpacingValue_FieldNumber_Type,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ParaStyle_Spacing_SpacingValue__storage_, type),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldHasDefaultValue | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "percent",
        .dataTypeSpecific.className = NULL,
        .number = ParaStyle_Spacing_SpacingValue_FieldNumber_Percent,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ParaStyle_Spacing_SpacingValue__storage_, percent),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeFloat,
      },
      {
        .name = "absolute",
        .dataTypeSpecific.className = NULL,
        .number = ParaStyle_Spacing_SpacingValue_FieldNumber_Absolute,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(ParaStyle_Spacing_SpacingValue__storage_, absolute),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeFloat,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ParaStyle_Spacing_SpacingValue class]
                                     rootClass:[ParastyleRoot class]
                                          file:ParastyleRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ParaStyle_Spacing_SpacingValue__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    [localDescriptor setupContainingMessageClassName:GPBStringifySymbol(ParaStyle_Spacing)];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum ParaStyle_Spacing_SpacingValue_SpacingValueType

GPBEnumDescriptor *ParaStyle_Spacing_SpacingValue_SpacingValueType_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Percent\000Absolute\000";
    static const int32_t values[] = {
        ParaStyle_Spacing_SpacingValue_SpacingValueType_Percent,
        ParaStyle_Spacing_SpacingValue_SpacingValueType_Absolute,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(ParaStyle_Spacing_SpacingValue_SpacingValueType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:ParaStyle_Spacing_SpacingValue_SpacingValueType_IsValidValue];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL ParaStyle_Spacing_SpacingValue_SpacingValueType_IsValidValue(int32_t value__) {
  switch (value__) {
    case ParaStyle_Spacing_SpacingValue_SpacingValueType_Percent:
    case ParaStyle_Spacing_SpacingValue_SpacingValueType_Absolute:
      return YES;
    default:
      return NO;
  }
}


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
