// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: shapeobject.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Connector;
@class GraphicFrame;
@class NonVisualGroupShapeProps;
@class Paragraph;
@class Picture;
@class Properties;
@class Shape;
@class ShapeObject;
@class ShapeObject_GroupShape;
GPB_ENUM_FWD_DECLARE(ShapeNodeType);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - ShapeobjectRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface ShapeobjectRoot : GPBRootObject
@end

#pragma mark - ShapeObject

typedef GPB_ENUM(ShapeObject_FieldNumber) {
  ShapeObject_FieldNumber_Type = 1,
  ShapeObject_FieldNumber_Shape = 2,
  ShapeObject_FieldNumber_Picture = 3,
  ShapeObject_FieldNumber_Connector = 4,
  ShapeObject_FieldNumber_Groupshape = 5,
  ShapeObject_FieldNumber_Graphicframe = 6,
  ShapeObject_FieldNumber_Paragraph = 7,
};

@interface ShapeObject : GPBMessage

@property(nonatomic, readwrite) enum ShapeNodeType type;

@property(nonatomic, readwrite) BOOL hasType;
/** Shape */
@property(nonatomic, readwrite, strong, null_resettable) Shape *shape;
/** Test to see if @c shape has been set. */
@property(nonatomic, readwrite) BOOL hasShape;

/** Picture */
@property(nonatomic, readwrite, strong, null_resettable) Picture *picture;
/** Test to see if @c picture has been set. */
@property(nonatomic, readwrite) BOOL hasPicture;

/** Connector */
@property(nonatomic, readwrite, strong, null_resettable) Connector *connector;
/** Test to see if @c connector has been set. */
@property(nonatomic, readwrite) BOOL hasConnector;

/** Group Shape */
@property(nonatomic, readwrite, strong, null_resettable) ShapeObject_GroupShape *groupshape;
/** Test to see if @c groupshape has been set. */
@property(nonatomic, readwrite) BOOL hasGroupshape;

/** GroupFrame to contain Tables, Charts and SmartArts. */
@property(nonatomic, readwrite, strong, null_resettable) GraphicFrame *graphicframe;
/** Test to see if @c graphicframe has been set. */
@property(nonatomic, readwrite) BOOL hasGraphicframe;

@property(nonatomic, readwrite, strong, null_resettable) Paragraph *paragraph;
/** Test to see if @c paragraph has been set. */
@property(nonatomic, readwrite) BOOL hasParagraph;

@end

#pragma mark - ShapeObject_GroupShape

typedef GPB_ENUM(ShapeObject_GroupShape_FieldNumber) {
  ShapeObject_GroupShape_FieldNumber_ShapesArray = 1,
  ShapeObject_GroupShape_FieldNumber_NvOprops = 2,
  ShapeObject_GroupShape_FieldNumber_Props = 3,
};

@interface ShapeObject_GroupShape : GPBMessage

/** Shapes Array. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ShapeObject*> *shapesArray;
/** The number of items in @c shapesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger shapesArray_Count;

/** Non visual group shape props. */
@property(nonatomic, readwrite, strong, null_resettable) NonVisualGroupShapeProps *nvOprops;
/** Test to see if @c nvOprops has been set. */
@property(nonatomic, readwrite) BOOL hasNvOprops;

/** Properties. */
@property(nonatomic, readwrite, strong, null_resettable) Properties *props;
/** Test to see if @c props has been set. */
@property(nonatomic, readwrite) BOOL hasProps;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
