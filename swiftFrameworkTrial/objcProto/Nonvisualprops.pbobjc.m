// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nonvisualprops.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "Nonvisualprops.pbobjc.h"
 #import "Placeholder.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - NonvisualpropsRoot

@implementation NonvisualpropsRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - NonvisualpropsRoot_FileDescriptor

static GPBFileDescriptor *NonvisualpropsRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"com.adventnet.zoho.show.slides"
                                                     syntax:GPBFileSyntaxProto2];
  }
  return descriptor;
}

#pragma mark - NonVisualProps

@implementation NonVisualProps

@dynamic hasPlaceHolder, placeHolder;
@dynamic hasEmbed, embed;
@dynamic hasUserDrawn, userDrawn;

typedef struct NonVisualProps__storage_ {
  uint32_t _has_storage_[1];
  PlaceHolder *placeHolder;
  NonVisualProps_EmbedFile *embed;
} NonVisualProps__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "placeHolder",
        .dataTypeSpecific.className = GPBStringifySymbol(PlaceHolder),
        .number = NonVisualProps_FieldNumber_PlaceHolder,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(NonVisualProps__storage_, placeHolder),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "embed",
        .dataTypeSpecific.className = GPBStringifySymbol(NonVisualProps_EmbedFile),
        .number = NonVisualProps_FieldNumber_Embed,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(NonVisualProps__storage_, embed),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "userDrawn",
        .dataTypeSpecific.className = NULL,
        .number = NonVisualProps_FieldNumber_UserDrawn,
        .hasIndex = 2,
        .offset = 3,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[NonVisualProps class]
                                     rootClass:[NonvisualpropsRoot class]
                                          file:NonvisualpropsRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(NonVisualProps__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\013\000\003\t\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - NonVisualProps_EmbedFile

@implementation NonVisualProps_EmbedFile

@dynamic hasType, type;
@dynamic hasCode, code;
@dynamic hasSite, site;
@dynamic hasTwitter, twitter;
@dynamic searchKeysArray, searchKeysArray_Count;

typedef struct NonVisualProps_EmbedFile__storage_ {
  uint32_t _has_storage_[1];
  NonVisualProps_EmbedFile_EmbedType type;
  NonVisualProps_EmbedFile_EmbeddedSite site;
  NSString *code;
  NonVisualProps_EmbedFile_TwitterData *twitter;
  NSMutableArray *searchKeysArray;
} NonVisualProps_EmbedFile__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "type",
        .dataTypeSpecific.enumDescFunc = NonVisualProps_EmbedFile_EmbedType_EnumDescriptor,
        .number = NonVisualProps_EmbedFile_FieldNumber_Type,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(NonVisualProps_EmbedFile__storage_, type),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "code",
        .dataTypeSpecific.className = NULL,
        .number = NonVisualProps_EmbedFile_FieldNumber_Code,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(NonVisualProps_EmbedFile__storage_, code),
        .flags = GPBFieldRequired,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "site",
        .dataTypeSpecific.enumDescFunc = NonVisualProps_EmbedFile_EmbeddedSite_EnumDescriptor,
        .number = NonVisualProps_EmbedFile_FieldNumber_Site,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(NonVisualProps_EmbedFile__storage_, site),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "twitter",
        .dataTypeSpecific.className = GPBStringifySymbol(NonVisualProps_EmbedFile_TwitterData),
        .number = NonVisualProps_EmbedFile_FieldNumber_Twitter,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(NonVisualProps_EmbedFile__storage_, twitter),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "searchKeysArray",
        .dataTypeSpecific.className = NULL,
        .number = NonVisualProps_EmbedFile_FieldNumber_SearchKeysArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(NonVisualProps_EmbedFile__storage_, searchKeysArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[NonVisualProps_EmbedFile class]
                                     rootClass:[NonvisualpropsRoot class]
                                          file:NonvisualpropsRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(NonVisualProps_EmbedFile__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\005\000searchKeys\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    [localDescriptor setupContainingMessageClassName:GPBStringifySymbol(NonVisualProps)];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum NonVisualProps_EmbedFile_EmbedType

GPBEnumDescriptor *NonVisualProps_EmbedFile_EmbedType_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Internal\000External\000";
    static const int32_t values[] = {
        NonVisualProps_EmbedFile_EmbedType_Internal,
        NonVisualProps_EmbedFile_EmbedType_External,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(NonVisualProps_EmbedFile_EmbedType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:NonVisualProps_EmbedFile_EmbedType_IsValidValue];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL NonVisualProps_EmbedFile_EmbedType_IsValidValue(int32_t value__) {
  switch (value__) {
    case NonVisualProps_EmbedFile_EmbedType_Internal:
    case NonVisualProps_EmbedFile_EmbedType_External:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum NonVisualProps_EmbedFile_EmbeddedSite

GPBEnumDescriptor *NonVisualProps_EmbedFile_EmbeddedSite_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Youtube\000Twitter\000Dailymotion\000";
    static const int32_t values[] = {
        NonVisualProps_EmbedFile_EmbeddedSite_Youtube,
        NonVisualProps_EmbedFile_EmbeddedSite_Twitter,
        NonVisualProps_EmbedFile_EmbeddedSite_Dailymotion,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(NonVisualProps_EmbedFile_EmbeddedSite)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:NonVisualProps_EmbedFile_EmbeddedSite_IsValidValue];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL NonVisualProps_EmbedFile_EmbeddedSite_IsValidValue(int32_t value__) {
  switch (value__) {
    case NonVisualProps_EmbedFile_EmbeddedSite_Youtube:
    case NonVisualProps_EmbedFile_EmbeddedSite_Twitter:
    case NonVisualProps_EmbedFile_EmbeddedSite_Dailymotion:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - NonVisualProps_EmbedFile_TwitterData

@implementation NonVisualProps_EmbedFile_TwitterData

@dynamic hasType, type;
@dynamic keysArray, keysArray_Count;
@dynamic hasUpdate, update;
@dynamic idsArray, idsArray_Count;
@dynamic hasUserId, userId;

typedef struct NonVisualProps_EmbedFile_TwitterData__storage_ {
  uint32_t _has_storage_[1];
  NonVisualProps_EmbedFile_TwitterData_TwitterType type;
  NonVisualProps_EmbedFile_TwitterData_UpdateType update;
  NSMutableArray *keysArray;
  NSMutableArray *idsArray;
  NSString *userId;
} NonVisualProps_EmbedFile_TwitterData__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "type",
        .dataTypeSpecific.enumDescFunc = NonVisualProps_EmbedFile_TwitterData_TwitterType_EnumDescriptor,
        .number = NonVisualProps_EmbedFile_TwitterData_FieldNumber_Type,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(NonVisualProps_EmbedFile_TwitterData__storage_, type),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "keysArray",
        .dataTypeSpecific.className = NULL,
        .number = NonVisualProps_EmbedFile_TwitterData_FieldNumber_KeysArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(NonVisualProps_EmbedFile_TwitterData__storage_, keysArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "update",
        .dataTypeSpecific.enumDescFunc = NonVisualProps_EmbedFile_TwitterData_UpdateType_EnumDescriptor,
        .number = NonVisualProps_EmbedFile_TwitterData_FieldNumber_Update,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(NonVisualProps_EmbedFile_TwitterData__storage_, update),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "idsArray",
        .dataTypeSpecific.className = NULL,
        .number = NonVisualProps_EmbedFile_TwitterData_FieldNumber_IdsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(NonVisualProps_EmbedFile_TwitterData__storage_, idsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = NonVisualProps_EmbedFile_TwitterData_FieldNumber_UserId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(NonVisualProps_EmbedFile_TwitterData__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[NonVisualProps_EmbedFile_TwitterData class]
                                     rootClass:[NonvisualpropsRoot class]
                                          file:NonvisualpropsRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(NonVisualProps_EmbedFile_TwitterData__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\005\006\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    [localDescriptor setupContainingMessageClassName:GPBStringifySymbol(NonVisualProps_EmbedFile)];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum NonVisualProps_EmbedFile_TwitterData_TwitterType

GPBEnumDescriptor *NonVisualProps_EmbedFile_TwitterData_TwitterType_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Live\000Marked\000";
    static const int32_t values[] = {
        NonVisualProps_EmbedFile_TwitterData_TwitterType_Live,
        NonVisualProps_EmbedFile_TwitterData_TwitterType_Marked,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(NonVisualProps_EmbedFile_TwitterData_TwitterType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:NonVisualProps_EmbedFile_TwitterData_TwitterType_IsValidValue];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL NonVisualProps_EmbedFile_TwitterData_TwitterType_IsValidValue(int32_t value__) {
  switch (value__) {
    case NonVisualProps_EmbedFile_TwitterData_TwitterType_Live:
    case NonVisualProps_EmbedFile_TwitterData_TwitterType_Marked:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum NonVisualProps_EmbedFile_TwitterData_UpdateType

GPBEnumDescriptor *NonVisualProps_EmbedFile_TwitterData_UpdateType_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Manual\000Automatic\000";
    static const int32_t values[] = {
        NonVisualProps_EmbedFile_TwitterData_UpdateType_Manual,
        NonVisualProps_EmbedFile_TwitterData_UpdateType_Automatic,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(NonVisualProps_EmbedFile_TwitterData_UpdateType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:NonVisualProps_EmbedFile_TwitterData_UpdateType_IsValidValue];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL NonVisualProps_EmbedFile_TwitterData_UpdateType_IsValidValue(int32_t value__) {
  switch (value__) {
    case NonVisualProps_EmbedFile_TwitterData_UpdateType_Manual:
    case NonVisualProps_EmbedFile_TwitterData_UpdateType_Automatic:
      return YES;
    default:
      return NO;
  }
}


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
