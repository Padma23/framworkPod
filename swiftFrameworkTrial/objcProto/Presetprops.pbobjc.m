// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: presetprops.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "Presetprops.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - PresetpropsRoot

@implementation PresetpropsRoot

// No extensions in the file and no imports, so no need to generate
// +extensionRegistry.

@end

#pragma mark - Enum PresetProps

GPBEnumDescriptor *PresetProps_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Preset1\000Preset2\000Preset3\000Preset4\000Preset5\000"
        "Preset6\000Preset7\000Preset8\000Preset9\000Preset10"
        "\000Preset11\000Preset12\000Preset13\000Preset14\000";
    static const int32_t values[] = {
        PresetProps_Preset1,
        PresetProps_Preset2,
        PresetProps_Preset3,
        PresetProps_Preset4,
        PresetProps_Preset5,
        PresetProps_Preset6,
        PresetProps_Preset7,
        PresetProps_Preset8,
        PresetProps_Preset9,
        PresetProps_Preset10,
        PresetProps_Preset11,
        PresetProps_Preset12,
        PresetProps_Preset13,
        PresetProps_Preset14,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PresetProps)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PresetProps_IsValidValue];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PresetProps_IsValidValue(int32_t value__) {
  switch (value__) {
    case PresetProps_Preset1:
    case PresetProps_Preset2:
    case PresetProps_Preset3:
    case PresetProps_Preset4:
    case PresetProps_Preset5:
    case PresetProps_Preset6:
    case PresetProps_Preset7:
    case PresetProps_Preset8:
    case PresetProps_Preset9:
    case PresetProps_Preset10:
    case PresetProps_Preset11:
    case PresetProps_Preset12:
    case PresetProps_Preset13:
    case PresetProps_Preset14:
      return YES;
    default:
      return NO;
  }
}


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
