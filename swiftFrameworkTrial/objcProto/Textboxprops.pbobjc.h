// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: textboxprops.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Margin;
@class TextBoxProps_AutoFit;
@class TextBoxProps_AutoFit_NormalAutoFit;
@class TextBoxProps_ColumnLayout;
@class TextBoxProps_ParaSpacingProps;
GPB_ENUM_FWD_DECLARE(VerticalAlignType);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum TextBoxProps_TextWrap

/** Wrap text. */
typedef GPB_ENUM(TextBoxProps_TextWrap) {
  /** Do not wrap */
  TextBoxProps_TextWrap_None = 0,

  /** Within boundary limits. */
  TextBoxProps_TextWrap_Rect = 1,
};

GPBEnumDescriptor *TextBoxProps_TextWrap_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL TextBoxProps_TextWrap_IsValidValue(int32_t value);

#pragma mark - Enum TextBoxProps_AutoFit_AutoFitType

typedef GPB_ENUM(TextBoxProps_AutoFit_AutoFitType) {
  TextBoxProps_AutoFit_AutoFitType_None = 0,
  TextBoxProps_AutoFit_AutoFitType_Normal = 1,

  /** Resize the shape to fit the text. */
  TextBoxProps_AutoFit_AutoFitType_Shape = 2,
};

GPBEnumDescriptor *TextBoxProps_AutoFit_AutoFitType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL TextBoxProps_AutoFit_AutoFitType_IsValidValue(int32_t value);

#pragma mark - TextboxpropsRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface TextboxpropsRoot : GPBRootObject
@end

#pragma mark - TextBoxProps

typedef GPB_ENUM(TextBoxProps_FieldNumber) {
  TextBoxProps_FieldNumber_Valign = 1,
  TextBoxProps_FieldNumber_Inset = 2,
  TextBoxProps_FieldNumber_Column = 3,
  TextBoxProps_FieldNumber_AutoFit = 4,
  TextBoxProps_FieldNumber_SpcProps = 5,
  TextBoxProps_FieldNumber_Wrap = 6,
};

@interface TextBoxProps : GPBMessage

/** Text Vertical alignment. This aligns all the paras inside the text box. */
@property(nonatomic, readwrite) enum VerticalAlignType valign;

@property(nonatomic, readwrite) BOOL hasValign;
/** Internal Margin for the text box. */
@property(nonatomic, readwrite, strong, null_resettable) Margin *inset;
/** Test to see if @c inset has been set. */
@property(nonatomic, readwrite) BOOL hasInset;

/** Column Layout. */
@property(nonatomic, readwrite, strong, null_resettable) TextBoxProps_ColumnLayout *column;
/** Test to see if @c column has been set. */
@property(nonatomic, readwrite) BOOL hasColumn;

/** Auto Fit the text. */
@property(nonatomic, readwrite, strong, null_resettable) TextBoxProps_AutoFit *autoFit;
/** Test to see if @c autoFit has been set. */
@property(nonatomic, readwrite) BOOL hasAutoFit;

@property(nonatomic, readwrite, strong, null_resettable) TextBoxProps_ParaSpacingProps *spcProps;
/** Test to see if @c spcProps has been set. */
@property(nonatomic, readwrite) BOOL hasSpcProps;

@property(nonatomic, readwrite) TextBoxProps_TextWrap wrap;

@property(nonatomic, readwrite) BOOL hasWrap;
@end

#pragma mark - TextBoxProps_ColumnLayout

typedef GPB_ENUM(TextBoxProps_ColumnLayout_FieldNumber) {
  TextBoxProps_ColumnLayout_FieldNumber_Num = 1,
  TextBoxProps_ColumnLayout_FieldNumber_Gap = 2,
};

@interface TextBoxProps_ColumnLayout : GPBMessage

/** Number of Columns */
@property(nonatomic, readwrite) int32_t num;

@property(nonatomic, readwrite) BOOL hasNum;
/** Column gap */
@property(nonatomic, readwrite) int32_t gap;

@property(nonatomic, readwrite) BOOL hasGap;
@end

#pragma mark - TextBoxProps_AutoFit

typedef GPB_ENUM(TextBoxProps_AutoFit_FieldNumber) {
  TextBoxProps_AutoFit_FieldNumber_Type = 1,
  TextBoxProps_AutoFit_FieldNumber_Normal = 2,
};

@interface TextBoxProps_AutoFit : GPBMessage

/** None Auto Fit. */
@property(nonatomic, readwrite) TextBoxProps_AutoFit_AutoFitType type;

@property(nonatomic, readwrite) BOOL hasType;
@property(nonatomic, readwrite, strong, null_resettable) TextBoxProps_AutoFit_NormalAutoFit *normal;
/** Test to see if @c normal has been set. */
@property(nonatomic, readwrite) BOOL hasNormal;

@end

#pragma mark - TextBoxProps_AutoFit_NormalAutoFit

typedef GPB_ENUM(TextBoxProps_AutoFit_NormalAutoFit_FieldNumber) {
  TextBoxProps_AutoFit_NormalAutoFit_FieldNumber_FontScale = 1,
  TextBoxProps_AutoFit_NormalAutoFit_FieldNumber_LineSpaceScale = 2,
};

@interface TextBoxProps_AutoFit_NormalAutoFit : GPBMessage

/** Varies from 0 - any , mostly less than 1 - 0.9 represents 90% fontScale */
@property(nonatomic, readwrite) float fontScale;

@property(nonatomic, readwrite) BOOL hasFontScale;
/** Varies from 0 - any , mostly less than 1 - 0.9 represents 90% lineSpace Scale. */
@property(nonatomic, readwrite) float lineSpaceScale;

@property(nonatomic, readwrite) BOOL hasLineSpaceScale;
@end

#pragma mark - TextBoxProps_ParaSpacingProps

typedef GPB_ENUM(TextBoxProps_ParaSpacingProps_FieldNumber) {
  TextBoxProps_ParaSpacingProps_FieldNumber_SpcBefFirst = 1,
  TextBoxProps_ParaSpacingProps_FieldNumber_SpcAftLast = 2,
};

@interface TextBoxProps_ParaSpacingProps : GPBMessage

/** If set, space before attribute in para spacing should work for first para also. */
@property(nonatomic, readwrite) BOOL spcBefFirst;

@property(nonatomic, readwrite) BOOL hasSpcBefFirst;
/** If set , space after attribute in para spacing should work for last para also. */
@property(nonatomic, readwrite) BOOL spcAftLast;

@property(nonatomic, readwrite) BOOL hasSpcAftLast;
@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
