// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: textstyle.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "Textstyle.pbobjc.h"
 #import "Parastyle.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - TextstyleRoot

@implementation TextstyleRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - TextstyleRoot_FileDescriptor

static GPBFileDescriptor *TextstyleRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"com.adventnet.zoho.show.slides"
                                                     syntax:GPBFileSyntaxProto2];
  }
  return descriptor;
}

#pragma mark - TextStyle

@implementation TextStyle

@dynamic titleStylesArray, titleStylesArray_Count;
@dynamic txtbodyStylesArray, txtbodyStylesArray_Count;
@dynamic otherStylesArray, otherStylesArray_Count;

typedef struct TextStyle__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *titleStylesArray;
  NSMutableArray *txtbodyStylesArray;
  NSMutableArray *otherStylesArray;
} TextStyle__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "titleStylesArray",
        .dataTypeSpecific.className = GPBStringifySymbol(ParaStyle),
        .number = TextStyle_FieldNumber_TitleStylesArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(TextStyle__storage_, titleStylesArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "txtbodyStylesArray",
        .dataTypeSpecific.className = GPBStringifySymbol(ParaStyle),
        .number = TextStyle_FieldNumber_TxtbodyStylesArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(TextStyle__storage_, txtbodyStylesArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "otherStylesArray",
        .dataTypeSpecific.className = GPBStringifySymbol(ParaStyle),
        .number = TextStyle_FieldNumber_OtherStylesArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(TextStyle__storage_, otherStylesArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[TextStyle class]
                                     rootClass:[TextstyleRoot class]
                                          file:TextstyleRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(TextStyle__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001\000titleStyles\000\002\000txtbodyStyles\000\003\000otherSt"
        "yles\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
