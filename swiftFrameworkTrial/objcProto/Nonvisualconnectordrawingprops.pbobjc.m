// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nonvisualconnectordrawingprops.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "Nonvisualconnectordrawingprops.pbobjc.h"
 #import "Locks.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - NonvisualconnectordrawingpropsRoot

@implementation NonvisualconnectordrawingpropsRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - NonvisualconnectordrawingpropsRoot_FileDescriptor

static GPBFileDescriptor *NonvisualconnectordrawingpropsRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"com.adventnet.zoho.show.slides"
                                                     syntax:GPBFileSyntaxProto2];
  }
  return descriptor;
}

#pragma mark - NonVisualConnectorDrawingProps

@implementation NonVisualConnectorDrawingProps

@dynamic hasLocks, locks;
@dynamic hasStart, start;
@dynamic hasEnd, end;

typedef struct NonVisualConnectorDrawingProps__storage_ {
  uint32_t _has_storage_[1];
  Locks *locks;
  NonVisualConnectorDrawingProps_Connection *start;
  NonVisualConnectorDrawingProps_Connection *end;
} NonVisualConnectorDrawingProps__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "locks",
        .dataTypeSpecific.className = GPBStringifySymbol(Locks),
        .number = NonVisualConnectorDrawingProps_FieldNumber_Locks,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(NonVisualConnectorDrawingProps__storage_, locks),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "start",
        .dataTypeSpecific.className = GPBStringifySymbol(NonVisualConnectorDrawingProps_Connection),
        .number = NonVisualConnectorDrawingProps_FieldNumber_Start,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(NonVisualConnectorDrawingProps__storage_, start),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "end",
        .dataTypeSpecific.className = GPBStringifySymbol(NonVisualConnectorDrawingProps_Connection),
        .number = NonVisualConnectorDrawingProps_FieldNumber_End,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(NonVisualConnectorDrawingProps__storage_, end),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[NonVisualConnectorDrawingProps class]
                                     rootClass:[NonvisualconnectordrawingpropsRoot class]
                                          file:NonvisualconnectordrawingpropsRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(NonVisualConnectorDrawingProps__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - NonVisualConnectorDrawingProps_Connection

@implementation NonVisualConnectorDrawingProps_Connection

@dynamic hasId_p, id_p;
@dynamic hasIndex, index;

typedef struct NonVisualConnectorDrawingProps_Connection__storage_ {
  uint32_t _has_storage_[1];
  int32_t index;
  NSString *id_p;
} NonVisualConnectorDrawingProps_Connection__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = NonVisualConnectorDrawingProps_Connection_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(NonVisualConnectorDrawingProps_Connection__storage_, id_p),
        .flags = GPBFieldRequired,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "index",
        .dataTypeSpecific.className = NULL,
        .number = NonVisualConnectorDrawingProps_Connection_FieldNumber_Index,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(NonVisualConnectorDrawingProps_Connection__storage_, index),
        .flags = GPBFieldRequired,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[NonVisualConnectorDrawingProps_Connection class]
                                     rootClass:[NonvisualconnectordrawingpropsRoot class]
                                          file:NonvisualconnectordrawingpropsRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(NonVisualConnectorDrawingProps_Connection__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    [localDescriptor setupContainingMessageClassName:GPBStringifySymbol(NonVisualConnectorDrawingProps)];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
