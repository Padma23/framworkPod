// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: slidedata.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class HideMaster;
@class Locks;
@class SlideData_Layout;
@class ThemeSupercede;
GPB_ENUM_FWD_DECLARE(SlideType);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum SlideData_Layout_LayoutType

typedef GPB_ENUM(SlideData_Layout_LayoutType) {
  /** Blank Slide */
  SlideData_Layout_LayoutType_Blank = 0,

  /** Title and SubTitle slide. */
  SlideData_Layout_LayoutType_Title = 1,

  /** Title and Object */
  SlideData_Layout_LayoutType_Obj = 2,

  /** Section Header and SubTitle. */
  SlideData_Layout_LayoutType_SecHeader = 3,

  /** Title , Object On left , Object On right. */
  SlideData_Layout_LayoutType_TwoObj = 4,

  /** Title and Text. */
  SlideData_Layout_LayoutType_Txt = 5,

  /** Title , Text On left , Text On right. */
  SlideData_Layout_LayoutType_TwoTxt = 6,

  /** Title , Two Object each with text on top. */
  SlideData_Layout_LayoutType_TwoObjTwoTxt = 7,

  /** Title alone. */
  SlideData_Layout_LayoutType_TitleOnly = 8,

  /** Title , Object on left , Text on right */
  SlideData_Layout_LayoutType_ObjAndTxt = 9,

  /** Title , Text on left , Object on right */
  SlideData_Layout_LayoutType_TxtObj = 10,

  /** Title over Text on left, Object on right */
  SlideData_Layout_LayoutType_ObjTxt = 11,

  /** Title , Picture */
  SlideData_Layout_LayoutType_PicTxt = 12,

  /** Object alone. */
  SlideData_Layout_LayoutType_ObjOnly = 13,

  /** Title , Two Objects on left , text on right. */
  SlideData_Layout_LayoutType_TwoObjTxt = 14,

  /** Title , Text on left , Two objects on right. */
  SlideData_Layout_LayoutType_TxtTwoObj = 15,

  /** Title, Obj on left, Two obj in two rows on right. */
  SlideData_Layout_LayoutType_ObjTwoObj = 16,

  /** Title, Two obj in two rows on left, Obj on right. */
  SlideData_Layout_LayoutType_TwoObjObj = 17,

  /** Title, Four obj in two rows and two columns. */
  SlideData_Layout_LayoutType_FourObj = 18,

  /** Title, Text on top, Content on bottom */
  SlideData_Layout_LayoutType_TxtOverObj = 19,

  /** Title, Content on top, Text on bottom */
  SlideData_Layout_LayoutType_ObjOverTxt = 20,

  /** Title, Text on left, ClipArt on right. */
  SlideData_Layout_LayoutType_TxtClipart = 21,

  /** Title, ClipArt on left, Text on right. */
  SlideData_Layout_LayoutType_ClipartTxt = 22,

  /** Title, Text on left, Chart on right. */
  SlideData_Layout_LayoutType_TxtChart = 23,

  /** Title, Chart on left, Text on right. */
  SlideData_Layout_LayoutType_ChartTxt = 24,

  /** Title, Text on left, Media on right. */
  SlideData_Layout_LayoutType_TxtMedia = 25,

  /** Title, Media on left, Text on right. */
  SlideData_Layout_LayoutType_MediaTxt = 26,

  /** Title and Table */
  SlideData_Layout_LayoutType_Table = 27,

  /** Title and Smart Art */
  SlideData_Layout_LayoutType_Smartart = 28,

  /** Title and Chart */
  SlideData_Layout_LayoutType_Chart = 29,

  /** Title and Text rotated 90 degrees. */
  SlideData_Layout_LayoutType_VertTxt = 30,

  /** Title rotated 90 degrees on right and Text rotated 90 degrees on left */
  SlideData_Layout_LayoutType_VertTitleTxt = 31,

  /** Title with three pictures and text , new one. */
  SlideData_Layout_LayoutType_TitleThreePictTxt = 33,

  /** Title with Four pictures , new one. */
  SlideData_Layout_LayoutType_TitleFourPict = 34,

  /** Title with txt and two pictres , new one. */
  SlideData_Layout_LayoutType_TitleTxtTwoPict = 35,

  /** Title , Two objects on top , text on bottom. */
  SlideData_Layout_LayoutType_TwoObjOverTxt = 36,

  /** Title, ClipArt on left, Vertical text on right. */
  SlideData_Layout_LayoutType_ClipartVertTxt = 37,

  /** Vertical title on right, vertical text on top, chart on bottom */
  SlideData_Layout_LayoutType_VertTitleTxOverChart = 38,

  /** Picture with title on the right side. */
  SlideData_Layout_LayoutType_PicTitleRgt = 39,

  /** Picture with title on the left side. */
  SlideData_Layout_LayoutType_PicTitleLft = 40,

  /** Picture with title on Center side. */
  SlideData_Layout_LayoutType_PicTitleCenter = 41,

  /** Picture with title , text on left. */
  SlideData_Layout_LayoutType_PicTitleTxtLft = 42,

  /** Picture with title , text on right. */
  SlideData_Layout_LayoutType_PicTitleTxtRgt = 43,

  /** Layout with Three pictures and text over it. */
  SlideData_Layout_LayoutType_ThreePictTxt = 44,

  /** Custom user created layout. */
  SlideData_Layout_LayoutType_Custom = 32,
};

GPBEnumDescriptor *SlideData_Layout_LayoutType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL SlideData_Layout_LayoutType_IsValidValue(int32_t value);

#pragma mark - SlidedataRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface SlidedataRoot : GPBRootObject
@end

#pragma mark - SlideData

typedef GPB_ENUM(SlideData_FieldNumber) {
  SlideData_FieldNumber_Id_p = 1,
  SlideData_FieldNumber_Name = 2,
  SlideData_FieldNumber_Type = 3,
  SlideData_FieldNumber_HideMaster = 4,
  SlideData_FieldNumber_Hidden = 5,
  SlideData_FieldNumber_Layout = 6,
  SlideData_FieldNumber_RelId = 7,
  SlideData_FieldNumber_Theme = 8,
  SlideData_FieldNumber_LinkedFilesArray = 9,
  SlideData_FieldNumber_Locks = 10,
  SlideData_FieldNumber_SpellCheckProcessed = 11,
};

@interface SlideData : GPBMessage

/** id for the slide. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;
/** Test to see if @c id_p has been set. */
@property(nonatomic, readwrite) BOOL hasId_p;

/** Name for the slide. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;
/** Test to see if @c name has been set. */
@property(nonatomic, readwrite) BOOL hasName;

/** type of the slide. */
@property(nonatomic, readwrite) enum SlideType type;

@property(nonatomic, readwrite) BOOL hasType;
/** To Hide the master related data from the slide. */
@property(nonatomic, readwrite, strong, null_resettable) HideMaster *hideMaster;
/** Test to see if @c hideMaster has been set. */
@property(nonatomic, readwrite) BOOL hasHideMaster;

/** To Hide/Show the slide. */
@property(nonatomic, readwrite) BOOL hidden;

@property(nonatomic, readwrite) BOOL hasHidden;
/** Layout Data , used by Slide Layouts. */
@property(nonatomic, readwrite, strong, null_resettable) SlideData_Layout *layout;
/** Test to see if @c layout has been set. */
@property(nonatomic, readwrite) BOOL hasLayout;

/** Normal --> Layout , Layout --> Master. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *relId;
/** Test to see if @c relId has been set. */
@property(nonatomic, readwrite) BOOL hasRelId;

@property(nonatomic, readwrite, strong, null_resettable) ThemeSupercede *theme;
/** Test to see if @c theme has been set. */
@property(nonatomic, readwrite) BOOL hasTheme;

/** Unique-ID of the files linked to this slide. They could be XML , CSV or any such files. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *linkedFilesArray;
/** The number of items in @c linkedFilesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger linkedFilesArray_Count;

/** Lock related details , as of now we will use the noModify lock. */
@property(nonatomic, readwrite, strong, null_resettable) Locks *locks;
/** Test to see if @c locks has been set. */
@property(nonatomic, readwrite) BOOL hasLocks;

@property(nonatomic, readwrite) BOOL spellCheckProcessed;

@property(nonatomic, readwrite) BOOL hasSpellCheckProcessed;
@end

#pragma mark - SlideData_Layout

typedef GPB_ENUM(SlideData_Layout_FieldNumber) {
  SlideData_Layout_FieldNumber_Type = 1,
  SlideData_Layout_FieldNumber_Modified = 2,
};

@interface SlideData_Layout : GPBMessage

/** Layout Type for a slide, used by SlideLayouts and also for Copy/Paste when slide information is stored. */
@property(nonatomic, readwrite) SlideData_Layout_LayoutType type;

@property(nonatomic, readwrite) BOOL hasType;
/** Will be updated when a default slide layout is modified i.e when Style of the PH is changed (or) a new PH is added , this variable will be changed to true. */
@property(nonatomic, readwrite) BOOL modified;

@property(nonatomic, readwrite) BOOL hasModified;
@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
