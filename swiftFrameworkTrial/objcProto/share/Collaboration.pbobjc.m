// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: share/collaboration.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "Collaboration.pbobjc.h"
 #import "Pagesetup.pbobjc.h"
 #import "Themedifferences.pbobjc.h"
 #import "Relationship.pbobjc.h"
 #import "Picproperties.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - CollaborationRoot

@implementation CollaborationRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - CollaborationRoot_FileDescriptor

static GPBFileDescriptor *CollaborationRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"com.adventnet.zoho.show.slides"
                                                     syntax:GPBFileSyntaxProto2];
  }
  return descriptor;
}

#pragma mark - DocumentDeltas

@implementation DocumentDeltas

@dynamic deltaArray, deltaArray_Count;
@dynamic hasLastSavedVersion, lastSavedVersion;

typedef struct DocumentDeltas__storage_ {
  uint32_t _has_storage_[1];
  int32_t lastSavedVersion;
  NSMutableArray *deltaArray;
} DocumentDeltas__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "deltaArray",
        .dataTypeSpecific.className = GPBStringifySymbol(DocumentDelta),
        .number = DocumentDeltas_FieldNumber_DeltaArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(DocumentDeltas__storage_, deltaArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "lastSavedVersion",
        .dataTypeSpecific.className = NULL,
        .number = DocumentDeltas_FieldNumber_LastSavedVersion,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(DocumentDeltas__storage_, lastSavedVersion),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[DocumentDeltas class]
                                     rootClass:[CollaborationRoot class]
                                          file:CollaborationRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(DocumentDeltas__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\002\020\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - DocumentDelta

@implementation DocumentDelta

@dynamic hasVersion, version;
@dynamic hasAuthor, author;
@dynamic docOpArray, docOpArray_Count;
@dynamic hasModTime, modTime;
@dynamic hasGrpMember, grpMember;
@dynamic hasUniqueId, uniqueId;
@dynamic hasAnonUserId, anonUserId;

typedef struct DocumentDelta__storage_ {
  uint32_t _has_storage_[1];
  int32_t version;
  NSString *author;
  NSMutableArray *docOpArray;
  NSString *modTime;
  NSString *grpMember;
  NSString *uniqueId;
  NSString *anonUserId;
} DocumentDelta__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "version",
        .dataTypeSpecific.className = NULL,
        .number = DocumentDelta_FieldNumber_Version,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(DocumentDelta__storage_, version),
        .flags = GPBFieldRequired,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "author",
        .dataTypeSpecific.className = NULL,
        .number = DocumentDelta_FieldNumber_Author,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(DocumentDelta__storage_, author),
        .flags = GPBFieldRequired,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "docOpArray",
        .dataTypeSpecific.className = GPBStringifySymbol(DocumentOperation),
        .number = DocumentDelta_FieldNumber_DocOpArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(DocumentDelta__storage_, docOpArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "modTime",
        .dataTypeSpecific.className = NULL,
        .number = DocumentDelta_FieldNumber_ModTime,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(DocumentDelta__storage_, modTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "grpMember",
        .dataTypeSpecific.className = NULL,
        .number = DocumentDelta_FieldNumber_GrpMember,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(DocumentDelta__storage_, grpMember),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "uniqueId",
        .dataTypeSpecific.className = NULL,
        .number = DocumentDelta_FieldNumber_UniqueId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(DocumentDelta__storage_, uniqueId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "anonUserId",
        .dataTypeSpecific.className = NULL,
        .number = DocumentDelta_FieldNumber_AnonUserId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(DocumentDelta__storage_, anonUserId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[DocumentDelta class]
                                     rootClass:[CollaborationRoot class]
                                          file:CollaborationRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(DocumentDelta__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\003\000docOp\000\004\007\000\005\t\000\006\010\000\007\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - DocumentOperation

@implementation DocumentOperation

@dynamic hasAddParticipant, addParticipant;
@dynamic hasRemoveParticipant, removeParticipant;
@dynamic hasMutateDocument, mutateDocument;

typedef struct DocumentOperation__storage_ {
  uint32_t _has_storage_[1];
  NSString *addParticipant;
  NSString *removeParticipant;
  DocumentOperation_MutateDocument *mutateDocument;
} DocumentOperation__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "addParticipant",
        .dataTypeSpecific.className = NULL,
        .number = DocumentOperation_FieldNumber_AddParticipant,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(DocumentOperation__storage_, addParticipant),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "removeParticipant",
        .dataTypeSpecific.className = NULL,
        .number = DocumentOperation_FieldNumber_RemoveParticipant,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(DocumentOperation__storage_, removeParticipant),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "mutateDocument",
        .dataTypeSpecific.className = GPBStringifySymbol(DocumentOperation_MutateDocument),
        .number = DocumentOperation_FieldNumber_MutateDocument,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(DocumentOperation__storage_, mutateDocument),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[DocumentOperation class]
                                     rootClass:[CollaborationRoot class]
                                          file:CollaborationRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(DocumentOperation__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001\016\000\002\021\000\003\016\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - DocumentOperation_MutateDocument

@implementation DocumentOperation_MutateDocument

@dynamic hasMDocId, mDocId;
@dynamic hasContentOp, contentOp;

typedef struct DocumentOperation_MutateDocument__storage_ {
  uint32_t _has_storage_[1];
  NSString *mDocId;
  DocumentContentOperation *contentOp;
} DocumentOperation_MutateDocument__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "mDocId",
        .dataTypeSpecific.className = NULL,
        .number = DocumentOperation_MutateDocument_FieldNumber_MDocId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(DocumentOperation_MutateDocument__storage_, mDocId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "contentOp",
        .dataTypeSpecific.className = GPBStringifySymbol(DocumentContentOperation),
        .number = DocumentOperation_MutateDocument_FieldNumber_ContentOp,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(DocumentOperation_MutateDocument__storage_, contentOp),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[DocumentOperation_MutateDocument class]
                                     rootClass:[CollaborationRoot class]
                                          file:CollaborationRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(DocumentOperation_MutateDocument__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\006\000\003\t\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    [localDescriptor setupContainingMessageClassName:GPBStringifySymbol(DocumentOperation)];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - DocumentContentOperation

@implementation DocumentContentOperation

@dynamic componentArray, componentArray_Count;
@dynamic hasType, type;

typedef struct DocumentContentOperation__storage_ {
  uint32_t _has_storage_[1];
  DocumentContentOperation_DocumentContentOperationType type;
  NSMutableArray *componentArray;
} DocumentContentOperation__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescriptionWithDefault fields[] = {
      {
        .defaultValue.valueMessage = nil,
        .core.name = "componentArray",
        .core.dataTypeSpecific.className = GPBStringifySymbol(DocumentContentOperation_Component),
        .core.number = DocumentContentOperation_FieldNumber_ComponentArray,
        .core.hasIndex = GPBNoHasBit,
        .core.offset = (uint32_t)offsetof(DocumentContentOperation__storage_, componentArray),
        .core.flags = GPBFieldRepeated,
        .core.dataType = GPBDataTypeMessage,
      },
      {
        .defaultValue.valueEnum = DocumentContentOperation_DocumentContentOperationType_Group,
        .core.name = "type",
        .core.dataTypeSpecific.enumDescFunc = DocumentContentOperation_DocumentContentOperationType_EnumDescriptor,
        .core.number = DocumentContentOperation_FieldNumber_Type,
        .core.hasIndex = 0,
        .core.offset = (uint32_t)offsetof(DocumentContentOperation__storage_, type),
        .core.flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .core.dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[DocumentContentOperation class]
                                     rootClass:[CollaborationRoot class]
                                          file:CollaborationRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescriptionWithDefault))
                                   storageSize:sizeof(DocumentContentOperation__storage_)
                                         flags:GPBDescriptorInitializationFlag_FieldsWithDefault];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum DocumentContentOperation_DocumentContentOperationType

GPBEnumDescriptor *DocumentContentOperation_DocumentContentOperationType_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Group\000Ungroup\000";
    static const int32_t values[] = {
        DocumentContentOperation_DocumentContentOperationType_Group,
        DocumentContentOperation_DocumentContentOperationType_Ungroup,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(DocumentContentOperation_DocumentContentOperationType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:DocumentContentOperation_DocumentContentOperationType_IsValidValue];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL DocumentContentOperation_DocumentContentOperationType_IsValidValue(int32_t value__) {
  switch (value__) {
    case DocumentContentOperation_DocumentContentOperationType_Group:
    case DocumentContentOperation_DocumentContentOperationType_Ungroup:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - DocumentContentOperation_Component

@implementation DocumentContentOperation_Component

@dynamic hasOpType, opType;
@dynamic hasFields, fields;
@dynamic hasValue, value;
@dynamic textArray, textArray_Count;
@dynamic associatedArray, associatedArray_Count;
@dynamic hasCustom, custom;
@dynamic hasNi, ni;
@dynamic hasNoRender, noRender;

typedef struct DocumentContentOperation_Component__storage_ {
  uint32_t _has_storage_[1];
  DocumentContentOperation_Component_OperationType opType;
  int32_t ni;
  NSString *fields;
  DocumentContentOperation_Component_Value *value;
  NSMutableArray *textArray;
  NSMutableArray *associatedArray;
  DocumentContentOperation_Component_Custom *custom;
} DocumentContentOperation_Component__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescriptionWithDefault fields[] = {
      {
        .defaultValue.valueEnum = DocumentContentOperation_Component_OperationType_Insert,
        .core.name = "opType",
        .core.dataTypeSpecific.enumDescFunc = DocumentContentOperation_Component_OperationType_EnumDescriptor,
        .core.number = DocumentContentOperation_Component_FieldNumber_OpType,
        .core.hasIndex = 0,
        .core.offset = (uint32_t)offsetof(DocumentContentOperation_Component__storage_, opType),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor),
        .core.dataType = GPBDataTypeEnum,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "fields",
        .core.dataTypeSpecific.className = NULL,
        .core.number = DocumentContentOperation_Component_FieldNumber_Fields,
        .core.hasIndex = 1,
        .core.offset = (uint32_t)offsetof(DocumentContentOperation_Component__storage_, fields),
        .core.flags = GPBFieldRequired,
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueMessage = nil,
        .core.name = "value",
        .core.dataTypeSpecific.className = GPBStringifySymbol(DocumentContentOperation_Component_Value),
        .core.number = DocumentContentOperation_Component_FieldNumber_Value,
        .core.hasIndex = 2,
        .core.offset = (uint32_t)offsetof(DocumentContentOperation_Component__storage_, value),
        .core.flags = GPBFieldOptional,
        .core.dataType = GPBDataTypeMessage,
      },
      {
        .defaultValue.valueMessage = nil,
        .core.name = "textArray",
        .core.dataTypeSpecific.className = GPBStringifySymbol(DocumentContentOperation_Component_Text),
        .core.number = DocumentContentOperation_Component_FieldNumber_TextArray,
        .core.hasIndex = GPBNoHasBit,
        .core.offset = (uint32_t)offsetof(DocumentContentOperation_Component__storage_, textArray),
        .core.flags = GPBFieldRepeated,
        .core.dataType = GPBDataTypeMessage,
      },
      {
        .defaultValue.valueMessage = nil,
        .core.name = "associatedArray",
        .core.dataTypeSpecific.className = GPBStringifySymbol(DocumentContentOperation_Component_AssociatedTexts),
        .core.number = DocumentContentOperation_Component_FieldNumber_AssociatedArray,
        .core.hasIndex = GPBNoHasBit,
        .core.offset = (uint32_t)offsetof(DocumentContentOperation_Component__storage_, associatedArray),
        .core.flags = GPBFieldRepeated,
        .core.dataType = GPBDataTypeMessage,
      },
      {
        .defaultValue.valueMessage = nil,
        .core.name = "custom",
        .core.dataTypeSpecific.className = GPBStringifySymbol(DocumentContentOperation_Component_Custom),
        .core.number = DocumentContentOperation_Component_FieldNumber_Custom,
        .core.hasIndex = 3,
        .core.offset = (uint32_t)offsetof(DocumentContentOperation_Component__storage_, custom),
        .core.flags = GPBFieldOptional,
        .core.dataType = GPBDataTypeMessage,
      },
      {
        .defaultValue.valueInt32 = 0,
        .core.name = "ni",
        .core.dataTypeSpecific.className = NULL,
        .core.number = DocumentContentOperation_Component_FieldNumber_Ni,
        .core.hasIndex = 4,
        .core.offset = (uint32_t)offsetof(DocumentContentOperation_Component__storage_, ni),
        .core.flags = GPBFieldOptional,
        .core.dataType = GPBDataTypeInt32,
      },
      {
        .defaultValue.valueBool = NO,
        .core.name = "noRender",
        .core.dataTypeSpecific.className = NULL,
        .core.number = DocumentContentOperation_Component_FieldNumber_NoRender,
        .core.hasIndex = 5,
        .core.offset = 6,  // Stored in _has_storage_ to save space.
        .core.flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[DocumentContentOperation_Component class]
                                     rootClass:[CollaborationRoot class]
                                          file:CollaborationRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescriptionWithDefault))
                                   storageSize:sizeof(DocumentContentOperation_Component__storage_)
                                         flags:GPBDescriptorInitializationFlag_FieldsWithDefault];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\002\006\000\n\010\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    [localDescriptor setupContainingMessageClassName:GPBStringifySymbol(DocumentContentOperation)];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum DocumentContentOperation_Component_OperationType

GPBEnumDescriptor *DocumentContentOperation_Component_OperationType_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Insert\000Update\000Delete\000Text\000Custom\000Reorder"
        "\000";
    static const int32_t values[] = {
        DocumentContentOperation_Component_OperationType_Insert,
        DocumentContentOperation_Component_OperationType_Update,
        DocumentContentOperation_Component_OperationType_Delete,
        DocumentContentOperation_Component_OperationType_Text,
        DocumentContentOperation_Component_OperationType_Custom,
        DocumentContentOperation_Component_OperationType_Reorder,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(DocumentContentOperation_Component_OperationType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:DocumentContentOperation_Component_OperationType_IsValidValue];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL DocumentContentOperation_Component_OperationType_IsValidValue(int32_t value__) {
  switch (value__) {
    case DocumentContentOperation_Component_OperationType_Insert:
    case DocumentContentOperation_Component_OperationType_Update:
    case DocumentContentOperation_Component_OperationType_Delete:
    case DocumentContentOperation_Component_OperationType_Text:
    case DocumentContentOperation_Component_OperationType_Custom:
    case DocumentContentOperation_Component_OperationType_Reorder:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - DocumentContentOperation_Component_Value

@implementation DocumentContentOperation_Component_Value

@dynamic hasValue, value;
@dynamic hasOldValue, oldValue;
@dynamic hasDeleteData, deleteData;
@dynamic hasReplace, replace;
@dynamic idsArray, idsArray_Count;

typedef struct DocumentContentOperation_Component_Value__storage_ {
  uint32_t _has_storage_[1];
  NSString *value;
  NSString *oldValue;
  NSString *deleteData;
  NSMutableArray *idsArray;
} DocumentContentOperation_Component_Value__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "value",
        .dataTypeSpecific.className = NULL,
        .number = DocumentContentOperation_Component_Value_FieldNumber_Value,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(DocumentContentOperation_Component_Value__storage_, value),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "oldValue",
        .dataTypeSpecific.className = NULL,
        .number = DocumentContentOperation_Component_Value_FieldNumber_OldValue,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(DocumentContentOperation_Component_Value__storage_, oldValue),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "deleteData",
        .dataTypeSpecific.className = NULL,
        .number = DocumentContentOperation_Component_Value_FieldNumber_DeleteData,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(DocumentContentOperation_Component_Value__storage_, deleteData),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "replace",
        .dataTypeSpecific.className = NULL,
        .number = DocumentContentOperation_Component_Value_FieldNumber_Replace,
        .hasIndex = 3,
        .offset = 4,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "idsArray",
        .dataTypeSpecific.className = NULL,
        .number = DocumentContentOperation_Component_Value_FieldNumber_IdsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(DocumentContentOperation_Component_Value__storage_, idsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[DocumentContentOperation_Component_Value class]
                                     rootClass:[CollaborationRoot class]
                                          file:CollaborationRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(DocumentContentOperation_Component_Value__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\002\010\000\003\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    [localDescriptor setupContainingMessageClassName:GPBStringifySymbol(DocumentContentOperation_Component)];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - DocumentContentOperation_Component_Text

@implementation DocumentContentOperation_Component_Text

@dynamic hasAt, at;
@dynamic hasSi, si;
@dynamic hasEi, ei;
@dynamic hasUt, ut;
@dynamic hasValue, value;

typedef struct DocumentContentOperation_Component_Text__storage_ {
  uint32_t _has_storage_[1];
  DocumentContentOperation_Component_OperationType at;
  int32_t si;
  int32_t ei;
  DocumentContentOperation_Component_Text_UpdateType ut;
  DocumentContentOperation_Component_Value *value;
} DocumentContentOperation_Component_Text__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescriptionWithDefault fields[] = {
      {
        .defaultValue.valueEnum = DocumentContentOperation_Component_OperationType_Insert,
        .core.name = "at",
        .core.dataTypeSpecific.enumDescFunc = DocumentContentOperation_Component_OperationType_EnumDescriptor,
        .core.number = DocumentContentOperation_Component_Text_FieldNumber_At,
        .core.hasIndex = 0,
        .core.offset = (uint32_t)offsetof(DocumentContentOperation_Component_Text__storage_, at),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldHasEnumDescriptor),
        .core.dataType = GPBDataTypeEnum,
      },
      {
        .defaultValue.valueInt32 = 0,
        .core.name = "si",
        .core.dataTypeSpecific.className = NULL,
        .core.number = DocumentContentOperation_Component_Text_FieldNumber_Si,
        .core.hasIndex = 1,
        .core.offset = (uint32_t)offsetof(DocumentContentOperation_Component_Text__storage_, si),
        .core.flags = GPBFieldRequired,
        .core.dataType = GPBDataTypeInt32,
      },
      {
        .defaultValue.valueInt32 = 0,
        .core.name = "ei",
        .core.dataTypeSpecific.className = NULL,
        .core.number = DocumentContentOperation_Component_Text_FieldNumber_Ei,
        .core.hasIndex = 2,
        .core.offset = (uint32_t)offsetof(DocumentContentOperation_Component_Text__storage_, ei),
        .core.flags = GPBFieldRequired,
        .core.dataType = GPBDataTypeInt32,
      },
      {
        .defaultValue.valueEnum = DocumentContentOperation_Component_Text_UpdateType_Portion,
        .core.name = "ut",
        .core.dataTypeSpecific.enumDescFunc = DocumentContentOperation_Component_Text_UpdateType_EnumDescriptor,
        .core.number = DocumentContentOperation_Component_Text_FieldNumber_Ut,
        .core.hasIndex = 3,
        .core.offset = (uint32_t)offsetof(DocumentContentOperation_Component_Text__storage_, ut),
        .core.flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .core.dataType = GPBDataTypeEnum,
      },
      {
        .defaultValue.valueMessage = nil,
        .core.name = "value",
        .core.dataTypeSpecific.className = GPBStringifySymbol(DocumentContentOperation_Component_Value),
        .core.number = DocumentContentOperation_Component_Text_FieldNumber_Value,
        .core.hasIndex = 4,
        .core.offset = (uint32_t)offsetof(DocumentContentOperation_Component_Text__storage_, value),
        .core.flags = GPBFieldOptional,
        .core.dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[DocumentContentOperation_Component_Text class]
                                     rootClass:[CollaborationRoot class]
                                          file:CollaborationRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescriptionWithDefault))
                                   storageSize:sizeof(DocumentContentOperation_Component_Text__storage_)
                                         flags:GPBDescriptorInitializationFlag_FieldsWithDefault];
    [localDescriptor setupContainingMessageClassName:GPBStringifySymbol(DocumentContentOperation_Component)];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum DocumentContentOperation_Component_Text_UpdateType

GPBEnumDescriptor *DocumentContentOperation_Component_Text_UpdateType_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Portion\000Para\000";
    static const int32_t values[] = {
        DocumentContentOperation_Component_Text_UpdateType_Portion,
        DocumentContentOperation_Component_Text_UpdateType_Para,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(DocumentContentOperation_Component_Text_UpdateType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:DocumentContentOperation_Component_Text_UpdateType_IsValidValue];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL DocumentContentOperation_Component_Text_UpdateType_IsValidValue(int32_t value__) {
  switch (value__) {
    case DocumentContentOperation_Component_Text_UpdateType_Portion:
    case DocumentContentOperation_Component_Text_UpdateType_Para:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - DocumentContentOperation_Component_AssociatedTexts

@implementation DocumentContentOperation_Component_AssociatedTexts

@dynamic textsArray, textsArray_Count;

typedef struct DocumentContentOperation_Component_AssociatedTexts__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *textsArray;
} DocumentContentOperation_Component_AssociatedTexts__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "textsArray",
        .dataTypeSpecific.className = GPBStringifySymbol(DocumentContentOperation_Component_Text),
        .number = DocumentContentOperation_Component_AssociatedTexts_FieldNumber_TextsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(DocumentContentOperation_Component_AssociatedTexts__storage_, textsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[DocumentContentOperation_Component_AssociatedTexts class]
                                     rootClass:[CollaborationRoot class]
                                          file:CollaborationRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(DocumentContentOperation_Component_AssociatedTexts__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    [localDescriptor setupContainingMessageClassName:GPBStringifySymbol(DocumentContentOperation_Component)];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - DocumentContentOperation_Component_Custom

@implementation DocumentContentOperation_Component_Custom

@dynamic hasActionType, actionType;
@dynamic hasChangeTheme, changeTheme;
@dynamic hasPageSetup, pageSetup;

typedef struct DocumentContentOperation_Component_Custom__storage_ {
  uint32_t _has_storage_[1];
  DocumentContentOperation_Component_Custom_ActionType actionType;
  DocumentContentOperation_Component_Custom_ChangeTheme *changeTheme;
  PageSetup *pageSetup;
} DocumentContentOperation_Component_Custom__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescriptionWithDefault fields[] = {
      {
        .defaultValue.valueEnum = DocumentContentOperation_Component_Custom_ActionType_ChangeTheme,
        .core.name = "actionType",
        .core.dataTypeSpecific.enumDescFunc = DocumentContentOperation_Component_Custom_ActionType_EnumDescriptor,
        .core.number = DocumentContentOperation_Component_Custom_FieldNumber_ActionType,
        .core.hasIndex = 0,
        .core.offset = (uint32_t)offsetof(DocumentContentOperation_Component_Custom__storage_, actionType),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor),
        .core.dataType = GPBDataTypeEnum,
      },
      {
        .defaultValue.valueMessage = nil,
        .core.name = "changeTheme",
        .core.dataTypeSpecific.className = GPBStringifySymbol(DocumentContentOperation_Component_Custom_ChangeTheme),
        .core.number = DocumentContentOperation_Component_Custom_FieldNumber_ChangeTheme,
        .core.hasIndex = 1,
        .core.offset = (uint32_t)offsetof(DocumentContentOperation_Component_Custom__storage_, changeTheme),
        .core.flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeMessage,
      },
      {
        .defaultValue.valueMessage = nil,
        .core.name = "pageSetup",
        .core.dataTypeSpecific.className = GPBStringifySymbol(PageSetup),
        .core.number = DocumentContentOperation_Component_Custom_FieldNumber_PageSetup,
        .core.hasIndex = 2,
        .core.offset = (uint32_t)offsetof(DocumentContentOperation_Component_Custom__storage_, pageSetup),
        .core.flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[DocumentContentOperation_Component_Custom class]
                                     rootClass:[CollaborationRoot class]
                                          file:CollaborationRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescriptionWithDefault))
                                   storageSize:sizeof(DocumentContentOperation_Component_Custom__storage_)
                                         flags:GPBDescriptorInitializationFlag_FieldsWithDefault];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001\n\000\002\013\000\003\t\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    [localDescriptor setupContainingMessageClassName:GPBStringifySymbol(DocumentContentOperation_Component)];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum DocumentContentOperation_Component_Custom_ActionType

GPBEnumDescriptor *DocumentContentOperation_Component_Custom_ActionType_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "ChangeTheme\000PageSetup\000";
    static const int32_t values[] = {
        DocumentContentOperation_Component_Custom_ActionType_ChangeTheme,
        DocumentContentOperation_Component_Custom_ActionType_PageSetup,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(DocumentContentOperation_Component_Custom_ActionType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:DocumentContentOperation_Component_Custom_ActionType_IsValidValue];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL DocumentContentOperation_Component_Custom_ActionType_IsValidValue(int32_t value__) {
  switch (value__) {
    case DocumentContentOperation_Component_Custom_ActionType_ChangeTheme:
    case DocumentContentOperation_Component_Custom_ActionType_PageSetup:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - DocumentContentOperation_Component_Custom_ChangeTheme

@implementation DocumentContentOperation_Component_Custom_ChangeTheme

@dynamic hasId_p, id_p;
@dynamic relsArray, relsArray_Count;
@dynamic hasThemeDifferences, themeDifferences;
@dynamic picPropsArray, picPropsArray_Count;

typedef struct DocumentContentOperation_Component_Custom_ChangeTheme__storage_ {
  uint32_t _has_storage_[1];
  NSString *id_p;
  NSMutableArray *relsArray;
  ThemeDifferences *themeDifferences;
  NSMutableArray *picPropsArray;
} DocumentContentOperation_Component_Custom_ChangeTheme__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = DocumentContentOperation_Component_Custom_ChangeTheme_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(DocumentContentOperation_Component_Custom_ChangeTheme__storage_, id_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "relsArray",
        .dataTypeSpecific.className = GPBStringifySymbol(Relationship),
        .number = DocumentContentOperation_Component_Custom_ChangeTheme_FieldNumber_RelsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(DocumentContentOperation_Component_Custom_ChangeTheme__storage_, relsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "themeDifferences",
        .dataTypeSpecific.className = GPBStringifySymbol(ThemeDifferences),
        .number = DocumentContentOperation_Component_Custom_ChangeTheme_FieldNumber_ThemeDifferences,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(DocumentContentOperation_Component_Custom_ChangeTheme__storage_, themeDifferences),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "picPropsArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PicProperties),
        .number = DocumentContentOperation_Component_Custom_ChangeTheme_FieldNumber_PicPropsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(DocumentContentOperation_Component_Custom_ChangeTheme__storage_, picPropsArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[DocumentContentOperation_Component_Custom_ChangeTheme class]
                                     rootClass:[CollaborationRoot class]
                                          file:CollaborationRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(DocumentContentOperation_Component_Custom_ChangeTheme__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\003\020\000\004\000picProps\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    [localDescriptor setupContainingMessageClassName:GPBStringifySymbol(DocumentContentOperation_Component_Custom)];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
