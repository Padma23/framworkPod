// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: slide.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class AnimationList;
@class Background;
@class ColorMap;
@class PageSetup;
@class ShapeObject;
@class SlideData;
@class Slide_HeaderFooterDisplay;
@class Transition;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - SlideRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface SlideRoot : GPBRootObject
@end

#pragma mark - Slide

typedef GPB_ENUM(Slide_FieldNumber) {
  Slide_FieldNumber_Data_p = 1,
  Slide_FieldNumber_SlideSetup = 2,
  Slide_FieldNumber_ShapesArray = 3,
  Slide_FieldNumber_Transition = 4,
  Slide_FieldNumber_Bg = 5,
  Slide_FieldNumber_ColorMap = 6,
  Slide_FieldNumber_AnimListArray = 7,
  Slide_FieldNumber_Hf = 8,
  Slide_FieldNumber_Notes = 9,
};

@interface Slide : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) SlideData *data_p;
/** Test to see if @c data_p has been set. */
@property(nonatomic, readwrite) BOOL hasData_p;

/** Slide Set up */
@property(nonatomic, readwrite, strong, null_resettable) PageSetup *slideSetup;
/** Test to see if @c slideSetup has been set. */
@property(nonatomic, readwrite) BOOL hasSlideSetup;

/** Array of Shapes */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ShapeObject*> *shapesArray;
/** The number of items in @c shapesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger shapesArray_Count;

/** Slide Transition. */
@property(nonatomic, readwrite, strong, null_resettable) Transition *transition;
/** Test to see if @c transition has been set. */
@property(nonatomic, readwrite) BOOL hasTransition;

/** Background for a slide. */
@property(nonatomic, readwrite, strong, null_resettable) Background *bg;
/** Test to see if @c bg has been set. */
@property(nonatomic, readwrite) BOOL hasBg;

/** Overriding Color Map. */
@property(nonatomic, readwrite, strong, null_resettable) ColorMap *colorMap;
/** Test to see if @c colorMap has been set. */
@property(nonatomic, readwrite) BOOL hasColorMap;

/** Animation List for the slide. The order for animation is maintained here. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<AnimationList*> *animListArray;
/** The number of items in @c animListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger animListArray_Count;

/**
 * This is used by Layouts/Masters to indicate the presence of footer objects.
 * In Slides , Footer shape will be removed if it is not needed , so hf will not play any role in it.
 **/
@property(nonatomic, readwrite, strong, null_resettable) Slide_HeaderFooterDisplay *hf;
/** Test to see if @c hf has been set. */
@property(nonatomic, readwrite) BOOL hasHf;

/** Notes for the slide. As of now we store only the text content , in future we will be storing Notes as as Slide. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *notes;
/** Test to see if @c notes has been set. */
@property(nonatomic, readwrite) BOOL hasNotes;

@end

#pragma mark - Slide_HeaderFooterDisplay

typedef GPB_ENUM(Slide_HeaderFooterDisplay_FieldNumber) {
  Slide_HeaderFooterDisplay_FieldNumber_Footer = 1,
  Slide_HeaderFooterDisplay_FieldNumber_Header = 2,
  Slide_HeaderFooterDisplay_FieldNumber_Slidenum = 3,
  Slide_HeaderFooterDisplay_FieldNumber_Datetime = 4,
};

@interface Slide_HeaderFooterDisplay : GPBMessage

@property(nonatomic, readwrite) BOOL footer;

@property(nonatomic, readwrite) BOOL hasFooter;
@property(nonatomic, readwrite) BOOL header;

@property(nonatomic, readwrite) BOOL hasHeader;
@property(nonatomic, readwrite) BOOL slidenum;

@property(nonatomic, readwrite) BOOL hasSlidenum;
@property(nonatomic, readwrite) BOOL datetime;

@property(nonatomic, readwrite) BOOL hasDatetime;
@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
