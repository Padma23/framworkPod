// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: colormap.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum ColorMap_ColorSchemeIndex

typedef GPB_ENUM(ColorMap_ColorSchemeIndex) {
  ColorMap_ColorSchemeIndex_Dark1 = 0,
  ColorMap_ColorSchemeIndex_Light1 = 1,
  ColorMap_ColorSchemeIndex_Dark2 = 2,
  ColorMap_ColorSchemeIndex_Light2 = 3,
  ColorMap_ColorSchemeIndex_Accent1 = 4,
  ColorMap_ColorSchemeIndex_Accent2 = 5,
  ColorMap_ColorSchemeIndex_Accent3 = 6,
  ColorMap_ColorSchemeIndex_Accent4 = 7,
  ColorMap_ColorSchemeIndex_Accent5 = 8,
  ColorMap_ColorSchemeIndex_Accent6 = 9,
  ColorMap_ColorSchemeIndex_Hlink = 10,
  ColorMap_ColorSchemeIndex_Followhlink = 11,
};

GPBEnumDescriptor *ColorMap_ColorSchemeIndex_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ColorMap_ColorSchemeIndex_IsValidValue(int32_t value);

#pragma mark - ColormapRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface ColormapRoot : GPBRootObject
@end

#pragma mark - ColorMap

typedef GPB_ENUM(ColorMap_FieldNumber) {
  ColorMap_FieldNumber_Bg1 = 1,
  ColorMap_FieldNumber_Tx1 = 2,
  ColorMap_FieldNumber_Bg2 = 3,
  ColorMap_FieldNumber_Tx2 = 4,
  ColorMap_FieldNumber_A1 = 5,
  ColorMap_FieldNumber_A2 = 6,
  ColorMap_FieldNumber_A3 = 7,
  ColorMap_FieldNumber_A4 = 8,
  ColorMap_FieldNumber_A5 = 9,
  ColorMap_FieldNumber_A6 = 10,
  ColorMap_FieldNumber_Hlink = 11,
  ColorMap_FieldNumber_Followhlink = 12,
};

@interface ColorMap : GPBMessage

@property(nonatomic, readwrite) ColorMap_ColorSchemeIndex bg1;

@property(nonatomic, readwrite) BOOL hasBg1;
@property(nonatomic, readwrite) ColorMap_ColorSchemeIndex tx1;

@property(nonatomic, readwrite) BOOL hasTx1;
@property(nonatomic, readwrite) ColorMap_ColorSchemeIndex bg2;

@property(nonatomic, readwrite) BOOL hasBg2;
@property(nonatomic, readwrite) ColorMap_ColorSchemeIndex tx2;

@property(nonatomic, readwrite) BOOL hasTx2;
@property(nonatomic, readwrite) ColorMap_ColorSchemeIndex a1;

@property(nonatomic, readwrite) BOOL hasA1;
@property(nonatomic, readwrite) ColorMap_ColorSchemeIndex a2;

@property(nonatomic, readwrite) BOOL hasA2;
@property(nonatomic, readwrite) ColorMap_ColorSchemeIndex a3;

@property(nonatomic, readwrite) BOOL hasA3;
@property(nonatomic, readwrite) ColorMap_ColorSchemeIndex a4;

@property(nonatomic, readwrite) BOOL hasA4;
@property(nonatomic, readwrite) ColorMap_ColorSchemeIndex a5;

@property(nonatomic, readwrite) BOOL hasA5;
@property(nonatomic, readwrite) ColorMap_ColorSchemeIndex a6;

@property(nonatomic, readwrite) BOOL hasA6;
@property(nonatomic, readwrite) ColorMap_ColorSchemeIndex hlink;

@property(nonatomic, readwrite) BOOL hasHlink;
@property(nonatomic, readwrite) ColorMap_ColorSchemeIndex followhlink;

@property(nonatomic, readwrite) BOOL hasFollowhlink;
@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
