// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: transition.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class DisplayAnimation;
@class Transition_SoundAction;
@class Transition_SoundAction_StartSound;
@class Transition_SoundAction_StartSound_Sound;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum Transition_SoundAction_StartSound_Loop

typedef GPB_ENUM(Transition_SoundAction_StartSound_Loop) {
  Transition_SoundAction_StartSound_Loop_Forever = 0,
  Transition_SoundAction_StartSound_Loop_TillChange = 1,
};

GPBEnumDescriptor *Transition_SoundAction_StartSound_Loop_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Transition_SoundAction_StartSound_Loop_IsValidValue(int32_t value);

#pragma mark - Enum Transition_SoundAction_StartSound_Sound_SoundType

typedef GPB_ENUM(Transition_SoundAction_StartSound_Sound_SoundType) {
  Transition_SoundAction_StartSound_Sound_SoundType_Builtin = 0,
  Transition_SoundAction_StartSound_Sound_SoundType_External = 1,
};

GPBEnumDescriptor *Transition_SoundAction_StartSound_Sound_SoundType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Transition_SoundAction_StartSound_Sound_SoundType_IsValidValue(int32_t value);

#pragma mark - TransitionRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface TransitionRoot : GPBRootObject
@end

#pragma mark - Transition

typedef GPB_ENUM(Transition_FieldNumber) {
  Transition_FieldNumber_Anim = 1,
  Transition_FieldNumber_Speed = 2,
  Transition_FieldNumber_Sound = 3,
  Transition_FieldNumber_NoAdvanceOnClick = 4,
  Transition_FieldNumber_AdvTime = 5,
};

@interface Transition : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) DisplayAnimation *anim;
/** Test to see if @c anim has been set. */
@property(nonatomic, readwrite) BOOL hasAnim;

/** Time to play this transition in seconds. Transition speed becomes slow/fast/medium depending up on the time. */
@property(nonatomic, readwrite) float speed;

@property(nonatomic, readwrite) BOOL hasSpeed;
@property(nonatomic, readwrite, strong, null_resettable) Transition_SoundAction *sound;
/** Test to see if @c sound has been set. */
@property(nonatomic, readwrite) BOOL hasSound;

/** Default false , hence the slide advances on click. */
@property(nonatomic, readwrite) BOOL noAdvanceOnClick;

@property(nonatomic, readwrite) BOOL hasNoAdvanceOnClick;
/** The time after which the next transition should start. In other words , move to the next slide after this much time. */
@property(nonatomic, readwrite) int32_t advTime;

@property(nonatomic, readwrite) BOOL hasAdvTime;
@end

#pragma mark - Transition_SoundAction

typedef GPB_ENUM(Transition_SoundAction_FieldNumber) {
  Transition_SoundAction_FieldNumber_StSnd = 1,
  Transition_SoundAction_FieldNumber_EndSnd = 2,
};

@interface Transition_SoundAction : GPBMessage

/** Starts a new sound */
@property(nonatomic, readwrite, strong, null_resettable) Transition_SoundAction_StartSound *stSnd;
/** Test to see if @c stSnd has been set. */
@property(nonatomic, readwrite) BOOL hasStSnd;

/** Ends the Previous Sound */
@property(nonatomic, readwrite) BOOL endSnd;

@property(nonatomic, readwrite) BOOL hasEndSnd;
@end

#pragma mark - Transition_SoundAction_StartSound

typedef GPB_ENUM(Transition_SoundAction_StartSound_FieldNumber) {
  Transition_SoundAction_StartSound_FieldNumber_Snd = 1,
  Transition_SoundAction_StartSound_FieldNumber_Loop = 2,
};

@interface Transition_SoundAction_StartSound : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Transition_SoundAction_StartSound_Sound *snd;
/** Test to see if @c snd has been set. */
@property(nonatomic, readwrite) BOOL hasSnd;

@property(nonatomic, readwrite) Transition_SoundAction_StartSound_Loop loop;

@property(nonatomic, readwrite) BOOL hasLoop;
@end

#pragma mark - Transition_SoundAction_StartSound_Sound

typedef GPB_ENUM(Transition_SoundAction_StartSound_Sound_FieldNumber) {
  Transition_SoundAction_StartSound_Sound_FieldNumber_Type = 1,
  Transition_SoundAction_StartSound_Sound_FieldNumber_Id_p = 2,
  Transition_SoundAction_StartSound_Sound_FieldNumber_URL = 3,
};

@interface Transition_SoundAction_StartSound_Sound : GPBMessage

@property(nonatomic, readwrite) Transition_SoundAction_StartSound_Sound_SoundType type;

@property(nonatomic, readwrite) BOOL hasType;
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;
/** Test to see if @c id_p has been set. */
@property(nonatomic, readwrite) BOOL hasId_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;
/** Test to see if @c URL has been set. */
@property(nonatomic, readwrite) BOOL hasURL;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
