// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chartstyle.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class ChartStyle_StyleData;
@class Fill;
@class PortionProps;
@class Stroke;
@class ThemeReference;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum ChartStyle_StyleData_PatternType

typedef GPB_ENUM(ChartStyle_StyleData_PatternType) {
  ChartStyle_StyleData_PatternType_None = 0,
  ChartStyle_StyleData_PatternType_Fade = 1,
};

GPBEnumDescriptor *ChartStyle_StyleData_PatternType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ChartStyle_StyleData_PatternType_IsValidValue(int32_t value);

#pragma mark - ChartstyleRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface ChartstyleRoot : GPBRootObject
@end

#pragma mark - ChartStyle

typedef GPB_ENUM(ChartStyle_FieldNumber) {
  ChartStyle_FieldNumber_Axis = 1,
  ChartStyle_FieldNumber_AxisTitle = 2,
  ChartStyle_FieldNumber_ChartArea = 3,
  ChartStyle_FieldNumber_ChartTitle = 4,
  ChartStyle_FieldNumber_DataLabels = 5,
  ChartStyle_FieldNumber_DataTable = 6,
  ChartStyle_FieldNumber_DownBars = 7,
  ChartStyle_FieldNumber_Floor = 8,
  ChartStyle_FieldNumber_Legend = 9,
  ChartStyle_FieldNumber_MajorGridlines = 10,
  ChartStyle_FieldNumber_MinorGridlines = 11,
  ChartStyle_FieldNumber_OtherLines = 12,
  ChartStyle_FieldNumber_PlotArea = 13,
  ChartStyle_FieldNumber_UpBars = 14,
  ChartStyle_FieldNumber_Walls = 15,
  ChartStyle_FieldNumber_DataPointArray = 16,
  ChartStyle_FieldNumber_DataPointLineArray = 17,
  ChartStyle_FieldNumber_DataPointMarkerArray = 18,
  ChartStyle_FieldNumber_CategoryAxisArray = 19,
  ChartStyle_FieldNumber_ValueAxisArray = 20,
  ChartStyle_FieldNumber_SeriesAxisArray = 21,
  ChartStyle_FieldNumber_DateAxisArray = 22,
  ChartStyle_FieldNumber_DropLinesArray = 23,
  ChartStyle_FieldNumber_HiLowLineArray = 24,
  ChartStyle_FieldNumber_LeaderLineArray = 25,
};

@interface ChartStyle : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) ChartStyle_StyleData *axis;
/** Test to see if @c axis has been set. */
@property(nonatomic, readwrite) BOOL hasAxis;

@property(nonatomic, readwrite, strong, null_resettable) ChartStyle_StyleData *axisTitle;
/** Test to see if @c axisTitle has been set. */
@property(nonatomic, readwrite) BOOL hasAxisTitle;

@property(nonatomic, readwrite, strong, null_resettable) ChartStyle_StyleData *chartArea;
/** Test to see if @c chartArea has been set. */
@property(nonatomic, readwrite) BOOL hasChartArea;

@property(nonatomic, readwrite, strong, null_resettable) ChartStyle_StyleData *chartTitle;
/** Test to see if @c chartTitle has been set. */
@property(nonatomic, readwrite) BOOL hasChartTitle;

@property(nonatomic, readwrite, strong, null_resettable) ChartStyle_StyleData *dataLabels;
/** Test to see if @c dataLabels has been set. */
@property(nonatomic, readwrite) BOOL hasDataLabels;

@property(nonatomic, readwrite, strong, null_resettable) ChartStyle_StyleData *dataTable;
/** Test to see if @c dataTable has been set. */
@property(nonatomic, readwrite) BOOL hasDataTable;

@property(nonatomic, readwrite, strong, null_resettable) ChartStyle_StyleData *downBars;
/** Test to see if @c downBars has been set. */
@property(nonatomic, readwrite) BOOL hasDownBars;

@property(nonatomic, readwrite, strong, null_resettable) ChartStyle_StyleData *floor;
/** Test to see if @c floor has been set. */
@property(nonatomic, readwrite) BOOL hasFloor;

@property(nonatomic, readwrite, strong, null_resettable) ChartStyle_StyleData *legend;
/** Test to see if @c legend has been set. */
@property(nonatomic, readwrite) BOOL hasLegend;

@property(nonatomic, readwrite, strong, null_resettable) ChartStyle_StyleData *majorGridlines;
/** Test to see if @c majorGridlines has been set. */
@property(nonatomic, readwrite) BOOL hasMajorGridlines;

@property(nonatomic, readwrite, strong, null_resettable) ChartStyle_StyleData *minorGridlines;
/** Test to see if @c minorGridlines has been set. */
@property(nonatomic, readwrite) BOOL hasMinorGridlines;

@property(nonatomic, readwrite, strong, null_resettable) ChartStyle_StyleData *otherLines;
/** Test to see if @c otherLines has been set. */
@property(nonatomic, readwrite) BOOL hasOtherLines;

@property(nonatomic, readwrite, strong, null_resettable) ChartStyle_StyleData *plotArea;
/** Test to see if @c plotArea has been set. */
@property(nonatomic, readwrite) BOOL hasPlotArea;

@property(nonatomic, readwrite, strong, null_resettable) ChartStyle_StyleData *upBars;
/** Test to see if @c upBars has been set. */
@property(nonatomic, readwrite) BOOL hasUpBars;

@property(nonatomic, readwrite, strong, null_resettable) ChartStyle_StyleData *walls;
/** Test to see if @c walls has been set. */
@property(nonatomic, readwrite) BOOL hasWalls;

/** Fill Data point. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ChartStyle_StyleData*> *dataPointArray;
/** The number of items in @c dataPointArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger dataPointArray_Count;

/** Line Data point */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ChartStyle_StyleData*> *dataPointLineArray;
/** The number of items in @c dataPointLineArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger dataPointLineArray_Count;

/** Marker for Data point */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ChartStyle_StyleData*> *dataPointMarkerArray;
/** The number of items in @c dataPointMarkerArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger dataPointMarkerArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ChartStyle_StyleData*> *categoryAxisArray;
/** The number of items in @c categoryAxisArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger categoryAxisArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ChartStyle_StyleData*> *valueAxisArray;
/** The number of items in @c valueAxisArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger valueAxisArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ChartStyle_StyleData*> *seriesAxisArray;
/** The number of items in @c seriesAxisArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger seriesAxisArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ChartStyle_StyleData*> *dateAxisArray;
/** The number of items in @c dateAxisArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger dateAxisArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ChartStyle_StyleData*> *dropLinesArray;
/** The number of items in @c dropLinesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger dropLinesArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ChartStyle_StyleData*> *hiLowLineArray;
/** The number of items in @c hiLowLineArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger hiLowLineArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ChartStyle_StyleData*> *leaderLineArray;
/** The number of items in @c leaderLineArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger leaderLineArray_Count;

@end

#pragma mark - ChartStyle_StyleData

typedef GPB_ENUM(ChartStyle_StyleData_FieldNumber) {
  ChartStyle_StyleData_FieldNumber_ThemeRef = 1,
  ChartStyle_StyleData_FieldNumber_Fill = 2,
  ChartStyle_StyleData_FieldNumber_Stroke = 3,
  ChartStyle_StyleData_FieldNumber_FillPattern = 4,
  ChartStyle_StyleData_FieldNumber_StrokePatern = 5,
  ChartStyle_StyleData_FieldNumber_DefPrProps = 6,
};

@interface ChartStyle_StyleData : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) ThemeReference *themeRef;
/** Test to see if @c themeRef has been set. */
@property(nonatomic, readwrite) BOOL hasThemeRef;

@property(nonatomic, readwrite, strong, null_resettable) Fill *fill;
/** Test to see if @c fill has been set. */
@property(nonatomic, readwrite) BOOL hasFill;

@property(nonatomic, readwrite, strong, null_resettable) Stroke *stroke;
/** Test to see if @c stroke has been set. */
@property(nonatomic, readwrite) BOOL hasStroke;

@property(nonatomic, readwrite) ChartStyle_StyleData_PatternType fillPattern;

@property(nonatomic, readwrite) BOOL hasFillPattern;
@property(nonatomic, readwrite) ChartStyle_StyleData_PatternType strokePatern;

@property(nonatomic, readwrite) BOOL hasStrokePatern;
@property(nonatomic, readwrite, strong, null_resettable) PortionProps *defPrProps;
/** Test to see if @c defPrProps has been set. */
@property(nonatomic, readwrite) BOOL hasDefPrProps;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
