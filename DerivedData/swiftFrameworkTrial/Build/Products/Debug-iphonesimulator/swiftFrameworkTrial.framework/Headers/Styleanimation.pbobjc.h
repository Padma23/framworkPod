// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: styleanimation.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Effects;
@class Fill;
@class PortionProps;
@class Stroke;
@class StyleAnimation_StyleAnimationValues;
@class StyleAnimation_StyleAnimationValues_AnimationConfiguration;
@class StyleAnimation_StyleAnimationValues_AnimationConfiguration_Cyclic;
@class Transform;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum StyleAnimation_StyleAnimationType

typedef GPB_ENUM(StyleAnimation_StyleAnimationType) {
  /** Contains both transparency (Fill - GRADUAL type) and dimension (transform - CYCLIC type) */
  StyleAnimation_StyleAnimationType_Pulse = 0,

  /** rotate the shape by some angle in both directions (basically , clockwise and anticlockwise) for said number of cycles. Say , a shape is of intial angle 0 , now for the starting point add the angle specified in the transform property (Say 12) and rotate. The number of animation cycles is 3 and the diff angle is 24 and toggle is true. The shape than rotates to -12 for the first cycle, than to +12 for the second cycle and finally to -12 for the third cycle and returns to the original position finally(here it is zero). */
  StyleAnimation_StyleAnimationType_Teeter = 1,

  /** rotate the shape for some cycle. transform.rotate = 360. */
  StyleAnimation_StyleAnimationType_Spin = 2,

  /** grow the shape by some value. transform.dim.width = 15 , transform.dim.height = 15. If there is no diff value keep on adding the initial value for the number of cycles. */
  StyleAnimation_StyleAnimationType_Grow = 3,

  /**
   * Apply color tweaks for fill and stroke color. Basically use fill.solid.color and stroke.fill.solid.color.
   * All the animations are of type "Gradual"
   **/
  StyleAnimation_StyleAnimationType_Desaturate = 4,

  /** Modify Saturation and luminance. */
  StyleAnimation_StyleAnimationType_Lighten = 5,

  /** Modify Saturation and luminance. */
  StyleAnimation_StyleAnimationType_Darken = 6,

  /** Modify Color transparency. */
  StyleAnimation_StyleAnimationType_Transparency = 7,

  /** Change object color to fill.solid.color = "accent2" */
  StyleAnimation_StyleAnimationType_ObjectColor = 8,

  /** Modify hue for fill and stroke color. */
  StyleAnimation_StyleAnimationType_ComplementaryColor = 9,

  /** Modify hue for fill and stroke color. */
  StyleAnimation_StyleAnimationType_ContrastColor = 10,

  /** Modify Fill color to "accent2" */
  StyleAnimation_StyleAnimationType_FillColor = 11,

  /** Modify Stroke color to "accent2" */
  StyleAnimation_StyleAnimationType_StrokeColor = 12,

  /** Modify Fill Color to "bg1" */
  StyleAnimation_StyleAnimationType_Colorpulse = 13,

  /** Fill Color to "accent2" in CYCLIC way , font color to "accent2" gradually */
  StyleAnimation_StyleAnimationType_Brush = 14,

  /** Change font color to "accent2" - GRADUAL */
  StyleAnimation_StyleAnimationType_FontColor = 15,

  /** Underline text - GRADUAL - PER_LETTER. */
  StyleAnimation_StyleAnimationType_Underline = 16,

  /** Font weight - GRADUAL - PER_LETTER */
  StyleAnimation_StyleAnimationType_BoldReveal = 17,

  /** Font Weight - CYCLIC */
  StyleAnimation_StyleAnimationType_BoldFlash = 18,

  /** Fill and Stroke Color to accent2 - GRADUAL , Increase Font Size - Cyclic , "order" for animation will be updated. */
  StyleAnimation_StyleAnimationType_GrowWithColor = 19,

  /** Display Block-None - CYCLIC. */
  StyleAnimation_StyleAnimationType_Flash = 20,

  /** Transform - Add/Subract left position (by some num) for said number of cycles i.e. A shape will be shaked Horizontally. */
  StyleAnimation_StyleAnimationType_Shake = 21,

  /** None animation type. */
  StyleAnimation_StyleAnimationType_None = 99,
};

GPBEnumDescriptor *StyleAnimation_StyleAnimationType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL StyleAnimation_StyleAnimationType_IsValidValue(int32_t value);

#pragma mark - Enum StyleAnimation_StyleAnimationProp

typedef GPB_ENUM(StyleAnimation_StyleAnimationProp) {
  StyleAnimation_StyleAnimationProp_Transform = 0,
  StyleAnimation_StyleAnimationProp_Fill = 1,
  StyleAnimation_StyleAnimationProp_Stroke = 2,
  StyleAnimation_StyleAnimationProp_Effects = 3,
  StyleAnimation_StyleAnimationProp_Props = 4,
};

GPBEnumDescriptor *StyleAnimation_StyleAnimationProp_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL StyleAnimation_StyleAnimationProp_IsValidValue(int32_t value);

#pragma mark - Enum StyleAnimation_StyleAnimationValues_AnimationConfiguration_StyleAnimationCategory

typedef GPB_ENUM(StyleAnimation_StyleAnimationValues_AnimationConfiguration_StyleAnimationCategory) {
  /** Cyclic animation */
  StyleAnimation_StyleAnimationValues_AnimationConfiguration_StyleAnimationCategory_Cyclic = 0,

  /** Animate Gradually. */
  StyleAnimation_StyleAnimationValues_AnimationConfiguration_StyleAnimationCategory_Gradual = 1,
};

GPBEnumDescriptor *StyleAnimation_StyleAnimationValues_AnimationConfiguration_StyleAnimationCategory_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL StyleAnimation_StyleAnimationValues_AnimationConfiguration_StyleAnimationCategory_IsValidValue(int32_t value);

#pragma mark - Enum StyleAnimation_StyleAnimationValues_AnimationConfiguration_Gradual

typedef GPB_ENUM(StyleAnimation_StyleAnimationValues_AnimationConfiguration_Gradual) {
  /** Move gradually towards the specified prop. */
  StyleAnimation_StyleAnimationValues_AnimationConfiguration_Gradual_UntilProp = 0,

  /** Move gradully till the end point i.e. till animation reaches the original state.i.e. Animation moves from original state to a specified prop which is gradual , the return to original state should also be gradual */
  StyleAnimation_StyleAnimationValues_AnimationConfiguration_Gradual_UntilEnd = 1,

  /** Animate one letter , used only for text animations. */
  StyleAnimation_StyleAnimationValues_AnimationConfiguration_Gradual_PerLetter = 2,

  /** Animate one word. */
  StyleAnimation_StyleAnimationValues_AnimationConfiguration_Gradual_PerWord = 3,

  /** Animate one line. */
  StyleAnimation_StyleAnimationValues_AnimationConfiguration_Gradual_PerLine = 4,

  /** Animate all the text. */
  StyleAnimation_StyleAnimationValues_AnimationConfiguration_Gradual_FullText = 5,
};

GPBEnumDescriptor *StyleAnimation_StyleAnimationValues_AnimationConfiguration_Gradual_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL StyleAnimation_StyleAnimationValues_AnimationConfiguration_Gradual_IsValidValue(int32_t value);

#pragma mark - Enum StyleAnimation_StyleAnimationValues_AnimationConfiguration_Cyclic_CyclicCategory

typedef GPB_ENUM(StyleAnimation_StyleAnimationValues_AnimationConfiguration_Cyclic_CyclicCategory) {
  /** toggle between true/false or positive/negative values. */
  StyleAnimation_StyleAnimationValues_AnimationConfiguration_Cyclic_CyclicCategory_Toggle = 0,

  /** Reach the peak value and than return. That is add the diff values upto a point and from there on subtract them. */
  StyleAnimation_StyleAnimationValues_AnimationConfiguration_Cyclic_CyclicCategory_PeakAndReturn = 1,
};

GPBEnumDescriptor *StyleAnimation_StyleAnimationValues_AnimationConfiguration_Cyclic_CyclicCategory_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL StyleAnimation_StyleAnimationValues_AnimationConfiguration_Cyclic_CyclicCategory_IsValidValue(int32_t value);

#pragma mark - StyleanimationRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface StyleanimationRoot : GPBRootObject
@end

#pragma mark - StyleAnimation

typedef GPB_ENUM(StyleAnimation_FieldNumber) {
  StyleAnimation_FieldNumber_Transform = 1,
  StyleAnimation_FieldNumber_Fill = 2,
  StyleAnimation_FieldNumber_Stroke = 3,
  StyleAnimation_FieldNumber_Effects = 4,
  StyleAnimation_FieldNumber_Props = 5,
  StyleAnimation_FieldNumber_Type = 6,
  StyleAnimation_FieldNumber_ValuesArray = 7,
  StyleAnimation_FieldNumber_ReturnToStart = 8,
  StyleAnimation_FieldNumber_OrderArray = 9,
};

@interface StyleAnimation : GPBMessage

/** 2D Transformation */
@property(nonatomic, readwrite, strong, null_resettable) Transform *transform;
/** Test to see if @c transform has been set. */
@property(nonatomic, readwrite) BOOL hasTransform;

/** Fill */
@property(nonatomic, readwrite, strong, null_resettable) Fill *fill;
/** Test to see if @c fill has been set. */
@property(nonatomic, readwrite) BOOL hasFill;

/** Stroke */
@property(nonatomic, readwrite, strong, null_resettable) Stroke *stroke;
/** Test to see if @c stroke has been set. */
@property(nonatomic, readwrite) BOOL hasStroke;

/** Effects list */
@property(nonatomic, readwrite, strong, null_resettable) Effects *effects;
/** Test to see if @c effects has been set. */
@property(nonatomic, readwrite) BOOL hasEffects;

/** portion style */
@property(nonatomic, readwrite, strong, null_resettable) PortionProps *props;
/** Test to see if @c props has been set. */
@property(nonatomic, readwrite) BOOL hasProps;

/** This one is only to select a particular animation type in the UI. */
@property(nonatomic, readwrite) StyleAnimation_StyleAnimationType type;

@property(nonatomic, readwrite) BOOL hasType;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<StyleAnimation_StyleAnimationValues*> *valuesArray;
/** The number of items in @c valuesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger valuesArray_Count;

/** Boolean for indication of the animation to return to original state. */
@property(nonatomic, readwrite) BOOL returnToStart;

@property(nonatomic, readwrite) BOOL hasReturnToStart;
/**
 * By default the order for animation is all i.e. if we have fill and stroke color modification both will happen together.
 * If for some particular animation we need to follow an order , it will be mentioned here.
 **/
// |orderArray| contains |StyleAnimation_StyleAnimationProp|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *orderArray;
/** The number of items in @c orderArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger orderArray_Count;

@end

#pragma mark - StyleAnimation_StyleAnimationValues

typedef GPB_ENUM(StyleAnimation_StyleAnimationValues_FieldNumber) {
  StyleAnimation_StyleAnimationValues_FieldNumber_PropType = 1,
  StyleAnimation_StyleAnimationValues_FieldNumber_Config = 2,
};

@interface StyleAnimation_StyleAnimationValues : GPBMessage

@property(nonatomic, readwrite) StyleAnimation_StyleAnimationProp propType;

@property(nonatomic, readwrite) BOOL hasPropType;
@property(nonatomic, readwrite, strong, null_resettable) StyleAnimation_StyleAnimationValues_AnimationConfiguration *config;
/** Test to see if @c config has been set. */
@property(nonatomic, readwrite) BOOL hasConfig;

@end

#pragma mark - StyleAnimation_StyleAnimationValues_AnimationConfiguration

typedef GPB_ENUM(StyleAnimation_StyleAnimationValues_AnimationConfiguration_FieldNumber) {
  StyleAnimation_StyleAnimationValues_AnimationConfiguration_FieldNumber_Category = 1,
  StyleAnimation_StyleAnimationValues_AnimationConfiguration_FieldNumber_Cyclic = 2,
  StyleAnimation_StyleAnimationValues_AnimationConfiguration_FieldNumber_Gradual = 3,
};

@interface StyleAnimation_StyleAnimationValues_AnimationConfiguration : GPBMessage

@property(nonatomic, readwrite) StyleAnimation_StyleAnimationValues_AnimationConfiguration_StyleAnimationCategory category;

@property(nonatomic, readwrite) BOOL hasCategory;
@property(nonatomic, readwrite, strong, null_resettable) StyleAnimation_StyleAnimationValues_AnimationConfiguration_Cyclic *cyclic;
/** Test to see if @c cyclic has been set. */
@property(nonatomic, readwrite) BOOL hasCyclic;

@property(nonatomic, readwrite) StyleAnimation_StyleAnimationValues_AnimationConfiguration_Gradual gradual;

@property(nonatomic, readwrite) BOOL hasGradual;
@end

#pragma mark - StyleAnimation_StyleAnimationValues_AnimationConfiguration_Cyclic

typedef GPB_ENUM(StyleAnimation_StyleAnimationValues_AnimationConfiguration_Cyclic_FieldNumber) {
  StyleAnimation_StyleAnimationValues_AnimationConfiguration_Cyclic_FieldNumber_Cycle = 1,
  StyleAnimation_StyleAnimationValues_AnimationConfiguration_Cyclic_FieldNumber_Diff = 2,
  StyleAnimation_StyleAnimationValues_AnimationConfiguration_Cyclic_FieldNumber_Category = 3,
};

@interface StyleAnimation_StyleAnimationValues_AnimationConfiguration_Cyclic : GPBMessage

/** Number of animation cycles. */
@property(nonatomic, readwrite) int32_t cycle;

@property(nonatomic, readwrite) BOOL hasCycle;
/** uniform difference between the initial property and the run time animation prop. */
@property(nonatomic, readwrite) float diff;

@property(nonatomic, readwrite) BOOL hasDiff;
@property(nonatomic, readwrite) StyleAnimation_StyleAnimationValues_AnimationConfiguration_Cyclic_CyclicCategory category;

@property(nonatomic, readwrite) BOOL hasCategory;
@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
