// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: displayanimation.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class DisplayAnimation_FlyThru;
@class DisplayAnimation_Geometric;
@class DisplayAnimation_Glitter;
@class DisplayAnimation_Reveal;
@class DisplayAnimation_Shred;
@class DisplayAnimation_Split;
@class DisplayAnimation_TransBlack;
@class DisplayAnimation_WheelWipe;
GPB_ENUM_FWD_DECLARE(PresetShapeGeometry);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum DisplayAnimation_TransitionType

typedef GPB_ENUM(DisplayAnimation_TransitionType) {
  DisplayAnimation_TransitionType_None = 0,
  DisplayAnimation_TransitionType_Blinds = 1,
  DisplayAnimation_TransitionType_Checkers = 2,

  /** Use Shape Animation with Circle instead of this one. */
  DisplayAnimation_TransitionType_Circle = 3,
  DisplayAnimation_TransitionType_Comb = 4,
  DisplayAnimation_TransitionType_Cover = 5,
  DisplayAnimation_TransitionType_Cut = 6,
  DisplayAnimation_TransitionType_Diamond = 7,
  DisplayAnimation_TransitionType_Dissolve = 8,
  DisplayAnimation_TransitionType_Fade = 9,
  DisplayAnimation_TransitionType_Newsflash = 10,
  DisplayAnimation_TransitionType_Plus = 11,

  /** Uncover */
  DisplayAnimation_TransitionType_Pull = 12,
  DisplayAnimation_TransitionType_Push = 13,
  DisplayAnimation_TransitionType_Random = 14,
  DisplayAnimation_TransitionType_Randombar = 15,
  DisplayAnimation_TransitionType_Split = 16,
  DisplayAnimation_TransitionType_Strips = 17,

  /** Clock with wedge. */
  DisplayAnimation_TransitionType_Wedge = 18,

  /** Clock - clockwise. */
  DisplayAnimation_TransitionType_Wheel = 19,
  DisplayAnimation_TransitionType_Wipe = 20,
  DisplayAnimation_TransitionType_Zoom = 21,
  DisplayAnimation_TransitionType_Fly = 22,

  /** Matches FLOAT_IN. */
  DisplayAnimation_TransitionType_Float = 23,
  DisplayAnimation_TransitionType_Appear = 24,

  /** KN */
  DisplayAnimation_TransitionType_Revolvingdoor = 25,

  /** KN */
  DisplayAnimation_TransitionType_Pivot = 26,

  /** KN */
  DisplayAnimation_TransitionType_Twirl = 27,

  /** KN -- Switch */
  DisplayAnimation_TransitionType_Swap = 28,
  DisplayAnimation_TransitionType_Flip = 29,
  DisplayAnimation_TransitionType_Cube = 30,
  DisplayAnimation_TransitionType_Gallery = 31,

  /** KN */
  DisplayAnimation_TransitionType_Fall = 32,
  DisplayAnimation_TransitionType_Reveal = 33,

  /** Shape */
  DisplayAnimation_TransitionType_Geometric = 34,
  DisplayAnimation_TransitionType_Flash = 35,
  DisplayAnimation_TransitionType_Ripple = 36,
  DisplayAnimation_TransitionType_Honeycomb = 37,
  DisplayAnimation_TransitionType_Glitter = 38,
  DisplayAnimation_TransitionType_Vortex = 39,
  DisplayAnimation_TransitionType_Peek = 40,

  /** Entry - Expand , Exit - Contract. */
  DisplayAnimation_TransitionType_ExpandOrContract = 41,
  DisplayAnimation_TransitionType_FadedSwivel = 42,
  DisplayAnimation_TransitionType_FadedZoom = 43,
  DisplayAnimation_TransitionType_CenterRevolve = 44,
  DisplayAnimation_TransitionType_GrowOrShrinkAndTurn = 45,
  DisplayAnimation_TransitionType_RiseupSinkdown = 46,
  DisplayAnimation_TransitionType_Spinner = 47,
  DisplayAnimation_TransitionType_Boomer = 48,
  DisplayAnimation_TransitionType_Bounce = 49,
  DisplayAnimation_TransitionType_Credits = 50,
  DisplayAnimation_TransitionType_CurveUpOrDown = 51,
  DisplayAnimation_TransitionType_PinWheel = 52,
  DisplayAnimation_TransitionType_Spiral = 53,
  DisplayAnimation_TransitionType_Swivel = 54,
  DisplayAnimation_TransitionType_Whip = 55,
  DisplayAnimation_TransitionType_CurvyFloat = 56,
  DisplayAnimation_TransitionType_Drop = 57,
  DisplayAnimation_TransitionType_Pan = 58,
  DisplayAnimation_TransitionType_Ferriswheel = 59,
  DisplayAnimation_TransitionType_Conveyor = 60,
  DisplayAnimation_TransitionType_Rotate = 61,
  DisplayAnimation_TransitionType_Window = 62,
  DisplayAnimation_TransitionType_Orbit = 63,
  DisplayAnimation_TransitionType_Flythru = 64,
  DisplayAnimation_TransitionType_Box = 65,
  DisplayAnimation_TransitionType_Door = 66,
  DisplayAnimation_TransitionType_Shred = 67,
  DisplayAnimation_TransitionType_WheelWipe = 68,

  /** KN - Animation */
  DisplayAnimation_TransitionType_Meteor = 69,
};

GPBEnumDescriptor *DisplayAnimation_TransitionType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL DisplayAnimation_TransitionType_IsValidValue(int32_t value);

#pragma mark - Enum DisplayAnimation_Axis

typedef GPB_ENUM(DisplayAnimation_Axis) {
  DisplayAnimation_Axis_Hor = 0,
  DisplayAnimation_Axis_Ver = 1,
};

GPBEnumDescriptor *DisplayAnimation_Axis_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL DisplayAnimation_Axis_IsValidValue(int32_t value);

#pragma mark - Enum DisplayAnimation_Direction

typedef GPB_ENUM(DisplayAnimation_Direction) {
  DisplayAnimation_Direction_Left = 0,
  DisplayAnimation_Direction_Down = 1,
  DisplayAnimation_Direction_Right = 2,
  DisplayAnimation_Direction_Up = 3,
  DisplayAnimation_Direction_LeftDown = 4,
  DisplayAnimation_Direction_LeftUp = 5,
  DisplayAnimation_Direction_RightDown = 6,
  DisplayAnimation_Direction_RightUp = 7,

  /** For transitions like Ripple. */
  DisplayAnimation_Direction_Center = 8,
};

GPBEnumDescriptor *DisplayAnimation_Direction_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL DisplayAnimation_Direction_IsValidValue(int32_t value);

#pragma mark - Enum DisplayAnimation_TransitionDirection

typedef GPB_ENUM(DisplayAnimation_TransitionDirection) {
  DisplayAnimation_TransitionDirection_In = 0,
  DisplayAnimation_TransitionDirection_Out = 1,
  DisplayAnimation_TransitionDirection_InSlightly = 2,
  DisplayAnimation_TransitionDirection_OutSlightly = 3,
  DisplayAnimation_TransitionDirection_InFromCenter = 4,
  DisplayAnimation_TransitionDirection_OutFromBottom = 5,
  DisplayAnimation_TransitionDirection_OutToCenter = 6,
  DisplayAnimation_TransitionDirection_InToBottom = 7,
};

GPBEnumDescriptor *DisplayAnimation_TransitionDirection_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL DisplayAnimation_TransitionDirection_IsValidValue(int32_t value);

#pragma mark - Enum DisplayAnimation_RotateDirection

typedef GPB_ENUM(DisplayAnimation_RotateDirection) {
  DisplayAnimation_RotateDirection_Clockwise = 0,
  DisplayAnimation_RotateDirection_AntiClockwise = 1,
};

GPBEnumDescriptor *DisplayAnimation_RotateDirection_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL DisplayAnimation_RotateDirection_IsValidValue(int32_t value);

#pragma mark - Enum DisplayAnimation_ObjectType

typedef GPB_ENUM(DisplayAnimation_ObjectType) {
  DisplayAnimation_ObjectType_Strip = 0,
  DisplayAnimation_ObjectType_Particle = 1,
};

GPBEnumDescriptor *DisplayAnimation_ObjectType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL DisplayAnimation_ObjectType_IsValidValue(int32_t value);

#pragma mark - DisplayanimationRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface DisplayanimationRoot : GPBRootObject
@end

#pragma mark - DisplayAnimation

typedef GPB_ENUM(DisplayAnimation_FieldNumber) {
  DisplayAnimation_FieldNumber_Type = 1,
  DisplayAnimation_FieldNumber_Blinds = 2,
  DisplayAnimation_FieldNumber_Checker = 3,
  DisplayAnimation_FieldNumber_Comb = 4,
  DisplayAnimation_FieldNumber_Cover = 5,
  DisplayAnimation_FieldNumber_Cut = 6,
  DisplayAnimation_FieldNumber_Fade = 7,
  DisplayAnimation_FieldNumber_Pull = 8,
  DisplayAnimation_FieldNumber_Push = 9,
  DisplayAnimation_FieldNumber_Randombar = 10,
  DisplayAnimation_FieldNumber_Split = 11,
  DisplayAnimation_FieldNumber_Strips = 12,
  DisplayAnimation_FieldNumber_Wheel = 13,
  DisplayAnimation_FieldNumber_Wipe = 14,
  DisplayAnimation_FieldNumber_Zoom = 15,
  DisplayAnimation_FieldNumber_Fly = 16,
  DisplayAnimation_FieldNumber_Float_p = 17,
  DisplayAnimation_FieldNumber_Revolvingdoor = 18,
  DisplayAnimation_FieldNumber_Pivot = 19,
  DisplayAnimation_FieldNumber_Twirl = 20,
  DisplayAnimation_FieldNumber_Swap = 21,
  DisplayAnimation_FieldNumber_Flip = 22,
  DisplayAnimation_FieldNumber_Cube = 23,
  DisplayAnimation_FieldNumber_Gallery = 24,
  DisplayAnimation_FieldNumber_Reveal = 25,
  DisplayAnimation_FieldNumber_Geometric = 26,
  DisplayAnimation_FieldNumber_Ripple = 27,
  DisplayAnimation_FieldNumber_Glitter = 28,
  DisplayAnimation_FieldNumber_Vortex = 29,
  DisplayAnimation_FieldNumber_Peek = 30,
  DisplayAnimation_FieldNumber_Swivel = 31,
  DisplayAnimation_FieldNumber_FadedZoom = 32,
  DisplayAnimation_FieldNumber_Pan = 33,
  DisplayAnimation_FieldNumber_Ferriswheel = 34,
  DisplayAnimation_FieldNumber_Conveyor = 35,
  DisplayAnimation_FieldNumber_Rotate = 36,
  DisplayAnimation_FieldNumber_Window = 37,
  DisplayAnimation_FieldNumber_Orbit = 38,
  DisplayAnimation_FieldNumber_Flythru = 39,
  DisplayAnimation_FieldNumber_Box = 40,
  DisplayAnimation_FieldNumber_Door = 41,
  DisplayAnimation_FieldNumber_Shred = 42,
  DisplayAnimation_FieldNumber_Wheelwipe = 43,
  DisplayAnimation_FieldNumber_Meteor = 44,
};

@interface DisplayAnimation : GPBMessage

@property(nonatomic, readwrite) DisplayAnimation_TransitionType type;

@property(nonatomic, readwrite) BOOL hasType;
@property(nonatomic, readwrite) DisplayAnimation_Axis blinds;

@property(nonatomic, readwrite) BOOL hasBlinds;
@property(nonatomic, readwrite) DisplayAnimation_Axis checker;

@property(nonatomic, readwrite) BOOL hasChecker;
@property(nonatomic, readwrite) DisplayAnimation_Axis comb;

@property(nonatomic, readwrite) BOOL hasComb;
@property(nonatomic, readwrite) DisplayAnimation_Direction cover;

@property(nonatomic, readwrite) BOOL hasCover;
@property(nonatomic, readwrite, strong, null_resettable) DisplayAnimation_TransBlack *cut;
/** Test to see if @c cut has been set. */
@property(nonatomic, readwrite) BOOL hasCut;

@property(nonatomic, readwrite, strong, null_resettable) DisplayAnimation_TransBlack *fade;
/** Test to see if @c fade has been set. */
@property(nonatomic, readwrite) BOOL hasFade;

@property(nonatomic, readwrite) DisplayAnimation_Direction pull;

@property(nonatomic, readwrite) BOOL hasPull;
@property(nonatomic, readwrite) DisplayAnimation_Direction push;

@property(nonatomic, readwrite) BOOL hasPush;
@property(nonatomic, readwrite) DisplayAnimation_Axis randombar;

@property(nonatomic, readwrite) BOOL hasRandombar;
@property(nonatomic, readwrite, strong, null_resettable) DisplayAnimation_Split *split;
/** Test to see if @c split has been set. */
@property(nonatomic, readwrite) BOOL hasSplit;

@property(nonatomic, readwrite) DisplayAnimation_Direction strips;

@property(nonatomic, readwrite) BOOL hasStrips;
/** denotes number of spokes in the wheel. */
@property(nonatomic, readwrite) int32_t wheel;

@property(nonatomic, readwrite) BOOL hasWheel;
@property(nonatomic, readwrite) DisplayAnimation_Direction wipe;

@property(nonatomic, readwrite) BOOL hasWipe;
@property(nonatomic, readwrite) DisplayAnimation_TransitionDirection zoom;

@property(nonatomic, readwrite) BOOL hasZoom;
@property(nonatomic, readwrite) DisplayAnimation_Direction fly;

@property(nonatomic, readwrite) BOOL hasFly;
@property(nonatomic, readwrite) DisplayAnimation_Direction float_p;

@property(nonatomic, readwrite) BOOL hasFloat_p;
@property(nonatomic, readwrite) DisplayAnimation_Direction revolvingdoor;

@property(nonatomic, readwrite) BOOL hasRevolvingdoor;
@property(nonatomic, readwrite) DisplayAnimation_Direction pivot;

@property(nonatomic, readwrite) BOOL hasPivot;
@property(nonatomic, readwrite) DisplayAnimation_RotateDirection twirl;

@property(nonatomic, readwrite) BOOL hasTwirl;
@property(nonatomic, readwrite) DisplayAnimation_Direction swap;

@property(nonatomic, readwrite) BOOL hasSwap;
@property(nonatomic, readwrite) DisplayAnimation_Direction flip;

@property(nonatomic, readwrite) BOOL hasFlip;
@property(nonatomic, readwrite) DisplayAnimation_Direction cube;

@property(nonatomic, readwrite) BOOL hasCube;
@property(nonatomic, readwrite) DisplayAnimation_Direction gallery;

@property(nonatomic, readwrite) BOOL hasGallery;
@property(nonatomic, readwrite, strong, null_resettable) DisplayAnimation_Reveal *reveal;
/** Test to see if @c reveal has been set. */
@property(nonatomic, readwrite) BOOL hasReveal;

@property(nonatomic, readwrite, strong, null_resettable) DisplayAnimation_Geometric *geometric;
/** Test to see if @c geometric has been set. */
@property(nonatomic, readwrite) BOOL hasGeometric;

@property(nonatomic, readwrite) DisplayAnimation_Direction ripple;

@property(nonatomic, readwrite) BOOL hasRipple;
@property(nonatomic, readwrite, strong, null_resettable) DisplayAnimation_Glitter *glitter;
/** Test to see if @c glitter has been set. */
@property(nonatomic, readwrite) BOOL hasGlitter;

@property(nonatomic, readwrite) DisplayAnimation_Direction vortex;

@property(nonatomic, readwrite) BOOL hasVortex;
@property(nonatomic, readwrite) DisplayAnimation_Direction peek;

@property(nonatomic, readwrite) BOOL hasPeek;
@property(nonatomic, readwrite) DisplayAnimation_Axis swivel;

@property(nonatomic, readwrite) BOOL hasSwivel;
@property(nonatomic, readwrite) DisplayAnimation_TransitionDirection fadedZoom;

@property(nonatomic, readwrite) BOOL hasFadedZoom;
@property(nonatomic, readwrite) DisplayAnimation_Direction pan;

@property(nonatomic, readwrite) BOOL hasPan;
@property(nonatomic, readwrite) DisplayAnimation_Direction ferriswheel;

@property(nonatomic, readwrite) BOOL hasFerriswheel;
@property(nonatomic, readwrite) DisplayAnimation_Direction conveyor;

@property(nonatomic, readwrite) BOOL hasConveyor;
@property(nonatomic, readwrite) DisplayAnimation_Direction rotate;

@property(nonatomic, readwrite) BOOL hasRotate;
@property(nonatomic, readwrite) DisplayAnimation_Axis window;

@property(nonatomic, readwrite) BOOL hasWindow;
@property(nonatomic, readwrite) DisplayAnimation_Direction orbit;

@property(nonatomic, readwrite) BOOL hasOrbit;
@property(nonatomic, readwrite, strong, null_resettable) DisplayAnimation_FlyThru *flythru;
/** Test to see if @c flythru has been set. */
@property(nonatomic, readwrite) BOOL hasFlythru;

@property(nonatomic, readwrite) DisplayAnimation_Direction box;

@property(nonatomic, readwrite) BOOL hasBox;
@property(nonatomic, readwrite) DisplayAnimation_Axis door;

@property(nonatomic, readwrite) BOOL hasDoor;
@property(nonatomic, readwrite, strong, null_resettable) DisplayAnimation_Shred *shred;
/** Test to see if @c shred has been set. */
@property(nonatomic, readwrite) BOOL hasShred;

@property(nonatomic, readwrite, strong, null_resettable) DisplayAnimation_WheelWipe *wheelwipe;
/** Test to see if @c wheelwipe has been set. */
@property(nonatomic, readwrite) BOOL hasWheelwipe;

@property(nonatomic, readwrite) DisplayAnimation_Direction meteor;

@property(nonatomic, readwrite) BOOL hasMeteor;
@end

#pragma mark - DisplayAnimation_TransBlack

typedef GPB_ENUM(DisplayAnimation_TransBlack_FieldNumber) {
  DisplayAnimation_TransBlack_FieldNumber_ThruBlack = 1,
};

@interface DisplayAnimation_TransBlack : GPBMessage

@property(nonatomic, readwrite) BOOL thruBlack;

@property(nonatomic, readwrite) BOOL hasThruBlack;
@end

#pragma mark - DisplayAnimation_Split

typedef GPB_ENUM(DisplayAnimation_Split_FieldNumber) {
  DisplayAnimation_Split_FieldNumber_Dir = 1,
  DisplayAnimation_Split_FieldNumber_TransDir = 2,
};

@interface DisplayAnimation_Split : GPBMessage

@property(nonatomic, readwrite) DisplayAnimation_Axis dir;

@property(nonatomic, readwrite) BOOL hasDir;
@property(nonatomic, readwrite) DisplayAnimation_TransitionDirection transDir;

@property(nonatomic, readwrite) BOOL hasTransDir;
@end

#pragma mark - DisplayAnimation_Reveal

typedef GPB_ENUM(DisplayAnimation_Reveal_FieldNumber) {
  DisplayAnimation_Reveal_FieldNumber_Dir = 1,
  DisplayAnimation_Reveal_FieldNumber_ThruBlack = 2,
};

@interface DisplayAnimation_Reveal : GPBMessage

@property(nonatomic, readwrite) DisplayAnimation_Direction dir;

@property(nonatomic, readwrite) BOOL hasDir;
@property(nonatomic, readwrite) BOOL thruBlack;

@property(nonatomic, readwrite) BOOL hasThruBlack;
@end

#pragma mark - DisplayAnimation_Geometric

typedef GPB_ENUM(DisplayAnimation_Geometric_FieldNumber) {
  DisplayAnimation_Geometric_FieldNumber_Geom = 1,
  DisplayAnimation_Geometric_FieldNumber_TransDir = 2,
};

@interface DisplayAnimation_Geometric : GPBMessage

@property(nonatomic, readwrite) enum PresetShapeGeometry geom;

@property(nonatomic, readwrite) BOOL hasGeom;
@property(nonatomic, readwrite) DisplayAnimation_TransitionDirection transDir;

@property(nonatomic, readwrite) BOOL hasTransDir;
@end

#pragma mark - DisplayAnimation_Glitter

typedef GPB_ENUM(DisplayAnimation_Glitter_FieldNumber) {
  DisplayAnimation_Glitter_FieldNumber_Dir = 1,
  DisplayAnimation_Glitter_FieldNumber_Pattern = 2,
};

@interface DisplayAnimation_Glitter : GPBMessage

@property(nonatomic, readwrite) DisplayAnimation_Direction dir;

@property(nonatomic, readwrite) BOOL hasDir;
@property(nonatomic, readwrite) enum PresetShapeGeometry pattern;

@property(nonatomic, readwrite) BOOL hasPattern;
@end

#pragma mark - DisplayAnimation_FlyThru

typedef GPB_ENUM(DisplayAnimation_FlyThru_FieldNumber) {
  DisplayAnimation_FlyThru_FieldNumber_TransDir = 1,
  DisplayAnimation_FlyThru_FieldNumber_Bounce = 2,
};

@interface DisplayAnimation_FlyThru : GPBMessage

@property(nonatomic, readwrite) DisplayAnimation_TransitionDirection transDir;

@property(nonatomic, readwrite) BOOL hasTransDir;
@property(nonatomic, readwrite) BOOL bounce;

@property(nonatomic, readwrite) BOOL hasBounce;
@end

#pragma mark - DisplayAnimation_Shred

typedef GPB_ENUM(DisplayAnimation_Shred_FieldNumber) {
  DisplayAnimation_Shred_FieldNumber_TransDir = 1,
  DisplayAnimation_Shred_FieldNumber_Type = 2,
};

@interface DisplayAnimation_Shred : GPBMessage

@property(nonatomic, readwrite) DisplayAnimation_TransitionDirection transDir;

@property(nonatomic, readwrite) BOOL hasTransDir;
@property(nonatomic, readwrite) DisplayAnimation_ObjectType type;

@property(nonatomic, readwrite) BOOL hasType;
@end

#pragma mark - DisplayAnimation_WheelWipe

typedef GPB_ENUM(DisplayAnimation_WheelWipe_FieldNumber) {
  DisplayAnimation_WheelWipe_FieldNumber_Rot = 1,
  DisplayAnimation_WheelWipe_FieldNumber_Spokes = 2,
};

@interface DisplayAnimation_WheelWipe : GPBMessage

@property(nonatomic, readwrite) DisplayAnimation_RotateDirection rot;

@property(nonatomic, readwrite) BOOL hasRot;
@property(nonatomic, readwrite) int32_t spokes;

@property(nonatomic, readwrite) BOOL hasSpokes;
@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
