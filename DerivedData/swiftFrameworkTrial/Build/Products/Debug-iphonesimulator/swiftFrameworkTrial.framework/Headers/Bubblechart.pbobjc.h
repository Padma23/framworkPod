// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bubblechart.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class BubbleChart_BubbleChartDetails;
@class BubbleChart_BubbleChartDetails_BubbleChartSeries;
@class SeriesDetails;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum BubbleChart_BubbleChartDetails_RepresentBubbleSize

typedef GPB_ENUM(BubbleChart_BubbleChartDetails_RepresentBubbleSize) {
  BubbleChart_BubbleChartDetails_RepresentBubbleSize_Width = 0,
  BubbleChart_BubbleChartDetails_RepresentBubbleSize_Area = 1,
};

GPBEnumDescriptor *BubbleChart_BubbleChartDetails_RepresentBubbleSize_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL BubbleChart_BubbleChartDetails_RepresentBubbleSize_IsValidValue(int32_t value);

#pragma mark - BubblechartRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface BubblechartRoot : GPBRootObject
@end

#pragma mark - BubbleChart

typedef GPB_ENUM(BubbleChart_FieldNumber) {
  BubbleChart_FieldNumber_Details = 1,
};

@interface BubbleChart : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BubbleChart_BubbleChartDetails *details;
/** Test to see if @c details has been set. */
@property(nonatomic, readwrite) BOOL hasDetails;

@end

#pragma mark - BubbleChart_BubbleChartDetails

typedef GPB_ENUM(BubbleChart_BubbleChartDetails_FieldNumber) {
  BubbleChart_BubbleChartDetails_FieldNumber_SeriesArray = 1,
  BubbleChart_BubbleChartDetails_FieldNumber_RepresentSize = 2,
  BubbleChart_BubbleChartDetails_FieldNumber_Scale = 3,
  BubbleChart_BubbleChartDetails_FieldNumber_ShowNegative = 4,
};

@interface BubbleChart_BubbleChartDetails : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<BubbleChart_BubbleChartDetails_BubbleChartSeries*> *seriesArray;
/** The number of items in @c seriesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger seriesArray_Count;

/** These values for common for all series. As of now we do not support these values separately for each series. */
@property(nonatomic, readwrite) BubbleChart_BubbleChartDetails_RepresentBubbleSize representSize;

@property(nonatomic, readwrite) BOOL hasRepresentSize;
/** Varies from 0 to 300 percentage. */
@property(nonatomic, readwrite) float scale;

@property(nonatomic, readwrite) BOOL hasScale;
@property(nonatomic, readwrite) BOOL showNegative;

@property(nonatomic, readwrite) BOOL hasShowNegative;
@end

#pragma mark - BubbleChart_BubbleChartDetails_BubbleChartSeries

typedef GPB_ENUM(BubbleChart_BubbleChartDetails_BubbleChartSeries_FieldNumber) {
  BubbleChart_BubbleChartDetails_BubbleChartSeries_FieldNumber_Details = 1,
};

@interface BubbleChart_BubbleChartDetails_BubbleChartSeries : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) SeriesDetails *details;
/** Test to see if @c details has been set. */
@property(nonatomic, readwrite) BOOL hasDetails;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
