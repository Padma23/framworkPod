// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: effects.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Color;
@class Effects_Blur;
@class Effects_Distance;
@class Effects_Reflection;
@class Effects_Reflection_Range;
@class Effects_Shadow;
@class Effects_Skew;
@class Scale;
GPB_ENUM_FWD_DECLARE(PresetProps);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum Effects_Shadow_ShadowType

typedef GPB_ENUM(Effects_Shadow_ShadowType) {
  Effects_Shadow_ShadowType_Inner = 0,
  Effects_Shadow_ShadowType_Outer = 1,
};

GPBEnumDescriptor *Effects_Shadow_ShadowType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Effects_Shadow_ShadowType_IsValidValue(int32_t value);

#pragma mark - EffectsRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface EffectsRoot : GPBRootObject
@end

#pragma mark - Effects

typedef GPB_ENUM(Effects_FieldNumber) {
  Effects_FieldNumber_Reflection = 1,
  Effects_FieldNumber_Shadow = 2,
};

@interface Effects : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Effects_Reflection *reflection;
/** Test to see if @c reflection has been set. */
@property(nonatomic, readwrite) BOOL hasReflection;

@property(nonatomic, readwrite, strong, null_resettable) Effects_Shadow *shadow;
/** Test to see if @c shadow has been set. */
@property(nonatomic, readwrite) BOOL hasShadow;

@end

#pragma mark - Effects_Reflection

typedef GPB_ENUM(Effects_Reflection_FieldNumber) {
  Effects_Reflection_FieldNumber_Alpha = 1,
  Effects_Reflection_FieldNumber_Pos = 2,
  Effects_Reflection_FieldNumber_Distance = 3,
  Effects_Reflection_FieldNumber_Scale = 4,
  Effects_Reflection_FieldNumber_Preset = 5,
};

@interface Effects_Reflection : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Effects_Reflection_Range *alpha;
/** Test to see if @c alpha has been set. */
@property(nonatomic, readwrite) BOOL hasAlpha;

@property(nonatomic, readwrite, strong, null_resettable) Effects_Reflection_Range *pos;
/** Test to see if @c pos has been set. */
@property(nonatomic, readwrite) BOOL hasPos;

@property(nonatomic, readwrite, strong, null_resettable) Effects_Distance *distance;
/** Test to see if @c distance has been set. */
@property(nonatomic, readwrite) BOOL hasDistance;

@property(nonatomic, readwrite, strong, null_resettable) Scale *scale;
/** Test to see if @c scale has been set. */
@property(nonatomic, readwrite) BOOL hasScale;

@property(nonatomic, readwrite) enum PresetProps preset;

@property(nonatomic, readwrite) BOOL hasPreset;
@end

#pragma mark - Effects_Reflection_Range

typedef GPB_ENUM(Effects_Reflection_Range_FieldNumber) {
  Effects_Reflection_Range_FieldNumber_St = 1,
  Effects_Reflection_Range_FieldNumber_End = 2,
};

@interface Effects_Reflection_Range : GPBMessage

@property(nonatomic, readwrite) float st;

@property(nonatomic, readwrite) BOOL hasSt;
@property(nonatomic, readwrite) float end;

@property(nonatomic, readwrite) BOOL hasEnd;
@end

#pragma mark - Effects_Distance

typedef GPB_ENUM(Effects_Distance_FieldNumber) {
  Effects_Distance_FieldNumber_Radius = 1,
  Effects_Distance_FieldNumber_Angle = 2,
};

@interface Effects_Distance : GPBMessage

@property(nonatomic, readwrite) float radius;

@property(nonatomic, readwrite) BOOL hasRadius;
@property(nonatomic, readwrite) float angle;

@property(nonatomic, readwrite) BOOL hasAngle;
@end

#pragma mark - Effects_Skew

typedef GPB_ENUM(Effects_Skew_FieldNumber) {
  Effects_Skew_FieldNumber_XAngle = 1,
  Effects_Skew_FieldNumber_YAngle = 2,
};

@interface Effects_Skew : GPBMessage

@property(nonatomic, readwrite) float xAngle;

@property(nonatomic, readwrite) BOOL hasXAngle;
@property(nonatomic, readwrite) float yAngle;

@property(nonatomic, readwrite) BOOL hasYAngle;
@end

#pragma mark - Effects_Blur

typedef GPB_ENUM(Effects_Blur_FieldNumber) {
  Effects_Blur_FieldNumber_Radius = 1,
};

@interface Effects_Blur : GPBMessage

/** The value for radius is in Points. */
@property(nonatomic, readwrite) float radius;

@property(nonatomic, readwrite) BOOL hasRadius;
@end

#pragma mark - Effects_Shadow

typedef GPB_ENUM(Effects_Shadow_FieldNumber) {
  Effects_Shadow_FieldNumber_Type = 1,
  Effects_Shadow_FieldNumber_Color = 2,
  Effects_Shadow_FieldNumber_Distance = 3,
  Effects_Shadow_FieldNumber_Scale = 4,
  Effects_Shadow_FieldNumber_Preset = 5,
  Effects_Shadow_FieldNumber_Skew = 6,
  Effects_Shadow_FieldNumber_Blur = 7,
};

@interface Effects_Shadow : GPBMessage

@property(nonatomic, readwrite) Effects_Shadow_ShadowType type;

@property(nonatomic, readwrite) BOOL hasType;
@property(nonatomic, readwrite, strong, null_resettable) Color *color;
/** Test to see if @c color has been set. */
@property(nonatomic, readwrite) BOOL hasColor;

@property(nonatomic, readwrite, strong, null_resettable) Effects_Distance *distance;
/** Test to see if @c distance has been set. */
@property(nonatomic, readwrite) BOOL hasDistance;

@property(nonatomic, readwrite, strong, null_resettable) Scale *scale;
/** Test to see if @c scale has been set. */
@property(nonatomic, readwrite) BOOL hasScale;

@property(nonatomic, readwrite) enum PresetProps preset;

@property(nonatomic, readwrite) BOOL hasPreset;
@property(nonatomic, readwrite, strong, null_resettable) Effects_Skew *skew;
/** Test to see if @c skew has been set. */
@property(nonatomic, readwrite) BOOL hasSkew;

@property(nonatomic, readwrite, strong, null_resettable) Effects_Blur *blur;
/** Test to see if @c blur has been set. */
@property(nonatomic, readwrite) BOOL hasBlur;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
