// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: document.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Color;
@class CustomFile;
@class Document_CustomShow;
@class Document_Layouts;
@class Document_SessionProps;
@class Document_SlideShow;
@class Document_SlideShowProperties;
@class Document_SlideShow_SlideRange;
@class Document_SpellCheckProps;
@class Document_TableStyleDefinition;
@class Font;
@class PageSetup;
@class ParaStyle;
@class PicProperties;
@class Relationship;
@class TableStyle;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum Document_SlideShow_SlideShowType

typedef GPB_ENUM(Document_SlideShow_SlideShowType) {
  Document_SlideShow_SlideShowType_All = 0,
  Document_SlideShow_SlideShowType_Range = 1,
  Document_SlideShow_SlideShowType_Custom = 2,
};

GPBEnumDescriptor *Document_SlideShow_SlideShowType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Document_SlideShow_SlideShowType_IsValidValue(int32_t value);

#pragma mark - DocumentRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface DocumentRoot : GPBRootObject
@end

#pragma mark - Document

typedef GPB_ENUM(Document_FieldNumber) {
  Document_FieldNumber_MastersArray = 1,
  Document_FieldNumber_SlidesArray = 2,
  Document_FieldNumber_LayoutsArray = 3,
  Document_FieldNumber_SlideSetup = 4,
  Document_FieldNumber_DefTextStylesArray = 5,
  Document_FieldNumber_PicturesArray = 6,
  Document_FieldNumber_CustomShowArray = 7,
  Document_FieldNumber_SlideShow = 8,
  Document_FieldNumber_ShowProps = 9,
  Document_FieldNumber_SessionPropsArray = 10,
  Document_FieldNumber_EncryptedPictureKeysArray = 11,
  Document_FieldNumber_WebFontsArray = 12,
  Document_FieldNumber_PicPropsArray = 13,
  Document_FieldNumber_FilesArray = 14,
  Document_FieldNumber_LinkedFilesArray = 15,
  Document_FieldNumber_TableStylesArray = 16,
  Document_FieldNumber_SpellCheckProps = 17,
};

@interface Document : GPBMessage

/** Array order signifies the position of the slide. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Relationship*> *mastersArray;
/** The number of items in @c mastersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger mastersArray_Count;

/** slides list */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Relationship*> *slidesArray;
/** The number of items in @c slidesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger slidesArray_Count;

/** Layouts list. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Document_Layouts*> *layoutsArray;
/** The number of items in @c layoutsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger layoutsArray_Count;

/** Slide Set Up */
@property(nonatomic, readwrite, strong, null_resettable) PageSetup *slideSetup;
/** Test to see if @c slideSetup has been set. */
@property(nonatomic, readwrite) BOOL hasSlideSetup;

/** Default Text Styles. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ParaStyle*> *defTextStylesArray;
/** The number of items in @c defTextStylesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger defTextStylesArray_Count;

/** Picture Relationship. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Relationship*> *picturesArray;
/** The number of items in @c picturesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger picturesArray_Count;

/** List of Custom Slideshows. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Document_CustomShow*> *customShowArray;
/** The number of items in @c customShowArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger customShowArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) Document_SlideShow *slideShow;
/** Test to see if @c slideShow has been set. */
@property(nonatomic, readwrite) BOOL hasSlideShow;

@property(nonatomic, readwrite, strong, null_resettable) Document_SlideShowProperties *showProps;
/** Test to see if @c showProps has been set. */
@property(nonatomic, readwrite) BOOL hasShowProps;

/** Properties related to a session. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Document_SessionProps*> *sessionPropsArray;
/** The number of items in @c sessionPropsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger sessionPropsArray_Count;

/** Mapping between the images in the document and the encrypted key. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Document_SessionProps*> *encryptedPictureKeysArray;
/** The number of items in @c encryptedPictureKeysArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger encryptedPictureKeysArray_Count;

/** Contains the list of webfonts used in this presentation. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Font*> *webFontsArray;
/** The number of items in @c webFontsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger webFontsArray_Count;

/** Properties of pictures used in the document */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PicProperties*> *picPropsArray;
/** The number of items in @c picPropsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger picPropsArray_Count;

/** ALL files related to this document. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<CustomFile*> *filesArray;
/** The number of items in @c filesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger filesArray_Count;

/** The unique id of files linked directly to the document. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *linkedFilesArray;
/** The number of items in @c linkedFilesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger linkedFilesArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Document_TableStyleDefinition*> *tableStylesArray;
/** The number of items in @c tableStylesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger tableStylesArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) Document_SpellCheckProps *spellCheckProps;
/** Test to see if @c spellCheckProps has been set. */
@property(nonatomic, readwrite) BOOL hasSpellCheckProps;

@end

#pragma mark - Document_Layouts

typedef GPB_ENUM(Document_Layouts_FieldNumber) {
  Document_Layouts_FieldNumber_KeysArray = 1,
};

/**
 * Two Dimensional Array containing Layouts for all Slide Masters. The layouts array will be in sync with the SlideMasters Array.
 * The Layout for 0th SlideMaster will be present in the 0th position of layouts array.
 **/
@interface Document_Layouts : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Relationship*> *keysArray;
/** The number of items in @c keysArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger keysArray_Count;

@end

#pragma mark - Document_CustomShow

typedef GPB_ENUM(Document_CustomShow_FieldNumber) {
  Document_CustomShow_FieldNumber_Id_p = 1,
  Document_CustomShow_FieldNumber_Name = 2,
  Document_CustomShow_FieldNumber_SlidesArray = 3,
};

@interface Document_CustomShow : GPBMessage

/** Unique ID for Custom Show. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;
/** Test to see if @c id_p has been set. */
@property(nonatomic, readwrite) BOOL hasId_p;

/** Name for Custom Show. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;
/** Test to see if @c name has been set. */
@property(nonatomic, readwrite) BOOL hasName;

/** Unique SlideID order. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *slidesArray;
/** The number of items in @c slidesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger slidesArray_Count;

@end

#pragma mark - Document_SlideShow

typedef GPB_ENUM(Document_SlideShow_FieldNumber) {
  Document_SlideShow_FieldNumber_Type = 1,
  Document_SlideShow_FieldNumber_Range = 2,
  Document_SlideShow_FieldNumber_CustomShowId = 3,
};

@interface Document_SlideShow : GPBMessage

/** Slideshow for this presentation. */
@property(nonatomic, readwrite) Document_SlideShow_SlideShowType type;

@property(nonatomic, readwrite) BOOL hasType;
@property(nonatomic, readwrite, strong, null_resettable) Document_SlideShow_SlideRange *range;
/** Test to see if @c range has been set. */
@property(nonatomic, readwrite) BOOL hasRange;

/** Custom Slideshow Id. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *customShowId;
/** Test to see if @c customShowId has been set. */
@property(nonatomic, readwrite) BOOL hasCustomShowId;

@end

#pragma mark - Document_SlideShow_SlideRange

typedef GPB_ENUM(Document_SlideShow_SlideRange_FieldNumber) {
  Document_SlideShow_SlideRange_FieldNumber_Start = 1,
  Document_SlideShow_SlideRange_FieldNumber_End = 2,
};

/**
 * Indicated the position of the slide.
 **/
@interface Document_SlideShow_SlideRange : GPBMessage

/** Start of the slideshow */
@property(nonatomic, readwrite) int32_t start;

@property(nonatomic, readwrite) BOOL hasStart;
/** End the slideshow. */
@property(nonatomic, readwrite) int32_t end;

@property(nonatomic, readwrite) BOOL hasEnd;
@end

#pragma mark - Document_SlideShowProperties

typedef GPB_ENUM(Document_SlideShowProperties_FieldNumber) {
  Document_SlideShowProperties_FieldNumber_Loop = 1,
  Document_SlideShowProperties_FieldNumber_NoTransition = 2,
  Document_SlideShowProperties_FieldNumber_NoAnimation = 3,
  Document_SlideShowProperties_FieldNumber_NoTimings = 4,
  Document_SlideShowProperties_FieldNumber_Pen = 5,
};

@interface Document_SlideShowProperties : GPBMessage

/** True , to loop the slideshow. */
@property(nonatomic, readwrite) BOOL loop;

@property(nonatomic, readwrite) BOOL hasLoop;
/** True , to discard the transition set up for the slide. */
@property(nonatomic, readwrite) BOOL noTransition;

@property(nonatomic, readwrite) BOOL hasNoTransition;
/** True , to hide the animation of the objects present in the slide. */
@property(nonatomic, readwrite) BOOL noAnimation;

@property(nonatomic, readwrite) BOOL hasNoAnimation;
/** Do not Use Slide Show Timing , even if present. */
@property(nonatomic, readwrite) BOOL noTimings;

@property(nonatomic, readwrite) BOOL hasNoTimings;
/** Pen Color. */
@property(nonatomic, readwrite, strong, null_resettable) Color *pen;
/** Test to see if @c pen has been set. */
@property(nonatomic, readwrite) BOOL hasPen;

@end

#pragma mark - Document_SessionProps

typedef GPB_ENUM(Document_SessionProps_FieldNumber) {
  Document_SessionProps_FieldNumber_Key = 1,
  Document_SessionProps_FieldNumber_Value = 2,
};

/**
 * Key-Value pair used for various purposes.
 **/
@interface Document_SessionProps : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *key;
/** Test to see if @c key has been set. */
@property(nonatomic, readwrite) BOOL hasKey;

@property(nonatomic, readwrite, copy, null_resettable) NSString *value;
/** Test to see if @c value has been set. */
@property(nonatomic, readwrite) BOOL hasValue;

@end

#pragma mark - Document_TableStyleDefinition

typedef GPB_ENUM(Document_TableStyleDefinition_FieldNumber) {
  Document_TableStyleDefinition_FieldNumber_Style = 1,
  Document_TableStyleDefinition_FieldNumber_Used = 2,
};

/**
 * All Table Styles used in this document.
 **/
@interface Document_TableStyleDefinition : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) TableStyle *style;
/** Test to see if @c style has been set. */
@property(nonatomic, readwrite) BOOL hasStyle;

/** Number of times , this style has been used in the document. */
@property(nonatomic, readwrite) int32_t used;

@property(nonatomic, readwrite) BOOL hasUsed;
@end

#pragma mark - Document_SpellCheckProps

typedef GPB_ENUM(Document_SpellCheckProps_FieldNumber) {
  Document_SpellCheckProps_FieldNumber_IgnoredWordsArray = 1,
  Document_SpellCheckProps_FieldNumber_SpellCheckedLang = 2,
};

@interface Document_SpellCheckProps : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *ignoredWordsArray;
/** The number of items in @c ignoredWordsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger ignoredWordsArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSString *spellCheckedLang;
/** Test to see if @c spellCheckedLang has been set. */
@property(nonatomic, readwrite) BOOL hasSpellCheckedLang;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
