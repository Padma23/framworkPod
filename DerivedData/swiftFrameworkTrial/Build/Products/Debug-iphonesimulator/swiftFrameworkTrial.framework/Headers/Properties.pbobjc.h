// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: properties.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Animation;
@class AnimationData;
@class Effects;
@class Fill;
@class ShapeGeometry;
@class Stroke;
@class Transform;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - PropertiesRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface PropertiesRoot : GPBRootObject
@end

#pragma mark - Properties

typedef GPB_ENUM(Properties_FieldNumber) {
  Properties_FieldNumber_Transform = 1,
  Properties_FieldNumber_Fill = 2,
  Properties_FieldNumber_Stroke = 3,
  Properties_FieldNumber_Geom = 4,
  Properties_FieldNumber_Effects = 5,
  Properties_FieldNumber_AnimArray = 6,
  Properties_FieldNumber_AnimDataArray = 7,
};

@interface Properties : GPBMessage

/** 2D Transformation */
@property(nonatomic, readwrite, strong, null_resettable) Transform *transform;
/** Test to see if @c transform has been set. */
@property(nonatomic, readwrite) BOOL hasTransform;

/** Fill */
@property(nonatomic, readwrite, strong, null_resettable) Fill *fill;
/** Test to see if @c fill has been set. */
@property(nonatomic, readwrite) BOOL hasFill;

/** Stroke */
@property(nonatomic, readwrite, strong, null_resettable) Stroke *stroke;
/** Test to see if @c stroke has been set. */
@property(nonatomic, readwrite) BOOL hasStroke;

/** Shape Geometry. */
@property(nonatomic, readwrite, strong, null_resettable) ShapeGeometry *geom;
/** Test to see if @c geom has been set. */
@property(nonatomic, readwrite) BOOL hasGeom;

/** Effects list */
@property(nonatomic, readwrite, strong, null_resettable) Effects *effects;
/** Test to see if @c effects has been set. */
@property(nonatomic, readwrite) BOOL hasEffects;

/** Common Animation data for shape and all the paragraph in shape. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Animation*> *animArray;
/** The number of items in @c animArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger animArray_Count;

/** If the animation for BG alone is changed this data will be updated. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<AnimationData*> *animDataArray;
/** The number of items in @c animDataArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger animDataArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
