// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: share/collaboration.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class DocumentContentOperation;
@class DocumentContentOperation_Component;
@class DocumentContentOperation_Component_AssociatedTexts;
@class DocumentContentOperation_Component_Custom;
@class DocumentContentOperation_Component_Custom_ChangeTheme;
@class DocumentContentOperation_Component_Text;
@class DocumentContentOperation_Component_Value;
@class DocumentDelta;
@class DocumentOperation;
@class DocumentOperation_MutateDocument;
@class PageSetup;
@class PicProperties;
@class Relationship;
@class ThemeDifferences;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum DocumentContentOperation_DocumentContentOperationType

typedef GPB_ENUM(DocumentContentOperation_DocumentContentOperationType) {
  DocumentContentOperation_DocumentContentOperationType_Group = 1,
  DocumentContentOperation_DocumentContentOperationType_Ungroup = 2,
};

GPBEnumDescriptor *DocumentContentOperation_DocumentContentOperationType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL DocumentContentOperation_DocumentContentOperationType_IsValidValue(int32_t value);

#pragma mark - Enum DocumentContentOperation_Component_OperationType

typedef GPB_ENUM(DocumentContentOperation_Component_OperationType) {
  DocumentContentOperation_Component_OperationType_Insert = 1,
  DocumentContentOperation_Component_OperationType_Update = 2,
  DocumentContentOperation_Component_OperationType_Delete = 4,
  DocumentContentOperation_Component_OperationType_Text = 5,
  DocumentContentOperation_Component_OperationType_Custom = 6,
  DocumentContentOperation_Component_OperationType_Reorder = 7,
};

GPBEnumDescriptor *DocumentContentOperation_Component_OperationType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL DocumentContentOperation_Component_OperationType_IsValidValue(int32_t value);

#pragma mark - Enum DocumentContentOperation_Component_Text_UpdateType

typedef GPB_ENUM(DocumentContentOperation_Component_Text_UpdateType) {
  DocumentContentOperation_Component_Text_UpdateType_Portion = 1,
  DocumentContentOperation_Component_Text_UpdateType_Para = 2,
};

GPBEnumDescriptor *DocumentContentOperation_Component_Text_UpdateType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL DocumentContentOperation_Component_Text_UpdateType_IsValidValue(int32_t value);

#pragma mark - Enum DocumentContentOperation_Component_Custom_ActionType

typedef GPB_ENUM(DocumentContentOperation_Component_Custom_ActionType) {
  DocumentContentOperation_Component_Custom_ActionType_ChangeTheme = 1,
  DocumentContentOperation_Component_Custom_ActionType_PageSetup = 2,
};

GPBEnumDescriptor *DocumentContentOperation_Component_Custom_ActionType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL DocumentContentOperation_Component_Custom_ActionType_IsValidValue(int32_t value);

#pragma mark - CollaborationRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface CollaborationRoot : GPBRootObject
@end

#pragma mark - DocumentDeltas

typedef GPB_ENUM(DocumentDeltas_FieldNumber) {
  DocumentDeltas_FieldNumber_DeltaArray = 1,
  DocumentDeltas_FieldNumber_LastSavedVersion = 2,
};

@interface DocumentDeltas : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DocumentDelta*> *deltaArray;
/** The number of items in @c deltaArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger deltaArray_Count;

@property(nonatomic, readwrite) int32_t lastSavedVersion;

@property(nonatomic, readwrite) BOOL hasLastSavedVersion;
@end

#pragma mark - DocumentDelta

typedef GPB_ENUM(DocumentDelta_FieldNumber) {
  DocumentDelta_FieldNumber_Version = 1,
  DocumentDelta_FieldNumber_Author = 2,
  DocumentDelta_FieldNumber_DocOpArray = 3,
  DocumentDelta_FieldNumber_ModTime = 4,
  DocumentDelta_FieldNumber_GrpMember = 5,
  DocumentDelta_FieldNumber_UniqueId = 6,
  DocumentDelta_FieldNumber_AnonUserId = 7,
};

@interface DocumentDelta : GPBMessage

/** Presentation version that the delta is intended to be applied to. */
@property(nonatomic, readwrite) int32_t version;

@property(nonatomic, readwrite) BOOL hasVersion;
/** ZUID/ ZGID. The author of this delta could be a group or user */
@property(nonatomic, readwrite, copy, null_resettable) NSString *author;
/** Test to see if @c author has been set. */
@property(nonatomic, readwrite) BOOL hasAuthor;

/** Operations included in this delta */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DocumentOperation*> *docOpArray;
/** The number of items in @c docOpArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger docOpArray_Count;

/** Indicates the time at which the operation was performed */
@property(nonatomic, readwrite, copy, null_resettable) NSString *modTime;
/** Test to see if @c modTime has been set. */
@property(nonatomic, readwrite) BOOL hasModTime;

/**
 *
 * For example, "show-team" group may be the explicit participant of
 * this presentation, and is set as the author of a delta. However, this group is
 * being asked to act on behalf of "vijayr\@zohocorp.com", who is a member
 * of "show-team". In this example, the delta would be configured as :
 *  delta.author = "<show-team's group id>"
 *  delta.groupMember = <zuid of vijayr>
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *grpMember;
/** Test to see if @c grpMember has been set. */
@property(nonatomic, readwrite) BOOL hasGrpMember;

/** csrf token of the user session */
@property(nonatomic, readwrite, copy, null_resettable) NSString *uniqueId;
/** Test to see if @c uniqueId has been set. */
@property(nonatomic, readwrite) BOOL hasUniqueId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *anonUserId;
/** Test to see if @c anonUserId has been set. */
@property(nonatomic, readwrite) BOOL hasAnonUserId;

@end

#pragma mark - DocumentOperation

typedef GPB_ENUM(DocumentOperation_FieldNumber) {
  DocumentOperation_FieldNumber_AddParticipant = 1,
  DocumentOperation_FieldNumber_RemoveParticipant = 2,
  DocumentOperation_FieldNumber_MutateDocument = 3,
};

@interface DocumentOperation : GPBMessage

/** Adds a new participant to the presentation (the moment a user joins the collaboration, we'll add them to our history) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *addParticipant;
/** Test to see if @c addParticipant has been set. */
@property(nonatomic, readwrite) BOOL hasAddParticipant;

/** Removes an existing participant */
@property(nonatomic, readwrite, copy, null_resettable) NSString *removeParticipant;
/** Test to see if @c removeParticipant has been set. */
@property(nonatomic, readwrite) BOOL hasRemoveParticipant;

@property(nonatomic, readwrite, strong, null_resettable) DocumentOperation_MutateDocument *mutateDocument;
/** Test to see if @c mutateDocument has been set. */
@property(nonatomic, readwrite) BOOL hasMutateDocument;

@end

#pragma mark - DocumentOperation_MutateDocument

typedef GPB_ENUM(DocumentOperation_MutateDocument_FieldNumber) {
  DocumentOperation_MutateDocument_FieldNumber_MDocId = 1,
  DocumentOperation_MutateDocument_FieldNumber_ContentOp = 3,
};

/**
 * Mutates a document.
 **/
@interface DocumentOperation_MutateDocument : GPBMessage

/** this should not be confused with the presenation id. this mutateDocumentId can be a slide Id / master Id / presentation Id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *mDocId;
/** Test to see if @c mDocId has been set. */
@property(nonatomic, readwrite) BOOL hasMDocId;

@property(nonatomic, readwrite, strong, null_resettable) DocumentContentOperation *contentOp;
/** Test to see if @c contentOp has been set. */
@property(nonatomic, readwrite) BOOL hasContentOp;

@end

#pragma mark - DocumentContentOperation

typedef GPB_ENUM(DocumentContentOperation_FieldNumber) {
  DocumentContentOperation_FieldNumber_ComponentArray = 1,
  DocumentContentOperation_FieldNumber_Type = 2,
};

@interface DocumentContentOperation : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DocumentContentOperation_Component*> *componentArray;
/** The number of items in @c componentArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger componentArray_Count;

@property(nonatomic, readwrite) DocumentContentOperation_DocumentContentOperationType type;

@property(nonatomic, readwrite) BOOL hasType;
@end

#pragma mark - DocumentContentOperation_Component

typedef GPB_ENUM(DocumentContentOperation_Component_FieldNumber) {
  DocumentContentOperation_Component_FieldNumber_OpType = 2,
  DocumentContentOperation_Component_FieldNumber_Fields = 3,
  DocumentContentOperation_Component_FieldNumber_Value = 5,
  DocumentContentOperation_Component_FieldNumber_TextArray = 6,
  DocumentContentOperation_Component_FieldNumber_AssociatedArray = 7,
  DocumentContentOperation_Component_FieldNumber_Custom = 8,
  DocumentContentOperation_Component_FieldNumber_Ni = 9,
  DocumentContentOperation_Component_FieldNumber_NoRender = 10,
};

@interface DocumentContentOperation_Component : GPBMessage

@property(nonatomic, readwrite) DocumentContentOperation_Component_OperationType opType;

@property(nonatomic, readwrite) BOOL hasOpType;
/** The first position in the fields will hold the root element. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *fields;
/** Test to see if @c fields has been set. */
@property(nonatomic, readwrite) BOOL hasFields;

@property(nonatomic, readwrite, strong, null_resettable) DocumentContentOperation_Component_Value *value;
/** Test to see if @c value has been set. */
@property(nonatomic, readwrite) BOOL hasValue;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DocumentContentOperation_Component_Text*> *textArray;
/** The number of items in @c textArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger textArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DocumentContentOperation_Component_AssociatedTexts*> *associatedArray;
/** The number of items in @c associatedArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger associatedArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) DocumentContentOperation_Component_Custom *custom;
/** Test to see if @c custom has been set. */
@property(nonatomic, readwrite) BOOL hasCustom;

/** in case of REORDER operation, this will hold the new index position */
@property(nonatomic, readwrite) int32_t ni;

@property(nonatomic, readwrite) BOOL hasNi;
/** Use this , if we do not want this delta to be rendered. Basically this could be dependent on some other delta. */
@property(nonatomic, readwrite) BOOL noRender;

@property(nonatomic, readwrite) BOOL hasNoRender;
@end

#pragma mark - DocumentContentOperation_Component_Value

typedef GPB_ENUM(DocumentContentOperation_Component_Value_FieldNumber) {
  DocumentContentOperation_Component_Value_FieldNumber_Value = 1,
  DocumentContentOperation_Component_Value_FieldNumber_OldValue = 2,
  DocumentContentOperation_Component_Value_FieldNumber_DeleteData = 3,
  DocumentContentOperation_Component_Value_FieldNumber_Replace = 4,
  DocumentContentOperation_Component_Value_FieldNumber_IdsArray = 5,
};

@interface DocumentContentOperation_Component_Value : GPBMessage

/**
 * In case of Insert, new_value will hold the value
 * In case of Update, if the field is absent, the attribute should be removed/should be set to null.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *value;
/** Test to see if @c value has been set. */
@property(nonatomic, readwrite) BOOL hasValue;

/** Absent field means that the attribute is absent and/or null. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *oldValue;
/** Test to see if @c oldValue has been set. */
@property(nonatomic, readwrite) BOOL hasOldValue;

/** maintains the fields that needs to be deleted from the message mentioned in "fields" variable */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deleteData;
/** Test to see if @c deleteData has been set. */
@property(nonatomic, readwrite) BOOL hasDeleteData;

/**
 * if true, this will replace the current data present in the message with the
 * json string present in "value" field.
 **/
@property(nonatomic, readwrite) BOOL replace;

@property(nonatomic, readwrite) BOOL hasReplace;
/** unique id, can be used for insert operation */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *idsArray;
/** The number of items in @c idsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger idsArray_Count;

@end

#pragma mark - DocumentContentOperation_Component_Text

typedef GPB_ENUM(DocumentContentOperation_Component_Text_FieldNumber) {
  DocumentContentOperation_Component_Text_FieldNumber_At = 1,
  DocumentContentOperation_Component_Text_FieldNumber_Si = 2,
  DocumentContentOperation_Component_Text_FieldNumber_Ei = 3,
  DocumentContentOperation_Component_Text_FieldNumber_Ut = 4,
  DocumentContentOperation_Component_Text_FieldNumber_Value = 5,
};

@interface DocumentContentOperation_Component_Text : GPBMessage

@property(nonatomic, readwrite) DocumentContentOperation_Component_OperationType at;

@property(nonatomic, readwrite) BOOL hasAt;
@property(nonatomic, readwrite) int32_t si;

@property(nonatomic, readwrite) BOOL hasSi;
/** optional string t = 4; */
@property(nonatomic, readwrite) int32_t ei;

@property(nonatomic, readwrite) BOOL hasEi;
@property(nonatomic, readwrite) DocumentContentOperation_Component_Text_UpdateType ut;

@property(nonatomic, readwrite) BOOL hasUt;
@property(nonatomic, readwrite, strong, null_resettable) DocumentContentOperation_Component_Value *value;
/** Test to see if @c value has been set. */
@property(nonatomic, readwrite) BOOL hasValue;

@end

#pragma mark - DocumentContentOperation_Component_AssociatedTexts

typedef GPB_ENUM(DocumentContentOperation_Component_AssociatedTexts_FieldNumber) {
  DocumentContentOperation_Component_AssociatedTexts_FieldNumber_TextsArray = 1,
};

/**
 * this is used for undo/redo purposes. this should not be sent to the server. an unnecessary data for the server
 **/
@interface DocumentContentOperation_Component_AssociatedTexts : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DocumentContentOperation_Component_Text*> *textsArray;
/** The number of items in @c textsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger textsArray_Count;

@end

#pragma mark - DocumentContentOperation_Component_Custom

typedef GPB_ENUM(DocumentContentOperation_Component_Custom_FieldNumber) {
  DocumentContentOperation_Component_Custom_FieldNumber_ActionType = 1,
  DocumentContentOperation_Component_Custom_FieldNumber_ChangeTheme = 2,
  DocumentContentOperation_Component_Custom_FieldNumber_PageSetup = 3,
};

@interface DocumentContentOperation_Component_Custom : GPBMessage

@property(nonatomic, readwrite) DocumentContentOperation_Component_Custom_ActionType actionType;

@property(nonatomic, readwrite) BOOL hasActionType;
@property(nonatomic, readwrite, strong, null_resettable) DocumentContentOperation_Component_Custom_ChangeTheme *changeTheme;
/** Test to see if @c changeTheme has been set. */
@property(nonatomic, readwrite) BOOL hasChangeTheme;

@property(nonatomic, readwrite, strong, null_resettable) PageSetup *pageSetup;
/** Test to see if @c pageSetup has been set. */
@property(nonatomic, readwrite) BOOL hasPageSetup;

@end

#pragma mark - DocumentContentOperation_Component_Custom_ChangeTheme

typedef GPB_ENUM(DocumentContentOperation_Component_Custom_ChangeTheme_FieldNumber) {
  DocumentContentOperation_Component_Custom_ChangeTheme_FieldNumber_Id_p = 1,
  DocumentContentOperation_Component_Custom_ChangeTheme_FieldNumber_RelsArray = 2,
  DocumentContentOperation_Component_Custom_ChangeTheme_FieldNumber_ThemeDifferences = 3,
  DocumentContentOperation_Component_Custom_ChangeTheme_FieldNumber_PicPropsArray = 4,
};

@interface DocumentContentOperation_Component_Custom_ChangeTheme : GPBMessage

/** The documemt id of the theme. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;
/** Test to see if @c id_p has been set. */
@property(nonatomic, readwrite) BOOL hasId_p;

/** The picture rels present in Masters and Layouts. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Relationship*> *relsArray;
/** The number of items in @c relsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger relsArray_Count;

/**
 * this holds the differences that exists between the theme being applied and the document's theme data
 * if this field exists, while applying the theme, the shapes and schemes present in this data should overwrite the theme's data
 **/
@property(nonatomic, readwrite, strong, null_resettable) ThemeDifferences *themeDifferences;
/** Test to see if @c themeDifferences has been set. */
@property(nonatomic, readwrite) BOOL hasThemeDifferences;

/** The picture properties present in master and layouts */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PicProperties*> *picPropsArray;
/** The number of items in @c picPropsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger picPropsArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
