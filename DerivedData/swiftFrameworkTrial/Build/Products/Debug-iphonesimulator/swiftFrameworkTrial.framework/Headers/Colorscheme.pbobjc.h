// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: colorscheme.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class ColorScheme_ColorStyle;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - ColorschemeRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface ColorschemeRoot : GPBRootObject
@end

#pragma mark - ColorScheme

typedef GPB_ENUM(ColorScheme_FieldNumber) {
  ColorScheme_FieldNumber_Id_p = 1,
  ColorScheme_FieldNumber_Name = 2,
  ColorScheme_FieldNumber_ColorStyle = 3,
  ColorScheme_FieldNumber_Modified = 4,
  ColorScheme_FieldNumber_ThemeId = 99,
};

@interface ColorScheme : GPBMessage

/** unique Id for the scheme. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;
/** Test to see if @c id_p has been set. */
@property(nonatomic, readwrite) BOOL hasId_p;

/** Color scheme can be from a different theme. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;
/** Test to see if @c name has been set. */
@property(nonatomic, readwrite) BOOL hasName;

@property(nonatomic, readwrite, strong, null_resettable) ColorScheme_ColorStyle *colorStyle;
/** Test to see if @c colorStyle has been set. */
@property(nonatomic, readwrite) BOOL hasColorStyle;

/** Indicates whether the fontscheme has been modified or not. Will be updated for imported presentations too. */
@property(nonatomic, readwrite) BOOL modified;

@property(nonatomic, readwrite) BOOL hasModified;
/** Theme document ID. This is only temporary data , any code should check for schemes (and any other needed stuffs) using this document id and if not present should continue its check in the full list of docs. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *themeId;
/** Test to see if @c themeId has been set. */
@property(nonatomic, readwrite) BOOL hasThemeId;

@end

#pragma mark - ColorScheme_ColorStyle

typedef GPB_ENUM(ColorScheme_ColorStyle_FieldNumber) {
  ColorScheme_ColorStyle_FieldNumber_Dark1Array = 1,
  ColorScheme_ColorStyle_FieldNumber_Light1Array = 2,
  ColorScheme_ColorStyle_FieldNumber_Dark2Array = 3,
  ColorScheme_ColorStyle_FieldNumber_Light2Array = 4,
  ColorScheme_ColorStyle_FieldNumber_Accent1Array = 5,
  ColorScheme_ColorStyle_FieldNumber_Accent2Array = 6,
  ColorScheme_ColorStyle_FieldNumber_Accent3Array = 7,
  ColorScheme_ColorStyle_FieldNumber_Accent4Array = 8,
  ColorScheme_ColorStyle_FieldNumber_Accent5Array = 9,
  ColorScheme_ColorStyle_FieldNumber_Accent6Array = 10,
  ColorScheme_ColorStyle_FieldNumber_HlinkArray = 11,
  ColorScheme_ColorStyle_FieldNumber_FollowhlinkArray = 12,
};

@interface ColorScheme_ColorStyle : GPBMessage

/** Dark Color for background , usually black */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *dark1Array;
/** The number of items in @c dark1Array without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger dark1Array_Count;

/** Light Color for text , usually white */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *light1Array;
/** The number of items in @c light1Array without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger light1Array_Count;

/** Dark color for background. */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *dark2Array;
/** The number of items in @c dark2Array without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger dark2Array_Count;

/** Light color for text. */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *light2Array;
/** The number of items in @c light2Array without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger light2Array_Count;

/** Accent Color 1 , will be used for objects drawn over the slide. */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *accent1Array;
/** The number of items in @c accent1Array without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger accent1Array_Count;

/** Accent Color 2 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *accent2Array;
/** The number of items in @c accent2Array without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger accent2Array_Count;

/** Accent Color 3 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *accent3Array;
/** The number of items in @c accent3Array without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger accent3Array_Count;

/** Accent Color 4 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *accent4Array;
/** The number of items in @c accent4Array without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger accent4Array_Count;

/** Accent Color 5 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *accent5Array;
/** The number of items in @c accent5Array without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger accent5Array_Count;

/** Accent Color 6 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *accent6Array;
/** The number of items in @c accent6Array without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger accent6Array_Count;

/** for hyper link */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *hlinkArray;
/** The number of items in @c hlinkArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger hlinkArray_Count;

/** for followed hyper link */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *followhlinkArray;
/** The number of items in @c followhlinkArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger followhlinkArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
