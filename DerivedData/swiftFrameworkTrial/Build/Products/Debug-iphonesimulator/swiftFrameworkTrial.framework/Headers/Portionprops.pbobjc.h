// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: portionprops.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Fill;
@class Font;
@class HyperLink;
@class PortionProps_ReviewCheck;
@class Stroke;
GPB_ENUM_FWD_DECLARE(LineType);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum PortionProps_FontVariant

typedef GPB_ENUM(PortionProps_FontVariant) {
  /** Lowercase */
  PortionProps_FontVariant_Smallcaps = 0,

  /** Uppercase */
  PortionProps_FontVariant_Allcaps = 1,

  /** none */
  PortionProps_FontVariant_None = 2,

  /** Capitalize -- First letter in every word is in Capital. */
  PortionProps_FontVariant_Capitalize = 3,
};

GPBEnumDescriptor *PortionProps_FontVariant_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PortionProps_FontVariant_IsValidValue(int32_t value);

#pragma mark - Enum PortionProps_FontWeight

typedef GPB_ENUM(PortionProps_FontWeight) {
  /** font-weight : 100 */
  PortionProps_FontWeight_Thin = 0,

  /** font-weight : 200 */
  PortionProps_FontWeight_ExtraLight = 1,

  /** font-weight : 300 */
  PortionProps_FontWeight_Light = 2,

  /** font-weight : 400/normal */
  PortionProps_FontWeight_Normal = 4,

  /** font-weight : 500 */
  PortionProps_FontWeight_Medium = 5,

  /** font-weight : 600 */
  PortionProps_FontWeight_DemiBold = 6,

  /** font-weight : 700/bold , This will replace the already existing "bold" value. */
  PortionProps_FontWeight_Bold = 7,

  /** font-weight : 800 */
  PortionProps_FontWeight_Heavy = 8,

  /** font-weight : 900 */
  PortionProps_FontWeight_Black = 9,
};

GPBEnumDescriptor *PortionProps_FontWeight_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PortionProps_FontWeight_IsValidValue(int32_t value);

#pragma mark - Enum PortionProps_ReviewCheck_ReviewState

typedef GPB_ENUM(PortionProps_ReviewCheck_ReviewState) {
  PortionProps_ReviewCheck_ReviewState_Error = 0,
  PortionProps_ReviewCheck_ReviewState_Processed = 1,
  PortionProps_ReviewCheck_ReviewState_Ignored = 2,
};

GPBEnumDescriptor *PortionProps_ReviewCheck_ReviewState_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PortionProps_ReviewCheck_ReviewState_IsValidValue(int32_t value);

#pragma mark - PortionpropsRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface PortionpropsRoot : GPBRootObject
@end

#pragma mark - PortionProps

typedef GPB_ENUM(PortionProps_FieldNumber) {
  PortionProps_FieldNumber_Font = 1,
  PortionProps_FieldNumber_Fill = 2,
  PortionProps_FieldNumber_Stroke = 3,
  PortionProps_FieldNumber_Size = 4,
  PortionProps_FieldNumber_Bold = 5,
  PortionProps_FieldNumber_Italic = 6,
  PortionProps_FieldNumber_Underline = 7,
  PortionProps_FieldNumber_Strike = 8,
  PortionProps_FieldNumber_Baseline = 9,
  PortionProps_FieldNumber_Cap = 10,
  PortionProps_FieldNumber_Space = 11,
  PortionProps_FieldNumber_Click = 12,
  PortionProps_FieldNumber_Hover = 13,
  PortionProps_FieldNumber_Fontweight = 14,
  PortionProps_FieldNumber_Chk = 15,
};

@interface PortionProps : GPBMessage

/** font name */
@property(nonatomic, readwrite, strong, null_resettable) Font *font;
/** Test to see if @c font has been set. */
@property(nonatomic, readwrite) BOOL hasFont;

/** font fill */
@property(nonatomic, readwrite, strong, null_resettable) Fill *fill;
/** Test to see if @c fill has been set. */
@property(nonatomic, readwrite) BOOL hasFill;

/** font stroke */
@property(nonatomic, readwrite, strong, null_resettable) Stroke *stroke;
/** Test to see if @c stroke has been set. */
@property(nonatomic, readwrite) BOOL hasStroke;

/** font size , in pt. Font Size alone is stored in Pt instead of pixel , as there are rendering differences in the browser between pixel and point. The font size will change accoring to the slide size and will be handled by Rendering engine. */
@property(nonatomic, readwrite) float size;

@property(nonatomic, readwrite) BOOL hasSize;
/** Bold -- Deprecated. */
@property(nonatomic, readwrite) BOOL bold;

@property(nonatomic, readwrite) BOOL hasBold;
/** Italic */
@property(nonatomic, readwrite) BOOL italic;

@property(nonatomic, readwrite) BOOL hasItalic;
/** Underline */
@property(nonatomic, readwrite) enum LineType underline;

@property(nonatomic, readwrite) BOOL hasUnderline;
/** Strike through */
@property(nonatomic, readwrite) enum LineType strike;

@property(nonatomic, readwrite) BOOL hasStrike;
/** As of now , any positive value indicates superscript and negative value indicates subscript. 0.3 represents 30% superscript and -0.25 represents 25% subscript. % indicates depends on font size. */
@property(nonatomic, readwrite) float baseline;

@property(nonatomic, readwrite) BOOL hasBaseline;
@property(nonatomic, readwrite) PortionProps_FontVariant cap;

@property(nonatomic, readwrite) BOOL hasCap;
/** Positive Value indicate expansion of Character space , negative values indicates contraction. indicated in Px. */
@property(nonatomic, readwrite) float space;

@property(nonatomic, readwrite) BOOL hasSpace;
/** Hyperlink action on click */
@property(nonatomic, readwrite, strong, null_resettable) HyperLink *click;
/** Test to see if @c click has been set. */
@property(nonatomic, readwrite) BOOL hasClick;

/** Hyperlink action on mouse over. */
@property(nonatomic, readwrite, strong, null_resettable) HyperLink *hover;
/** Test to see if @c hover has been set. */
@property(nonatomic, readwrite) BOOL hasHover;

/** Replace "bold" with this enum. */
@property(nonatomic, readwrite) PortionProps_FontWeight fontweight;

@property(nonatomic, readwrite) BOOL hasFontweight;
@property(nonatomic, readwrite, strong, null_resettable) PortionProps_ReviewCheck *chk;
/** Test to see if @c chk has been set. */
@property(nonatomic, readwrite) BOOL hasChk;

@end

#pragma mark - PortionProps_ReviewCheck

typedef GPB_ENUM(PortionProps_ReviewCheck_FieldNumber) {
  PortionProps_ReviewCheck_FieldNumber_State = 1,
  PortionProps_ReviewCheck_FieldNumber_Lang = 2,
};

/**
 * Indicates whether we have checked the contents for any spelling/grammar and if it has any errors.
 **/
@interface PortionProps_ReviewCheck : GPBMessage

@property(nonatomic, readwrite) PortionProps_ReviewCheck_ReviewState state;

@property(nonatomic, readwrite) BOOL hasState;
@property(nonatomic, readwrite, copy, null_resettable) NSString *lang;
/** Test to see if @c lang has been set. */
@property(nonatomic, readwrite) BOOL hasLang;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
