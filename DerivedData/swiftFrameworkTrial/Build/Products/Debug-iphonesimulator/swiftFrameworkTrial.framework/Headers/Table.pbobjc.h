// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: table.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Effects;
@class Fill;
@class Margin;
@class TableCellStyle;
@class Table_TableGrid;
@class Table_TableGrid_GridColumn;
@class Table_TableProperties;
@class Table_TableRow;
@class Table_TableRow_TableCell;
@class Table_TableRow_TableCell_MergeCell;
@class Table_TableRow_TableCell_TableCellProperties;
@class TextBody;
GPB_ENUM_FWD_DECLARE(VerticalAlignType);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum Table_TableRow_TableCell_TableCellProperties_TextDirection

typedef GPB_ENUM(Table_TableRow_TableCell_TableCellProperties_TextDirection) {
  Table_TableRow_TableCell_TableCellProperties_TextDirection_Horizontal = 0,
  Table_TableRow_TableCell_TableCellProperties_TextDirection_Vertical = 1,
  Table_TableRow_TableCell_TableCellProperties_TextDirection_Vertical270 = 2,
  Table_TableRow_TableCell_TableCellProperties_TextDirection_Wordartvertical = 3,
};

GPBEnumDescriptor *Table_TableRow_TableCell_TableCellProperties_TextDirection_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Table_TableRow_TableCell_TableCellProperties_TextDirection_IsValidValue(int32_t value);

#pragma mark - Enum Table_TableRow_TableCell_TableCellProperties_TextOverflow

typedef GPB_ENUM(Table_TableRow_TableCell_TableCellProperties_TextOverflow) {
  /** Clip within the cell. */
  Table_TableRow_TableCell_TableCellProperties_TextOverflow_Clip = 0,

  /** Allow it to overflow. */
  Table_TableRow_TableCell_TableCellProperties_TextOverflow_Overflow = 1,
};

GPBEnumDescriptor *Table_TableRow_TableCell_TableCellProperties_TextOverflow_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Table_TableRow_TableCell_TableCellProperties_TextOverflow_IsValidValue(int32_t value);

#pragma mark - TableRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface TableRoot : GPBRootObject
@end

#pragma mark - Table

typedef GPB_ENUM(Table_FieldNumber) {
  Table_FieldNumber_Grid = 1,
  Table_FieldNumber_RowArray = 2,
  Table_FieldNumber_Props = 3,
};

@interface Table : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Table_TableGrid *grid;
/** Test to see if @c grid has been set. */
@property(nonatomic, readwrite) BOOL hasGrid;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Table_TableRow*> *rowArray;
/** The number of items in @c rowArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger rowArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) Table_TableProperties *props;
/** Test to see if @c props has been set. */
@property(nonatomic, readwrite) BOOL hasProps;

@end

#pragma mark - Table_TableGrid

typedef GPB_ENUM(Table_TableGrid_FieldNumber) {
  Table_TableGrid_FieldNumber_ColArray = 1,
};

@interface Table_TableGrid : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Table_TableGrid_GridColumn*> *colArray;
/** The number of items in @c colArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger colArray_Count;

@end

#pragma mark - Table_TableGrid_GridColumn

typedef GPB_ENUM(Table_TableGrid_GridColumn_FieldNumber) {
  Table_TableGrid_GridColumn_FieldNumber_Width = 1,
};

@interface Table_TableGrid_GridColumn : GPBMessage

/** width in pixels */
@property(nonatomic, readwrite) float width;

@property(nonatomic, readwrite) BOOL hasWidth;
@end

#pragma mark - Table_TableRow

typedef GPB_ENUM(Table_TableRow_FieldNumber) {
  Table_TableRow_FieldNumber_Height = 1,
  Table_TableRow_FieldNumber_CellArray = 2,
};

@interface Table_TableRow : GPBMessage

/** height of the row in pixels. */
@property(nonatomic, readwrite) float height;

@property(nonatomic, readwrite) BOOL hasHeight;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Table_TableRow_TableCell*> *cellArray;
/** The number of items in @c cellArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger cellArray_Count;

@end

#pragma mark - Table_TableRow_TableCell

typedef GPB_ENUM(Table_TableRow_TableCell_FieldNumber) {
  Table_TableRow_TableCell_FieldNumber_Id_p = 1,
  Table_TableRow_TableCell_FieldNumber_TextBody = 2,
  Table_TableRow_TableCell_FieldNumber_Col = 3,
  Table_TableRow_TableCell_FieldNumber_Row = 4,
  Table_TableRow_TableCell_FieldNumber_Props = 5,
};

@interface Table_TableRow_TableCell : GPBMessage

/** Unique identifier for this cell. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;
/** Test to see if @c id_p has been set. */
@property(nonatomic, readwrite) BOOL hasId_p;

@property(nonatomic, readwrite, strong, null_resettable) TextBody *textBody;
/** Test to see if @c textBody has been set. */
@property(nonatomic, readwrite) BOOL hasTextBody;

@property(nonatomic, readwrite, strong, null_resettable) Table_TableRow_TableCell_MergeCell *col;
/** Test to see if @c col has been set. */
@property(nonatomic, readwrite) BOOL hasCol;

@property(nonatomic, readwrite, strong, null_resettable) Table_TableRow_TableCell_MergeCell *row;
/** Test to see if @c row has been set. */
@property(nonatomic, readwrite) BOOL hasRow;

@property(nonatomic, readwrite, strong, null_resettable) Table_TableRow_TableCell_TableCellProperties *props;
/** Test to see if @c props has been set. */
@property(nonatomic, readwrite) BOOL hasProps;

@end

#pragma mark - Table_TableRow_TableCell_MergeCell

typedef GPB_ENUM(Table_TableRow_TableCell_MergeCell_FieldNumber) {
  Table_TableRow_TableCell_MergeCell_FieldNumber_Span = 1,
  Table_TableRow_TableCell_MergeCell_FieldNumber_Merge = 2,
};

@interface Table_TableRow_TableCell_MergeCell : GPBMessage

/** Number of column/row the merged cell spans. */
@property(nonatomic, readwrite) int32_t span;

@property(nonatomic, readwrite) BOOL hasSpan;
/** Merge the previous column/row. */
@property(nonatomic, readwrite) int32_t merge;

@property(nonatomic, readwrite) BOOL hasMerge;
@end

#pragma mark - Table_TableRow_TableCell_TableCellProperties

typedef GPB_ENUM(Table_TableRow_TableCell_TableCellProperties_FieldNumber) {
  Table_TableRow_TableCell_TableCellProperties_FieldNumber_Style = 1,
  Table_TableRow_TableCell_TableCellProperties_FieldNumber_HeadersArray = 2,
  Table_TableRow_TableCell_TableCellProperties_FieldNumber_Margin = 3,
  Table_TableRow_TableCell_TableCellProperties_FieldNumber_Valign = 4,
  Table_TableRow_TableCell_TableCellProperties_FieldNumber_TextDir = 5,
  Table_TableRow_TableCell_TableCellProperties_FieldNumber_TextOverflow = 6,
};

@interface Table_TableRow_TableCell_TableCellProperties : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) TableCellStyle *style;
/** Test to see if @c style has been set. */
@property(nonatomic, readwrite) BOOL hasStyle;

/** IDs of the header cells i.e. A table cell can contain two header cells , the ids of those header cells will be stored in this variable. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *headersArray;
/** The number of items in @c headersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger headersArray_Count;

/** Some of the textbox props. */
@property(nonatomic, readwrite, strong, null_resettable) Margin *margin;
/** Test to see if @c margin has been set. */
@property(nonatomic, readwrite) BOOL hasMargin;

@property(nonatomic, readwrite) enum VerticalAlignType valign;

@property(nonatomic, readwrite) BOOL hasValign;
@property(nonatomic, readwrite) Table_TableRow_TableCell_TableCellProperties_TextDirection textDir;

@property(nonatomic, readwrite) BOOL hasTextDir;
@property(nonatomic, readwrite) Table_TableRow_TableCell_TableCellProperties_TextOverflow textOverflow;

@property(nonatomic, readwrite) BOOL hasTextOverflow;
@end

#pragma mark - Table_TableProperties

typedef GPB_ENUM(Table_TableProperties_FieldNumber) {
  Table_TableProperties_FieldNumber_Fill = 1,
  Table_TableProperties_FieldNumber_Effects = 2,
  Table_TableProperties_FieldNumber_StyleId = 3,
  Table_TableProperties_FieldNumber_FirstRow = 4,
  Table_TableProperties_FieldNumber_LastRow = 5,
  Table_TableProperties_FieldNumber_BandCol = 6,
  Table_TableProperties_FieldNumber_BandRow = 7,
  Table_TableProperties_FieldNumber_FirstCol = 8,
  Table_TableProperties_FieldNumber_LastCol = 9,
};

@interface Table_TableProperties : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Fill *fill;
/** Test to see if @c fill has been set. */
@property(nonatomic, readwrite) BOOL hasFill;

@property(nonatomic, readwrite, strong, null_resettable) Effects *effects;
/** Test to see if @c effects has been set. */
@property(nonatomic, readwrite) BOOL hasEffects;

/** ID of the defined table-styles , present in document.proto */
@property(nonatomic, readwrite, copy, null_resettable) NSString *styleId;
/** Test to see if @c styleId has been set. */
@property(nonatomic, readwrite) BOOL hasStyleId;

/** Apply table style depending on the the on/off state of the following variables. */
@property(nonatomic, readwrite) BOOL firstRow;

@property(nonatomic, readwrite) BOOL hasFirstRow;
/** last row. */
@property(nonatomic, readwrite) BOOL lastRow;

@property(nonatomic, readwrite) BOOL hasLastRow;
/** Banded Columns */
@property(nonatomic, readwrite) BOOL bandCol;

@property(nonatomic, readwrite) BOOL hasBandCol;
/** Banded Rows */
@property(nonatomic, readwrite) BOOL bandRow;

@property(nonatomic, readwrite) BOOL hasBandRow;
/** First Column */
@property(nonatomic, readwrite) BOOL firstCol;

@property(nonatomic, readwrite) BOOL hasFirstCol;
/** Last Column */
@property(nonatomic, readwrite) BOOL lastCol;

@property(nonatomic, readwrite) BOOL hasLastCol;
@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
