// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: picturevalue.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum PictureValue_PictureType

typedef GPB_ENUM(PictureValue_PictureType) {
  /** either Uploaded or imported. */
  PictureValue_PictureType_Userdefined = 0,

  /** Theme Background. */
  PictureValue_PictureType_Themebg = 1,

  /** Clip Art image */
  PictureValue_PictureType_Clipart = 2,

  /** Texture Image */
  PictureValue_PictureType_Texture = 3,

  /** Externally linked image */
  PictureValue_PictureType_External = 4,

  /** PlaceHolder image - will be used by layouts. */
  PictureValue_PictureType_Placeholder = 5,
};

GPBEnumDescriptor *PictureValue_PictureType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PictureValue_PictureType_IsValidValue(int32_t value);

#pragma mark - PicturevalueRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface PicturevalueRoot : GPBRootObject
@end

#pragma mark - PictureValue

typedef GPB_ENUM(PictureValue_FieldNumber) {
  PictureValue_FieldNumber_Id_p = 1,
  PictureValue_FieldNumber_Type = 2,
  PictureValue_FieldNumber_URL = 3,
  PictureValue_FieldNumber_PictureName = 4,
  PictureValue_FieldNumber_RelId = 5,
};

@interface PictureValue : GPBMessage

/** Unique Picture ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;
/** Test to see if @c id_p has been set. */
@property(nonatomic, readwrite) BOOL hasId_p;

/** Type of the picture. The URL for the picture will be generated according to the type. */
@property(nonatomic, readwrite) PictureValue_PictureType type;

@property(nonatomic, readwrite) BOOL hasType;
/** Picture URL for external images. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;
/** Test to see if @c URL has been set. */
@property(nonatomic, readwrite) BOOL hasURL;

/** Name of the picture */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pictureName;
/** Test to see if @c pictureName has been set. */
@property(nonatomic, readwrite) BOOL hasPictureName;

/** Used for ClipArt/Texture/ThemeBG images. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *relId;
/** Test to see if @c relId has been set. */
@property(nonatomic, readwrite) BOOL hasRelId;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
