// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chartshape.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class ChartShape_AxisShape;
@class ChartShape_CategoryShape;
@class ChartShape_CategoryShape_SeriesShape;
@class ChartShape_PlotAreaShape;
@class ManualLayout;
@class Shape;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - ChartshapeRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface ChartshapeRoot : GPBRootObject
@end

#pragma mark - ChartShape

typedef GPB_ENUM(ChartShape_FieldNumber) {
  ChartShape_FieldNumber_Title = 1,
  ChartShape_FieldNumber_LegendsArray = 2,
  ChartShape_FieldNumber_PlotArea = 3,
  ChartShape_FieldNumber_ChartAreaBox = 4,
};

@interface ChartShape : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Shape *title;
/** Test to see if @c title has been set. */
@property(nonatomic, readwrite) BOOL hasTitle;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Shape*> *legendsArray;
/** The number of items in @c legendsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger legendsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) ChartShape_PlotAreaShape *plotArea;
/** Test to see if @c plotArea has been set. */
@property(nonatomic, readwrite) BOOL hasPlotArea;

@property(nonatomic, readwrite, strong, null_resettable) ManualLayout *chartAreaBox;
/** Test to see if @c chartAreaBox has been set. */
@property(nonatomic, readwrite) BOOL hasChartAreaBox;

@end

#pragma mark - ChartShape_AxisShape

typedef GPB_ENUM(ChartShape_AxisShape_FieldNumber) {
  ChartShape_AxisShape_FieldNumber_Axis = 1,
  ChartShape_AxisShape_FieldNumber_Title = 2,
  ChartShape_AxisShape_FieldNumber_MajorGridsArray = 3,
  ChartShape_AxisShape_FieldNumber_MinorGridsArray = 4,
  ChartShape_AxisShape_FieldNumber_LabelsArray = 5,
};

@interface ChartShape_AxisShape : GPBMessage

/** actual axis */
@property(nonatomic, readwrite, strong, null_resettable) Shape *axis;
/** Test to see if @c axis has been set. */
@property(nonatomic, readwrite) BOOL hasAxis;

@property(nonatomic, readwrite, strong, null_resettable) Shape *title;
/** Test to see if @c title has been set. */
@property(nonatomic, readwrite) BOOL hasTitle;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Shape*> *majorGridsArray;
/** The number of items in @c majorGridsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger majorGridsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Shape*> *minorGridsArray;
/** The number of items in @c minorGridsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger minorGridsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Shape*> *labelsArray;
/** The number of items in @c labelsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger labelsArray_Count;

@end

#pragma mark - ChartShape_CategoryShape

typedef GPB_ENUM(ChartShape_CategoryShape_FieldNumber) {
  ChartShape_CategoryShape_FieldNumber_SeriesShapesArray = 1,
};

@interface ChartShape_CategoryShape : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ChartShape_CategoryShape_SeriesShape*> *seriesShapesArray;
/** The number of items in @c seriesShapesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger seriesShapesArray_Count;

@end

#pragma mark - ChartShape_CategoryShape_SeriesShape

typedef GPB_ENUM(ChartShape_CategoryShape_SeriesShape_FieldNumber) {
  ChartShape_CategoryShape_SeriesShape_FieldNumber_Shape = 1,
  ChartShape_CategoryShape_SeriesShape_FieldNumber_Label = 2,
};

@interface ChartShape_CategoryShape_SeriesShape : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Shape *shape;
/** Test to see if @c shape has been set. */
@property(nonatomic, readwrite) BOOL hasShape;

@property(nonatomic, readwrite, strong, null_resettable) Shape *label;
/** Test to see if @c label has been set. */
@property(nonatomic, readwrite) BOOL hasLabel;

@end

#pragma mark - ChartShape_PlotAreaShape

typedef GPB_ENUM(ChartShape_PlotAreaShape_FieldNumber) {
  ChartShape_PlotAreaShape_FieldNumber_Horizontal = 1,
  ChartShape_PlotAreaShape_FieldNumber_Vertical = 2,
  ChartShape_PlotAreaShape_FieldNumber_CategoryShapesArray = 3,
  ChartShape_PlotAreaShape_FieldNumber_SeriesLinesArray = 4,
  ChartShape_PlotAreaShape_FieldNumber_DropLinesArray = 5,
  ChartShape_PlotAreaShape_FieldNumber_UpDownBarsArray = 6,
  ChartShape_PlotAreaShape_FieldNumber_MarkersArray = 7,
};

@interface ChartShape_PlotAreaShape : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) ChartShape_AxisShape *horizontal;
/** Test to see if @c horizontal has been set. */
@property(nonatomic, readwrite) BOOL hasHorizontal;

@property(nonatomic, readwrite, strong, null_resettable) ChartShape_AxisShape *vertical;
/** Test to see if @c vertical has been set. */
@property(nonatomic, readwrite) BOOL hasVertical;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ChartShape_CategoryShape*> *categoryShapesArray;
/** The number of items in @c categoryShapesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger categoryShapesArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Shape*> *seriesLinesArray;
/** The number of items in @c seriesLinesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger seriesLinesArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Shape*> *dropLinesArray;
/** The number of items in @c dropLinesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger dropLinesArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Shape*> *upDownBarsArray;
/** The number of items in @c upDownBarsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger upDownBarsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Shape*> *markersArray;
/** The number of items in @c markersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger markersArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
